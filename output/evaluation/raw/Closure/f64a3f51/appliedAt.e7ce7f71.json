{"2": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [[">", [40782, 40783]]]}, "22": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkState(isFoldableExpressBlock(n))", [22422, 22473]]]}, "23": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkState(isReturnExpressBlock(n))", [23026, 23075]]]}, "24": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkState(isVarBlock(n))", [23618, 23657]]]}, "35": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["NodeUtil.has(n, isPropertyAssignmentInExpressionPredicate,\n        DONT_TRAVERSE_FUNCTIONS_PREDICATE)", [25315, 25416]]]}, "41": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["first.hasOneChild()", [23469, 23488]]]}, "61": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["!=", [3524, 3526]]]}, "63": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["node", [3031, 3035]]]}, "64": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["node", [3558, 3562]]]}, "75": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkArgument(n.getType() == Token.CALL\n        || n.getType() == Token.NEW)", [33049, 33139]]]}, "77": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["newLiteralNode", [34695, 34709]]]}, "78": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [34746, 34747]]]}, "91": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["<", [37090, 37091]]]}, "93": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [36729, 36730]]]}, "94": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [37928, 37929]]]}, "95": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [38012, 38013]]]}, "96": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["regexLiteral", [38210, 38222]]]}, "97": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [38242, 38243]]]}, "111": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkState(n.getType() == Token.NEW)", [32297, 32347]]]}, "122": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["reportCodeChange()", [30903, 30921]]]}, "123": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["newRoot", [27169, 27176]]]}, "124": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [30949, 30950]]]}, "147": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [11584, 11585]]]}, "148": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["newExpr", [12207, 12214]]]}, "149": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["newExpr", [13015, 13022]]]}, "150": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [14712, 14713]]]}, "151": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["returnNode", [15510, 15520]]]}, "152": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["expr", [17092, 17096]]]}, "153": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["expr", [17576, 17580]]]}, "154": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [17613, 17614]]]}, "155": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["var", [18695, 18698]]]}, "156": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["var", [19680, 19683]]]}, "201": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["newOperator", [10705, 10716]]]}, "207": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [6812, 6813]]]}, "252": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkState(n.getType() == Token.IF)", [20113, 20162]]]}}