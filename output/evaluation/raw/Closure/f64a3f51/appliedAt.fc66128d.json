{"2": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [[">", [43390, 43391]]]}, "22": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkState(isFoldableExpressBlock(n))", [23017, 23068]]]}, "23": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkState(isReturnExpressBlock(n))", [23621, 23670]]]}, "24": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkState(isVarBlock(n))", [24213, 24252]]]}, "35": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["NodeUtil.has(n, isPropertyAssignmentInExpressionPredicate,\n        DONT_TRAVERSE_FUNCTIONS_PREDICATE)", [26329, 26430]]]}, "41": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["first.hasOneChild()", [24064, 24083]]]}, "61": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["!=", [3600, 3602]]]}, "63": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["node", [3107, 3111]]]}, "64": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["node", [3634, 3638]]]}, "75": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkArgument(n.getType() == Token.CALL\n        || n.getType() == Token.NEW)", [35663, 35753]]]}, "77": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["newLiteralNode", [37309, 37323]]]}, "78": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [37360, 37361]]]}, "91": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["<", [39698, 39699]]]}, "93": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [39337, 39338]]]}, "94": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [40536, 40537]]]}, "95": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [40620, 40621]]]}, "96": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["regexLiteral", [40818, 40830]]]}, "97": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [40850, 40851]]]}, "111": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkState(n.getType() == Token.NEW)", [34911, 34961]]]}, "122": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["reportCodeChange()", [29657, 29675]]]}, "123": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["newRoot", [29818, 29825]]]}, "124": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [33563, 33564]]]}, "147": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [12179, 12180]]]}, "148": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["newExpr", [12802, 12809]]]}, "149": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["newExpr", [13610, 13617]]]}, "150": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [15307, 15308]]]}, "151": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["returnNode", [16105, 16115]]]}, "152": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["expr", [17687, 17691]]]}, "153": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["expr", [18171, 18175]]]}, "154": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [18208, 18209]]]}, "155": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["var", [19290, 19293]]]}, "156": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["var", [20275, 20278]]]}, "201": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["newOperator", [11300, 11311]]]}, "207": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [7407, 7408]]]}, "252": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkState(n.getType() == Token.IF)", [20708, 20757]]]}}