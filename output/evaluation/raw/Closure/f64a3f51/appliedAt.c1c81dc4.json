{"2": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [[">", [38985, 38986]]]}, "22": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkState(isFoldableExpressBlock(n))", [21230, 21281]]]}, "23": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkState(isReturnExpressBlock(n))", [21834, 21883]]]}, "24": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkState(isVarBlock(n))", [22426, 22465]]]}, "35": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["NodeUtil.has(n, isPropertyAssignmentInExpressionPredicate,\n        DONT_TRAVERSE_FUNCTIONS_PREDICATE)", [24123, 24224]]]}, "41": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["first.hasOneChild()", [22277, 22296]]]}, "61": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["!=", [3437, 3439]]]}, "63": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["node", [3031, 3035]]]}, "64": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["node", [3471, 3475]]]}, "75": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkArgument(n.getType() == Token.CALL\n        || n.getType() == Token.NEW)", [31512, 31602]]]}, "77": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["newLiteralNode", [33158, 33172]]]}, "78": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [33209, 33210]]]}, "91": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["<", [35553, 35554]]]}, "93": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [35192, 35193]]]}, "94": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [36391, 36392]]]}, "95": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [36475, 36476]]]}, "96": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["regexLiteral", [36673, 36685]]]}, "97": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [36705, 36706]]]}, "111": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkState(n.getType() == Token.NEW)", [30760, 30810]]]}, "122": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["reportCodeChange()", [29366, 29384]]]}, "123": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["newRoot", [25977, 25984]]]}, "124": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [29412, 29413]]]}, "147": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [11497, 11498]]]}, "148": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["newExpr", [12120, 12127]]]}, "149": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["newExpr", [12928, 12935]]]}, "150": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [13520, 13521]]]}, "151": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["returnNode", [14318, 14328]]]}, "152": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["expr", [15900, 15904]]]}, "153": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["expr", [16384, 16388]]]}, "154": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [16421, 16422]]]}, "155": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["var", [17503, 17506]]]}, "156": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["var", [18488, 18491]]]}, "201": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["newOperator", [10618, 10629]]]}, "207": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["n", [6725, 6726]]]}, "252": {"src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": [["Preconditions.checkState(n.getType() == Token.IF)", [18921, 18970]]]}}