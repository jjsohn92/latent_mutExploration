{"21": {"src/com/google/javascript/jscomp/Compiler.java": [["==", [22701, 22703]]]}, "30": {"src/com/google/javascript/jscomp/Compiler.java": [["runCustomPasses(CustomPassExecutionTime.BEFORE_CHECKS)", [22549, 22603]]]}, "31": {"src/com/google/javascript/jscomp/Compiler.java": [["runCustomPasses(CustomPassExecutionTime.BEFORE_OPTIMIZATIONS)", [23533, 23594]]]}, "76": {"src/com/google/javascript/jscomp/Compiler.java": [["compile(extern, new JSSourceFile[] { input }, options)", [15920, 15974]]]}, "78": {"src/com/google/javascript/jscomp/Compiler.java": [["compile(new JSSourceFile[] { extern }, input, options)", [16094, 16148]]]}, "79": {"src/com/google/javascript/jscomp/Compiler.java": [["Preconditions.checkState(jsRoot == null)", [16868, 16908]]]}, "80": {"src/com/google/javascript/jscomp/Compiler.java": [["errorManager.generateReport()", [17112, 17141]]]}, "81": {"src/com/google/javascript/jscomp/Compiler.java": [["stopTracer(t, \"generateReport\")", [17149, 17180]]]}, "88": {"src/com/google/javascript/jscomp/Compiler.java": [["==", [21093, 21095]]]}, "109": {"src/com/google/javascript/jscomp/Compiler.java": [["Preconditions.checkState(jsRoot == null)", [17739, 17779]]]}, "110": {"src/com/google/javascript/jscomp/Compiler.java": [["errorManager.generateReport()", [17991, 18020]]]}, "111": {"src/com/google/javascript/jscomp/Compiler.java": [["stopTracer(t, \"generateReport\")", [18028, 18059]]]}, "119": {"src/com/google/javascript/jscomp/Compiler.java": [["stopTracer(tracer, \"computeCFG\")", [50920, 50952]]]}, "129": {"src/com/google/javascript/jscomp/Compiler.java": [["Preconditions.checkState(currentTracer != null,\n        \"Tracer should not be null at the end of a pass.\")", [26061, 26167]]]}, "130": {"src/com/google/javascript/jscomp/Compiler.java": [["stopTracer(currentTracer, currentPassName)", [26173, 26215]]]}, "131": {"src/com/google/javascript/jscomp/Compiler.java": [["maybeSanityCheck()", [26318, 26336]]]}, "135": {"src/com/google/javascript/jscomp/Compiler.java": [["endPass()", [23851, 23860]]]}, "136": {"src/com/google/javascript/jscomp/Compiler.java": [["warningsGuard.level(error)", [54875, 54901]]]}, "137": {"src/com/google/javascript/jscomp/Compiler.java": [["Collections.<CompilerInput>unmodifiableList(inputs)", [59070, 59121]]]}, "138": {"src/com/google/javascript/jscomp/Compiler.java": [[">", [57758, 57759]]]}, "150": {"src/com/google/javascript/jscomp/Compiler.java": [["sourceMap", [57940, 57949]]]}, "151": {"src/com/google/javascript/jscomp/Compiler.java": [["getPassConfig().getTopScope()", [33435, 33464]]]}, "152": {"src/com/google/javascript/jscomp/Compiler.java": [["getPassConfig().getTypedScopeCreator()", [31998, 32036]]]}, "156": {"src/com/google/javascript/jscomp/Compiler.java": [["printer.setSummaryDetailLevel(options.summaryDetailLevel)", [7786, 7843]]]}, "166": {"src/com/google/javascript/jscomp/Compiler.java": [["==", [24238, 24240]]]}, "172": {"src/com/google/javascript/jscomp/Compiler.java": [["endPass()", [51117, 51126]]]}, "173": {"src/com/google/javascript/jscomp/Compiler.java": [["==", [49529, 49531]]]}, "181": {"src/com/google/javascript/jscomp/Compiler.java": [["initCompilerOptionsIfTesting()", [38709, 38739]]]}, "182": {"src/com/google/javascript/jscomp/Compiler.java": [["addToDebugLog(\"Parsing: \" + file.getName())", [38745, 38788]]]}, "184": {"src/com/google/javascript/jscomp/Compiler.java": [["!=", [38393, 38395]]]}, "185": {"src/com/google/javascript/jscomp/Compiler.java": [["stopTracer(tracer, \"parseInputs\")", [38618, 38651]]]}, "207": {"src/com/google/javascript/jscomp/Compiler.java": [["initCompilerOptionsIfTesting()", [39436, 39466]]]}, "228": {"src/com/google/javascript/jscomp/Compiler.java": [["Preconditions.checkState(currentTracer == null)", [25869, 25916]]]}, "232": {"src/com/google/javascript/jscomp/Compiler.java": [["e.setStackTrace(cause.getStackTrace())", [55236, 55274]]]}, "236": {"src/com/google/javascript/jscomp/Compiler.java": [["==", [62005, 62007]]]}, "237": {"src/com/google/javascript/jscomp/Compiler.java": [["Preconditions.checkState(collectionRoot.getType() == Token.SCRIPT\n        || collectionRoot.getType() == Token.BLOCK)", [61955, 62072]]]}}