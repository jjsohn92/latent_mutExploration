{"0": {"src/com/google/javascript/jscomp/MustBeReachingVariableDef.java": [["computeEscaped(jsScope, escaped, compiler)", [2123, 2165]]]}, "7": {"src/com/google/javascript/jscomp/MustBeReachingVariableDef.java": [["computeMustDef(\n            NodeUtil.getConditionExpression(n), cfgNode, output, conditional)", [7523, 7616]]]}, "8": {"src/com/google/javascript/jscomp/MustBeReachingVariableDef.java": [["computeMustDef(\n              NodeUtil.getConditionExpression(n), cfgNode, output, conditional)", [7703, 7798]]]}, "9": {"src/com/google/javascript/jscomp/MustBeReachingVariableDef.java": [["computeMustDef(n.getLastChild(), cfgNode, output, true)", [8289, 8344]]]}, "10": {"src/com/google/javascript/jscomp/MustBeReachingVariableDef.java": [["computeMustDef(n.getFirstChild(), cfgNode, output, conditional)", [8394, 8457]]]}, "11": {"src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java": [["!=", [15828, 15830]]]}, "12": {"src/com/google/javascript/jscomp/MustBeReachingVariableDef.java": [["computeMustDef(name.getNext(), cfgNode, output, conditional)", [9132, 9192]]]}, "13": {"src/com/google/javascript/jscomp/MustBeReachingVariableDef.java": [["escapeParameters(output)", [9797, 9821]]]}, "55": {"src/com/google/javascript/jscomp/MustBeReachingVariableDef.java": [["Preconditions.checkArgument(getCfg().hasNode(useNode))", [13881, 13935]]]}, "65": {"src/com/google/javascript/jscomp/MustBeReachingVariableDef.java": [["Preconditions.checkArgument(getCfg().hasNode(useNode))", [13486, 13540]]]}, "68": {"src/com/google/javascript/jscomp/MustBeReachingVariableDef.java": [["v.getParentNode().isParamList()", [12406, 12437]]]}, "1": {"src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java": [["!=", [16421, 16423]]]}, "2": {"src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java": [["true", [16610, 16614]]]}, "15": {"src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java": [["<", [4439, 4440]]]}, "18": {"src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java": [["Preconditions.checkState(t.getScopeRoot().isFunction())", [4671, 4726]]]}}