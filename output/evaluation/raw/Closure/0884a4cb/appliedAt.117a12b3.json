{"0": {"src/com/google/javascript/jscomp/NodeUtil.java": [["allResultsMatch(n.getFirstChild().getNext(), p)\n            && allResultsMatch(n.getLastChild(), p)", [37337, 37436]]]}, "13": {"src/com/google/javascript/jscomp/NodeUtil.java": [["anyResultsMatch(n.getLastChild(), p)", [37748, 37784]]]}, "24": {"src/com/google/javascript/jscomp/NodeUtil.java": [["++", [7949, 7951]]]}, "36": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.isCall())", [31224, 31260]]]}, "41": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(isFunctionExpression(n))", [33820, 33869]]]}, "117": {"src/com/google/javascript/jscomp/NodeUtil.java": [["evaluatesToLocalValue(value.getFirstChild(), locals)", [85841, 85893]]]}, "118": {"src/com/google/javascript/jscomp/NodeUtil.java": [["locals.apply(value)", [85983, 86002]]]}, "166": {"src/com/google/javascript/jscomp/NodeUtil.java": [["false", [29815, 29820]]]}, "202": {"src/com/google/javascript/jscomp/NodeUtil.java": [["==", [66222, 66224]]]}, "203": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(addingRoot.isBlock() ||\n        addingRoot.isScript())", [66085, 66164]]]}, "204": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(addingRoot.getFirstChild() == null ||\n        !addingRoot.getFirstChild().isScript())", [66170, 66280]]]}, "219": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(isCallOrNew(call))", [88209, 88252]]]}, "220": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(function.isFunction())", [87872, 87919]]]}, "223": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.isName())", [44665, 44701]]]}, "227": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.getJSDocInfo()", [89356, 89377]]]}, "253": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.isTry())", [80449, 80487]]]}, "256": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(fn.isFunction())", [54185, 54229]]]}, "258": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.isFunction())", [12649, 12689]]]}, "259": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(fnNode.isFunction())", [81029, 81077]]]}, "317": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(current.isGetProp())", [68324, 68369]]]}, "320": {"src/com/google/javascript/jscomp/NodeUtil.java": [[">", [10028, 10029]]]}, "321": {"src/com/google/javascript/jscomp/NodeUtil.java": [[">", [10344, 10345]]]}, "369": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.isBlock())", [80689, 80729]]]}, "374": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.isTry())", [80237, 80275]]]}, "402": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.getFirstChild() == n", [47600, 47627]]]}, "433": {"src/com/google/javascript/jscomp/NodeUtil.java": [["==", [92320, 92322]]]}, "434": {"src/com/google/javascript/jscomp/NodeUtil.java": [["(expr == parent.getFirstChild())\n            ? true : isExpressionResultUsed(parent)", [92314, 92398]]]}, "474": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.isName() || n.isGetProp() ||\n        n.isGetElem())", [58910, 58991]]]}, "503": {"src/com/google/javascript/jscomp/NodeUtil.java": [["!=", [17866, 17868]]]}, "504": {"src/com/google/javascript/jscomp/NodeUtil.java": [["includeFunctions && !NodeUtil.isFunctionDeclaration(n)", [18410, 18464]]]}, "569": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(parent != null)", [49494, 49534]]]}, "573": {"src/com/google/javascript/jscomp/NodeUtil.java": [["(Character.getType(c) == Character.SPACE_SEPARATOR)\n            ? TernaryValue.TRUE : TernaryValue.FALSE", [11873, 11977]]]}, "629": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(function.isFunction())", [56592, 56642]]]}, "650": {"src/com/google/javascript/jscomp/NodeUtil.java": [["mayBeStringHelper(n)", [41056, 41076]]]}, "665": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(tryNode.isTry())", [53062, 53103]]]}, "667": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.isNew())", [31444, 31479]]]}, "670": {"src/com/google/javascript/jscomp/NodeUtil.java": [["nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true)", [69079, 69131]]]}, "685": {"src/com/google/javascript/jscomp/NodeUtil.java": [["nameNode.putProp(Node.ORIGINALNAME_PROP, originalName)", [70316, 70370]]]}, "700": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(value.getNext() == null)", [75188, 75237]]]}, "704": {"src/com/google/javascript/jscomp/NodeUtil.java": [["NodeUtil.constructorCallHasSideEffects(n, compiler)", [32303, 32354]]]}, "724": {"src/com/google/javascript/jscomp/NodeUtil.java": [["5", [35116, 35117]]]}, "725": {"src/com/google/javascript/jscomp/NodeUtil.java": [["6", [35151, 35152]]]}, "726": {"src/com/google/javascript/jscomp/NodeUtil.java": [["7", [35186, 35187]]]}, "727": {"src/com/google/javascript/jscomp/NodeUtil.java": [["8", [35286, 35287]]]}, "728": {"src/com/google/javascript/jscomp/NodeUtil.java": [["10", [35513, 35515]]]}, "770": {"src/com/google/javascript/jscomp/NodeUtil.java": [["copyNameAnnotations(nameNode, var.getFirstChild())", [65125, 65175]]]}, "774": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(NodeUtil.hasFinally(tryNode))", [51166, 51220]]]}, "775": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(NodeUtil.hasFinally(tryNode))", [51467, 51521]]]}, "776": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.removeChild(node)", [52067, 52091]]]}, "797": {"src/com/google/javascript/jscomp/NodeUtil.java": [["node.putProp(Node.ORIGINALNAME_PROP, originalName)", [68861, 68911]]]}, "806": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(block.isBlock())", [53365, 53406]]]}}