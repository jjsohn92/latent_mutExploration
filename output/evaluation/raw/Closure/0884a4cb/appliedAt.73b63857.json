{"0": {"src/com/google/javascript/jscomp/NodeUtil.java": [["allResultsMatch(n.getFirstChild().getNext(), p)\n            && allResultsMatch(n.getLastChild(), p)", [37333, 37432]]]}, "13": {"src/com/google/javascript/jscomp/NodeUtil.java": [["anyResultsMatch(n.getLastChild(), p)", [37744, 37780]]]}, "24": {"src/com/google/javascript/jscomp/NodeUtil.java": [["++", [7945, 7947]]]}, "36": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.isCall())", [31220, 31256]]]}, "41": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(isFunctionExpression(n))", [33816, 33865]]]}, "117": {"src/com/google/javascript/jscomp/NodeUtil.java": [["evaluatesToLocalValue(value.getFirstChild(), locals)", [85837, 85889]]]}, "118": {"src/com/google/javascript/jscomp/NodeUtil.java": [["locals.apply(value)", [85979, 85998]]]}, "166": {"src/com/google/javascript/jscomp/NodeUtil.java": [["false", [29811, 29816]]]}, "202": {"src/com/google/javascript/jscomp/NodeUtil.java": [["==", [66218, 66220]]]}, "203": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(addingRoot.isBlock() ||\n        addingRoot.isScript())", [66081, 66160]]]}, "204": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(addingRoot.getFirstChild() == null ||\n        !addingRoot.getFirstChild().isScript())", [66166, 66276]]]}, "219": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(isCallOrNew(call))", [88205, 88248]]]}, "220": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(function.isFunction())", [87868, 87915]]]}, "223": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.isName())", [44661, 44697]]]}, "227": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.getJSDocInfo()", [89352, 89373]]]}, "253": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.isTry())", [80445, 80483]]]}, "256": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(fn.isFunction())", [54181, 54225]]]}, "258": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.isFunction())", [12645, 12685]]]}, "259": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(fnNode.isFunction())", [81025, 81073]]]}, "317": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(current.isGetProp())", [68320, 68365]]]}, "320": {"src/com/google/javascript/jscomp/NodeUtil.java": [[">", [10024, 10025]]]}, "321": {"src/com/google/javascript/jscomp/NodeUtil.java": [[">", [10340, 10341]]]}, "369": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.isBlock())", [80685, 80725]]]}, "374": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.isTry())", [80233, 80271]]]}, "402": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.getFirstChild() == n", [47596, 47623]]]}, "433": {"src/com/google/javascript/jscomp/NodeUtil.java": [["==", [92316, 92318]]]}, "434": {"src/com/google/javascript/jscomp/NodeUtil.java": [["(expr == parent.getFirstChild())\n            ? true : isExpressionResultUsed(parent)", [92310, 92394]]]}, "474": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.isName() || n.isGetProp() ||\n        n.isGetElem())", [58906, 58987]]]}, "503": {"src/com/google/javascript/jscomp/NodeUtil.java": [["!=", [17862, 17864]]]}, "504": {"src/com/google/javascript/jscomp/NodeUtil.java": [["includeFunctions && !NodeUtil.isFunctionDeclaration(n)", [18406, 18460]]]}, "569": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(parent != null)", [49490, 49530]]]}, "573": {"src/com/google/javascript/jscomp/NodeUtil.java": [["(Character.getType(c) == Character.SPACE_SEPARATOR)\n            ? TernaryValue.TRUE : TernaryValue.FALSE", [11869, 11973]]]}, "629": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(function.isFunction())", [56588, 56638]]]}, "650": {"src/com/google/javascript/jscomp/NodeUtil.java": [["mayBeStringHelper(n)", [41052, 41072]]]}, "665": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(tryNode.isTry())", [53058, 53099]]]}, "667": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.isNew())", [31440, 31475]]]}, "670": {"src/com/google/javascript/jscomp/NodeUtil.java": [["nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true)", [69075, 69127]]]}, "685": {"src/com/google/javascript/jscomp/NodeUtil.java": [["nameNode.putProp(Node.ORIGINALNAME_PROP, originalName)", [70312, 70366]]]}, "700": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(value.getNext() == null)", [75184, 75233]]]}, "704": {"src/com/google/javascript/jscomp/NodeUtil.java": [["NodeUtil.constructorCallHasSideEffects(n, compiler)", [32299, 32350]]]}, "724": {"src/com/google/javascript/jscomp/NodeUtil.java": [["5", [35112, 35113]]]}, "725": {"src/com/google/javascript/jscomp/NodeUtil.java": [["6", [35147, 35148]]]}, "726": {"src/com/google/javascript/jscomp/NodeUtil.java": [["7", [35182, 35183]]]}, "727": {"src/com/google/javascript/jscomp/NodeUtil.java": [["8", [35282, 35283]]]}, "728": {"src/com/google/javascript/jscomp/NodeUtil.java": [["10", [35509, 35511]]]}, "770": {"src/com/google/javascript/jscomp/NodeUtil.java": [["copyNameAnnotations(nameNode, var.getFirstChild())", [65121, 65171]]]}, "774": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(NodeUtil.hasFinally(tryNode))", [51162, 51216]]]}, "775": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(NodeUtil.hasFinally(tryNode))", [51463, 51517]]]}, "776": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.removeChild(node)", [52063, 52087]]]}, "797": {"src/com/google/javascript/jscomp/NodeUtil.java": [["node.putProp(Node.ORIGINALNAME_PROP, originalName)", [68857, 68907]]]}, "806": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(block.isBlock())", [53361, 53402]]]}}