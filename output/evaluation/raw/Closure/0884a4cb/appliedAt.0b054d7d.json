{"0": {"src/com/google/javascript/jscomp/NodeUtil.java": [["allResultsMatch(n.getFirstChild().getNext(), p)\n            && allResultsMatch(n.getLastChild(), p)", [37590, 37689]]]}, "13": {"src/com/google/javascript/jscomp/NodeUtil.java": [["anyResultsMatch(n.getLastChild(), p)", [38078, 38114]]]}, "24": {"src/com/google/javascript/jscomp/NodeUtil.java": [["++", [7945, 7947]]]}, "36": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.isCall())", [31358, 31394]]]}, "41": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(isFunctionExpression(n))", [33954, 34003]]]}, "117": {"src/com/google/javascript/jscomp/NodeUtil.java": [["evaluatesToLocalValue(value.getFirstChild(), locals)", [86263, 86315]]]}, "118": {"src/com/google/javascript/jscomp/NodeUtil.java": [["locals.apply(value)", [86405, 86424]]]}, "166": {"src/com/google/javascript/jscomp/NodeUtil.java": [["false", [29949, 29954]]]}, "202": {"src/com/google/javascript/jscomp/NodeUtil.java": [["==", [66552, 66554]]]}, "203": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(addingRoot.isBlock() ||\n        addingRoot.isScript())", [66415, 66494]]]}, "204": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(addingRoot.getFirstChild() == null ||\n        !addingRoot.getFirstChild().isScript())", [66500, 66610]]]}, "219": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(isCallOrNew(call))", [88631, 88674]]]}, "220": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(function.isFunction())", [88294, 88341]]]}, "223": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.isName())", [44995, 45031]]]}, "227": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.getJSDocInfo()", [89778, 89799]]]}, "253": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.isTry())", [80779, 80817]]]}, "256": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(fn.isFunction())", [54515, 54559]]]}, "258": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.isFunction())", [12645, 12685]]]}, "259": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(fnNode.isFunction())", [81359, 81407]]]}, "317": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(current.isGetProp())", [68654, 68699]]]}, "320": {"src/com/google/javascript/jscomp/NodeUtil.java": [[">", [10024, 10025]]]}, "321": {"src/com/google/javascript/jscomp/NodeUtil.java": [[">", [10340, 10341]]]}, "369": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.isBlock())", [81019, 81059]]]}, "374": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.isTry())", [80567, 80605]]]}, "402": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.getFirstChild() == n", [47930, 47957]]]}, "433": {"src/com/google/javascript/jscomp/NodeUtil.java": [["==", [92956, 92958]]]}, "434": {"src/com/google/javascript/jscomp/NodeUtil.java": [["(expr == parent.getFirstChild())\n            ? true : isExpressionResultUsed(parent)", [92950, 93034]]]}, "474": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.isName() || n.isGetProp() ||\n        n.isGetElem())", [59240, 59321]]]}, "503": {"src/com/google/javascript/jscomp/NodeUtil.java": [["!=", [17977, 17979]]]}, "504": {"src/com/google/javascript/jscomp/NodeUtil.java": [["includeFunctions && !NodeUtil.isFunctionDeclaration(n)", [18521, 18575]]]}, "569": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(parent != null)", [49824, 49864]]]}, "573": {"src/com/google/javascript/jscomp/NodeUtil.java": [["(Character.getType(c) == Character.SPACE_SEPARATOR)\n            ? TernaryValue.TRUE : TernaryValue.FALSE", [11869, 11973]]]}, "629": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(function.isFunction())", [56922, 56972]]]}, "650": {"src/com/google/javascript/jscomp/NodeUtil.java": [["mayBeStringHelper(n)", [41386, 41406]]]}, "665": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(tryNode.isTry())", [53392, 53433]]]}, "667": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.isNew())", [31578, 31613]]]}, "670": {"src/com/google/javascript/jscomp/NodeUtil.java": [["nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true)", [69409, 69461]]]}, "685": {"src/com/google/javascript/jscomp/NodeUtil.java": [["nameNode.putProp(Node.ORIGINALNAME_PROP, originalName)", [70646, 70700]]]}, "700": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(value.getNext() == null)", [75518, 75567]]]}, "704": {"src/com/google/javascript/jscomp/NodeUtil.java": [["NodeUtil.constructorCallHasSideEffects(n, compiler)", [32437, 32488]]]}, "724": {"src/com/google/javascript/jscomp/NodeUtil.java": [["5", [35250, 35251]]]}, "725": {"src/com/google/javascript/jscomp/NodeUtil.java": [["6", [35285, 35286]]]}, "726": {"src/com/google/javascript/jscomp/NodeUtil.java": [["7", [35320, 35321]]]}, "727": {"src/com/google/javascript/jscomp/NodeUtil.java": [["8", [35420, 35421]]]}, "728": {"src/com/google/javascript/jscomp/NodeUtil.java": [["10", [35647, 35649]]]}, "770": {"src/com/google/javascript/jscomp/NodeUtil.java": [["copyNameAnnotations(nameNode, var.getFirstChild())", [65455, 65505]]]}, "774": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(NodeUtil.hasFinally(tryNode))", [51496, 51550]]]}, "775": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(NodeUtil.hasFinally(tryNode))", [51797, 51851]]]}, "776": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.removeChild(node)", [52397, 52421]]]}, "797": {"src/com/google/javascript/jscomp/NodeUtil.java": [["node.putProp(Node.ORIGINALNAME_PROP, originalName)", [69191, 69241]]]}, "806": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(block.isBlock())", [53695, 53736]]]}}