{"0": {"src/com/google/javascript/jscomp/NodeUtil.java": [["allResultsMatch(n.getFirstChild().getNext(), p)\n            && allResultsMatch(n.getLastChild(), p)", [37864, 37963]]]}, "13": {"src/com/google/javascript/jscomp/NodeUtil.java": [["anyResultsMatch(n.getLastChild(), p)", [38352, 38388]]]}, "24": {"src/com/google/javascript/jscomp/NodeUtil.java": [["++", [7945, 7947]]]}, "36": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.isCall())", [31358, 31394]]]}, "41": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(isFunctionExpression(n))", [33954, 34003]]]}, "117": {"src/com/google/javascript/jscomp/NodeUtil.java": [["evaluatesToLocalValue(value.getFirstChild(), locals)", [86215, 86267]]]}, "118": {"src/com/google/javascript/jscomp/NodeUtil.java": [["locals.apply(value)", [86357, 86376]]]}, "166": {"src/com/google/javascript/jscomp/NodeUtil.java": [["false", [29949, 29954]]]}, "202": {"src/com/google/javascript/jscomp/NodeUtil.java": [["==", [66826, 66828]]]}, "203": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(addingRoot.isBlock() ||\n        addingRoot.isScript())", [66689, 66768]]]}, "204": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(addingRoot.getFirstChild() == null ||\n        !addingRoot.getFirstChild().isScript())", [66774, 66884]]]}, "219": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(isCallOrNew(call))", [88583, 88626]]]}, "220": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(function.isFunction())", [88246, 88293]]]}, "223": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.isName())", [45269, 45305]]]}, "227": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.getJSDocInfo()", [89730, 89751]]]}, "253": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.isTry())", [81053, 81091]]]}, "256": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(fn.isFunction())", [54789, 54833]]]}, "258": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.isFunction())", [12645, 12685]]]}, "259": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(fnNode.isFunction())", [81633, 81681]]]}, "317": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(current.isGetProp())", [68928, 68973]]]}, "320": {"src/com/google/javascript/jscomp/NodeUtil.java": [[">", [10024, 10025]]]}, "321": {"src/com/google/javascript/jscomp/NodeUtil.java": [[">", [10340, 10341]]]}, "369": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.isBlock())", [81293, 81333]]]}, "374": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.isTry())", [80841, 80879]]]}, "402": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.getFirstChild() == n", [48204, 48231]]]}, "433": {"src/com/google/javascript/jscomp/NodeUtil.java": [["==", [92908, 92910]]]}, "434": {"src/com/google/javascript/jscomp/NodeUtil.java": [["(expr == parent.getFirstChild())\n            ? true : isExpressionResultUsed(parent)", [92902, 92986]]]}, "474": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.isName() || n.isGetProp() ||\n        n.isGetElem())", [59514, 59595]]]}, "503": {"src/com/google/javascript/jscomp/NodeUtil.java": [["!=", [17977, 17979]]]}, "504": {"src/com/google/javascript/jscomp/NodeUtil.java": [["includeFunctions && !NodeUtil.isFunctionDeclaration(n)", [18521, 18575]]]}, "569": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(parent != null)", [50098, 50138]]]}, "573": {"src/com/google/javascript/jscomp/NodeUtil.java": [["(Character.getType(c) == Character.SPACE_SEPARATOR)\n            ? TernaryValue.TRUE : TernaryValue.FALSE", [11869, 11973]]]}, "629": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(function.isFunction())", [57196, 57246]]]}, "650": {"src/com/google/javascript/jscomp/NodeUtil.java": [["mayBeStringHelper(n)", [41660, 41680]]]}, "665": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(tryNode.isTry())", [53666, 53707]]]}, "667": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.isNew())", [31578, 31613]]]}, "670": {"src/com/google/javascript/jscomp/NodeUtil.java": [["nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true)", [69683, 69735]]]}, "685": {"src/com/google/javascript/jscomp/NodeUtil.java": [["nameNode.putProp(Node.ORIGINALNAME_PROP, originalName)", [70920, 70974]]]}, "700": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(value.getNext() == null)", [75792, 75841]]]}, "704": {"src/com/google/javascript/jscomp/NodeUtil.java": [["NodeUtil.constructorCallHasSideEffects(n, compiler)", [32437, 32488]]]}, "724": {"src/com/google/javascript/jscomp/NodeUtil.java": [["5", [35250, 35251]]]}, "725": {"src/com/google/javascript/jscomp/NodeUtil.java": [["6", [35285, 35286]]]}, "726": {"src/com/google/javascript/jscomp/NodeUtil.java": [["7", [35320, 35321]]]}, "727": {"src/com/google/javascript/jscomp/NodeUtil.java": [["8", [35420, 35421]]]}, "728": {"src/com/google/javascript/jscomp/NodeUtil.java": [["10", [35647, 35649]]]}, "770": {"src/com/google/javascript/jscomp/NodeUtil.java": [["copyNameAnnotations(nameNode, var.getFirstChild())", [65729, 65779]]]}, "774": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(NodeUtil.hasFinally(tryNode))", [51770, 51824]]]}, "775": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(NodeUtil.hasFinally(tryNode))", [52071, 52125]]]}, "776": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.removeChild(node)", [52671, 52695]]]}, "797": {"src/com/google/javascript/jscomp/NodeUtil.java": [["node.putProp(Node.ORIGINALNAME_PROP, originalName)", [69465, 69515]]]}, "806": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(block.isBlock())", [53969, 54010]]]}}