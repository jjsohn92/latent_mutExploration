<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFallThrough</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>6</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForIn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFallThrough</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>799</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>4</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDoWhileOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFallThrough</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFallThrough</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>802</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>24</index><block>9</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForIn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFallThrough</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFallThrough</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>31</index><block>12</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForLoopOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFallThrough</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFallThrough</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>806</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>38</index><block>15</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testLabelledForInLoopOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFallThrough</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFallThrough</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>43</index><block>16</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakInFinally1(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFallThrough</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="9"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>com.google.javascript.jscomp.CreateSyntheticBlocksTest.testFoldWithMarkers1(com.google.javascript.jscomp.CreateSyntheticBlocksTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFollowNode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleStatements(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFollowNode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleStatements(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>3</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleStatements(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>4</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testPartialTraversalOfScope(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>5</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleStatements(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>12</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleSwitch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>15</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleSwitch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>22</block><killingTest>com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testSubsituteReturn(com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>31</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForIn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>114</index><block>39</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>751</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><block>41</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>140</index><block>48</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleFinally(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>145</index><block>50</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>166</index><block>57</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDeepNestedFinally(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>170</index><block>58</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDeepNestedFinally(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>779</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>216</index><block>71</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testPartialTraversalOfScope(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>779</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>219</index><block>73</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleStatements(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>230</index><block>76</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testPartialTraversalOfScope(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>75</index><block>26</block><killingTest /><description>removed call to com/google/common/base/Preconditions::checkState</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>194</index><block>65</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDeepNestedFinally(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>37</index><block>10</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleCatchFinally(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFollowNode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>56</index><block>19</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testSwitch4(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFollowNode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>69</index><block>25</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testSwitch1(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFollowNode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>84</index><block>29</block><killingTest>com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testRemoveDuplicateReturn(com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFollowNode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>94</index><block>32</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForIn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFollowNode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>102</index><block>36</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForLoopOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFollowNode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>747</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>107</index><block>37</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedDoWithBreak(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFollowNode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>125</index><block>44</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleFinally(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFollowNode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="23"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>754</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>133</index><block>46</block><killingTest>com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testErrorHandling(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFollowNode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>759</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>151</index><block>53</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleCatchFinally(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFollowNode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>159</index><block>55</block><killingTest>com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testRemoveDuplicateThrow(com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFollowNode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>205</index><block>68</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDeepNestedFinally(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFollowNode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>784</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>235</index><block>78</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleStatements(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFollowNode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>computeFollowNode</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>243</index><block>80</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForIn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::computeFollowNode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>connectToPossibleExceptionHandler</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>connectToPossibleExceptionHandler</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>3</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>connectToPossibleExceptionHandler</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>834</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>10</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>connectToPossibleExceptionHandler</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>840</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>16</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDeepNestedFinally(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>connectToPossibleExceptionHandler</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>17</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDeepNestedFinally(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>connectToPossibleExceptionHandler</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>847</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>24</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="35"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>connectToPossibleExceptionHandler</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>837</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>13</block><killingTest /><description>removed call to com/google/common/base/Preconditions::checkState</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>connectToPossibleExceptionHandler</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>842</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>19</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDeepNestedFinally(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>connectToPossibleExceptionHandler</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>90</index><block>25</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>createEdge</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowGraph$Branch;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>822</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>2</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakInFinally1(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowGraph::connectIfNotFound</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>getCatchHandlerForBlock</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>988</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testRemoveDuplicateReturn(com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>getCatchHandlerForBlock</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>988</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>4</block><killingTest>com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testRemoveDuplicateReturn(com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>getCatchHandlerForBlock</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>988</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>7</block><killingTest>com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testRemoveDuplicateReturn(com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>getCatchHandlerForBlock</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>991</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>10</block><killingTest>com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testRemoveDuplicateReturn(com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>getCatchHandlerForBlock</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>12</block><killingTest>com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testRemoveDuplicateReturn(com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>getCatchHandlerForBlock</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>33</index><block>14</block><killingTest>com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testRemoveDuplicateReturn(com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::getCatchHandlerForBlock</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>getCfg</mutatedMethod><methodDescription>()Lcom/google/javascript/jscomp/ControlFlowGraph;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testPartialTraversalOfScope(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::getCfg</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>getExceptionHandler</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest>com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testRemoveDuplicateReturn(com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>getExceptionHandler</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>4</block><killingTest>com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testRemoveDuplicateReturn(com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>getExceptionHandler</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>6</block><killingTest>com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testRemoveDuplicateReturn(com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>getExceptionHandler</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>26</index><block>7</block><killingTest>com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testRemoveDuplicateReturn(com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::getExceptionHandler</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>getNextSiblingOfType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;[I)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>864</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>3</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleNoDefault(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>getNextSiblingOfType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;[I)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>864</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>42</index><block>7</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleNoDefault(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>getNextSiblingOfType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;[I)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSwitchEmpty(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>getNextSiblingOfType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;[I)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>864</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>3</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSwitchDefaultInMiddle(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>getNextSiblingOfType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;[I)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>5</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleNoDefault(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>getNextSiblingOfType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;[I)Lcom/google/javascript/rhino/Node;</methodDescription><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>38</index><block>6</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSwitchDefaultInMiddle(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/ControlFlowAnalysis::getNextSiblingOfType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleBreak</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakingBlock(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleBreak</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>8</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleWhile(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleBreak</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>10</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakingBlock(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleBreak</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>12</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDeepNestedBreakwithFinally(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleBreak</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>14</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakInFinally2(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleBreak</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>15</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDeepNestedBreakwithFinally(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleBreak</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><block>25</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakingBlock(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleBreak</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>27</block><killingTest>com.google.javascript.jscomp.IntegrationTest.testBadBreakStatementInIdeMode(com.google.javascript.jscomp.IntegrationTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleBreak</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>123</index><block>33</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleWhile(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleBreak</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>18</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDeepNestedBreakwithFinally(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleBreak</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>132</index><block>35</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleWhile(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleCase</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>5</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleNoDefault(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleCase</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>14</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleNoDefault(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleCase</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>2</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleSwitch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleCase</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>7</block><killingTest /><description>removed call to com/google/common/base/Preconditions::checkState</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleCase</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>8</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleSwitch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleCase</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>68</index><block>15</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleSwitch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleCase</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><block>18</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleNoDefault(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="40"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleCase</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>87</index><block>20</block><killingTest /><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::connectToPossibleExceptionHandler</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleCatch</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleContinue</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleForWithContinue(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleContinue</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>8</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleForWithContinue(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleContinue</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>10</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleForWithContinue(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleContinue</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>12</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testComplicatedFinally2(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleContinue</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>14</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testComplicatedFinally2(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleContinue</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>15</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testComplicatedFinally2(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleContinue</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><block>24</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleForWithContinue(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleContinue</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><block>31</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleForWithContinue(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleContinue</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>132</index><block>36</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleForWithContinue(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleContinue</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>17</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testComplicatedFinally2(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="7"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleContinue</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>96</index><block>27</block><killingTest /><description>removed call to com/google/common/base/Preconditions::checkState</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleContinue</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>139</index><block>37</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleForWithContinue(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleDefault</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTest>com.google.javascript.jscomp.CheckUnreachableCodeTest.testSpuriousBreak(com.google.javascript.jscomp.CheckUnreachableCodeTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleDo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>2</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedDoWithBreak(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleDo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>4</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedDoWithBreak(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleDo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>6</block><killingTest /><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::connectToPossibleExceptionHandler</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleExpr</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakInFinally1(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleExpr</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::connectToPossibleExceptionHandler</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFor</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForIn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFor</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>6</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForLoopOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFor</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>8</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForLoopOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFor</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>10</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForLoopOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFor</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><block>11</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleFor(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="51"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFor</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>63</index><block>12</block><killingTest /><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::connectToPossibleExceptionHandler</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="51"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFor</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>69</index><block>13</block><killingTest /><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::connectToPossibleExceptionHandler</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="51"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFor</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>75</index><block>14</block><killingTest /><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::connectToPossibleExceptionHandler</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFor</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>101</index><block>19</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForIn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFor</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>109</index><block>21</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForIn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFor</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>118</index><block>23</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForIn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="19"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFor</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>124</index><block>24</block><killingTest /><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::connectToPossibleExceptionHandler</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFunction</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>1</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFunction</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFunction</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>11</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2735"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFunction</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>4</block><killingTest /><description>removed call to com/google/common/base/Preconditions::checkState</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFunction</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>9</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleFunction(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2735"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleFunction</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>14</block><killingTest /><description>removed call to com/google/common/base/Preconditions::checkState</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleIf</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>5</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleIf(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleIf</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>4</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleIf(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleIf</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>7</block><killingTest>com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testNotReachingDefinitions(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleIf</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>10</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleIf(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="96"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleIf</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>12</block><killingTest>com.google.javascript.jscomp.CheckUnreachableCodeTest.testInstanceOfThrowsException(com.google.javascript.jscomp.CheckUnreachableCodeTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::connectToPossibleExceptionHandler</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleReturn</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturnInFinally2(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleReturn</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>6</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleReturn</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>9</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturnInFinally2(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleReturn</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>10</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturnInFinally2(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleReturn</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>21</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleReturn</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>24</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleReturn</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>47</index><block>12</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturnInFinally2(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleReturn</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>81</index><block>23</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturnThrowingException(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::connectToPossibleExceptionHandler</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleReturn</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>93</index><block>25</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleStmt</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleStatements(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1025"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleStmt</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTest>com.google.javascript.jscomp.LiveVariableAnalysisTest.testExceptionThrowingAssignments(com.google.javascript.jscomp.LiveVariableAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::connectToPossibleExceptionHandler</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="21"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleStmtList</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleFinally(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="17"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleStmtList</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>3</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleFinally(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleStmtList</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>5</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleStmtList</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>7</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleStmtList</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>9</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleStmtList</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>13</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleStmtList</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>15</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakInFinally1(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleStmtList</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>18</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakInFinally1(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleStmtList</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>24</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakInFinally1(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleStmtList</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>29</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSynBlock(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleStmtList</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><block>31</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSynBlock(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleStmtList</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>20</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakInFinally1(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleStmtList</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>69</index><block>23</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleStmtList</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>101</index><block>33</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSynBlock(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleSwitch</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>3</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSwitchEmpty(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleSwitch</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>8</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSwitchEmpty(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleSwitch</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>4</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleSwitch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleSwitch</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><block>11</block><killingTest>com.google.javascript.jscomp.CheckUnreachableCodeTest.testSpuriousBreak(com.google.javascript.jscomp.CheckUnreachableCodeTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleSwitch</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><block>14</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSwitchEmpty(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="43"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleSwitch</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><block>16</block><killingTest /><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::connectToPossibleExceptionHandler</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleThrow</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::connectToPossibleExceptionHandler</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleTry</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleWhile</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>3</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleWhile(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleWhile</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>5</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDeepNestedBreakwithFinally(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="49"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleWhile</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>7</block><killingTest /><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::connectToPossibleExceptionHandler</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleWith</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testWithStatement(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::createEdge</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>handleWith</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>3</block><killingTest /><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::connectToPossibleExceptionHandler</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>isBreakStructure</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Z)Z</methodDescription><lineNumber>942</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakingBlock(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with false for com/google/javascript/jscomp/ControlFlowAnalysis::isBreakStructure</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>isBreakStructure</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Z)Z</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>15</index><block>3</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakInFinally2(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with false for com/google/javascript/jscomp/ControlFlowAnalysis::isBreakStructure</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>isBreakStructure</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Z)Z</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>15</index><block>3</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleWhile(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with true for com/google/javascript/jscomp/ControlFlowAnalysis::isBreakStructure</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>isBreakStructure</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Z)Z</methodDescription><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>20</index><block>4</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleWhile(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with true for com/google/javascript/jscomp/ControlFlowAnalysis::isBreakStructure</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>isBreakTarget</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Ljava/lang/String;)Z</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleWhile(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>isBreakTarget</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Ljava/lang/String;)Z</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>4</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleWhile(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>isBreakTarget</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Ljava/lang/String;)Z</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>7</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakingBlock(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>isBreakTarget</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Ljava/lang/String;)Z</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>27</index><block>10</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleWhile(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with true for com/google/javascript/jscomp/ControlFlowAnalysis::isBreakTarget</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>isContinueStructure</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleForWithContinue(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with false for com/google/javascript/jscomp/ControlFlowAnalysis::isContinueStructure</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>isContinueStructure</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>15</index><block>3</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleForWithContinue(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with true for com/google/javascript/jscomp/ControlFlowAnalysis::isContinueStructure</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>isContinueTarget</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Ljava/lang/String;)Z</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleForWithContinue(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>isContinueTarget</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Ljava/lang/String;)Z</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>3</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleForWithContinue(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>isContinueTarget</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Ljava/lang/String;)Z</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>17</index><block>6</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleForWithContinue(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with true for com/google/javascript/jscomp/ControlFlowAnalysis::isContinueTarget</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>matchLabel</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Ljava/lang/String;)Z</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakingBlock(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>matchLabel</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Ljava/lang/String;)Z</methodDescription><lineNumber>898</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>3</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testLabelledForInLoopOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>matchLabel</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Ljava/lang/String;)Z</methodDescription><lineNumber>899</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>7</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testLabelledForInLoopOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>matchLabel</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Ljava/lang/String;)Z</methodDescription><lineNumber>896</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakingBlock(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with false for com/google/javascript/jscomp/ControlFlowAnalysis::matchLabel</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>matchLabel</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Ljava/lang/String;)Z</methodDescription><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>26</index><block>8</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testLabelledForInLoopOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with false for com/google/javascript/jscomp/ControlFlowAnalysis::matchLabel</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>matchLabel</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Ljava/lang/String;)Z</methodDescription><lineNumber>904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>38</index><block>11</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakingTryBlock(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with true for com/google/javascript/jscomp/ControlFlowAnalysis::matchLabel</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>mayThrowException</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>6</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSwitchEmpty(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="15"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>mayThrowException</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>8</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="15"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>mayThrowException</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>10</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>mayThrowException</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>921</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with false for com/google/javascript/jscomp/ControlFlowAnalysis::mayThrowException</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="12"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>mayThrowException</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>37</index><block>11</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with false for com/google/javascript/jscomp/ControlFlowAnalysis::mayThrowException</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="524"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>mayThrowException</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>923</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>15</index><block>3</block><killingTest /><description>replaced boolean return with true for com/google/javascript/jscomp/ControlFlowAnalysis::mayThrowException</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="14"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>mayThrowException</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>930</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>49</index><block>14</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with true for com/google/javascript/jscomp/ControlFlowAnalysis::mayThrowException</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>prioritizeFromEntryNode</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>9</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDoWhileOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>prioritizeFromEntryNode</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDoWhileOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>prioritizeFromEntryNode</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>7</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDoWhileOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2986"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>5</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="32"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><block>36</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testTry2(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>191</index><block>41</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDoWhileOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="20"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>9</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testLocalFunctionOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>103</index><block>17</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testPartialTraversalOfScope(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><block>19</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testPartialTraversalOfScope(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>21</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>22</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><block>35</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDoWhileOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>4</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakInFinally1(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/NodeTraversal::traverse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>72</index><block>8</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDoWhileOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::prioritizeFromEntryNode</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="10"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>126</index><block>25</block><killingTest /><description>removed call to com/google/common/base/Preconditions::checkState</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>131</index><block>26</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testLocalFunctionOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::prioritizeFromEntryNode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="15"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>0</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForLoopOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>4</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>7</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testOptionNotToTraverseFunctions(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>13</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testPartialTraversalOfScope(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>17</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForIn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><block>22</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testWithStatement(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><block>28</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDoWhileOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>122</index><block>33</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><block>40</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>160</index><block>47</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>167</index><block>49</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>8</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to java/util/Deque::push</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><block>11</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to java/util/Deque::push</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="48"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>175</index><block>52</block><killingTest /><description>removed call to com/google/common/base/Preconditions::checkState</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>43</index><block>9</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with false for com/google/javascript/jscomp/ControlFlowAnalysis::shouldTraverse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>59</index><block>12</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with false for com/google/javascript/jscomp/ControlFlowAnalysis::shouldTraverse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>186</index><block>55</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakInFinally1(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with false for com/google/javascript/jscomp/ControlFlowAnalysis::shouldTraverse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>48</index><block>10</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testOptionNotToTraverseFunctions(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with true for com/google/javascript/jscomp/ControlFlowAnalysis::shouldTraverse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>84</index><block>20</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForIn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with true for com/google/javascript/jscomp/ControlFlowAnalysis::shouldTraverse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>99</index><block>25</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testWithStatement(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with true for com/google/javascript/jscomp/ControlFlowAnalysis::shouldTraverse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>115</index><block>31</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testDoWhileOrder(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with true for com/google/javascript/jscomp/ControlFlowAnalysis::shouldTraverse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>130</index><block>36</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with true for com/google/javascript/jscomp/ControlFlowAnalysis::shouldTraverse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>147</index><block>43</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleFunction(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with true for com/google/javascript/jscomp/ControlFlowAnalysis::shouldTraverse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>shouldTraverse</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>152</index><block>44</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakInFinally1(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>replaced boolean return with true for com/google/javascript/jscomp/ControlFlowAnalysis::shouldTraverse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>2</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleIf(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleIf</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>4</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleWhile(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleWhile</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>6</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedDoWithBreak(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleDo</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>8</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testForIn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleFor</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>47</index><block>10</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSwitchEmpty(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleSwitch</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><block>12</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleNoDefault(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleCase</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>14</block><killingTest>com.google.javascript.jscomp.CheckUnreachableCodeTest.testSpuriousBreak(com.google.javascript.jscomp.CheckUnreachableCodeTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleDefault</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><block>16</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakInFinally1(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleStmtList</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>83</index><block>18</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleFunction(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleFunction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>92</index><block>20</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testBreakInFinally1(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleExpr</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>101</index><block>22</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleThrow</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>110</index><block>24</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleTry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>119</index><block>26</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testNestedCatch(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleCatch</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>128</index><block>28</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleWhile(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleBreak</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>137</index><block>30</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleForWithContinue(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleContinue</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>146</index><block>32</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testReturn(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleReturn</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>155</index><block>34</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testWithStatement(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleWith</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ControlFlowAnalysis.java</sourceFile><mutatedClass>com.google.javascript.jscomp.ControlFlowAnalysis</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>168</index><block>37</block><killingTest>com.google.javascript.jscomp.ControlFlowAnalysisTest.testSimpleStatements(com.google.javascript.jscomp.ControlFlowAnalysisTest)</killingTest><description>removed call to com/google/javascript/jscomp/ControlFlowAnalysis::handleStmt</description></mutation>
</mutations>