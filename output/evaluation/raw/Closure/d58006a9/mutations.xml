<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>autobox</mutatedMethod><methodDescription>()Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>com.google.javascript.jscomp.parsing.JsDocInfoParserTest.testNominalConstructor(com.google.javascript.jscomp.parsing.JsDocInfoParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>autobox</mutatedMethod><methodDescription>()Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>22</index><block>5</block><killingTest>com.google.javascript.jscomp.parsing.JsDocInfoParserTest.testNominalConstructor(com.google.javascript.jscomp.parsing.JsDocInfoParserTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::autobox</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canAssignTo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGoogBar(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canAssignTo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGoogBar(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::canAssignTo</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canAssignTo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>15</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNamedGoogBar(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::canAssignTo</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canBeCalled</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testBooleanValueType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::canBeCalled</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canTestForEqualityWith</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::canTestForEqualityWith</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canTestForEqualityWith</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::canTestForEqualityWith</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canTestForShallowEqualityWith</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canTestForShallowEqualityWith</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testVoidType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canTestForShallowEqualityWith</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>5</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canTestForShallowEqualityWith</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>7</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canTestForShallowEqualityWith</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>13</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canTestForShallowEqualityWith</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>15</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testVoidType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canTestForShallowEqualityWith</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>29</index><block>10</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::canTestForShallowEqualityWith</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canTestForShallowEqualityWith</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>57</index><block>18</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testVoidType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::canTestForShallowEqualityWith</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>collapseUnion</mutatedMethod><methodDescription>()Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.UnionTypeTest.testCollapseUnion2(com.google.javascript.rhino.jstype.UnionTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::collapseUnion</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>dereference</mutatedMethod><methodDescription>()Lcom/google/javascript/rhino/jstype/ObjectType;</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>6</index><block>2</block><killingTest>com.google.javascript.jscomp.parsing.JsDocInfoParserTest.testNominalConstructor(com.google.javascript.jscomp.parsing.JsDocInfoParserTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::dereference</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="9"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>differsFrom</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1073</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>11</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testAssert7(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>differsFrom</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1069</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.jscomp.LinkedFlowScopeTest.testDiffer1(com.google.javascript.jscomp.LinkedFlowScopeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>differsFrom</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1069</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>com.google.javascript.jscomp.LinkedFlowScopeTest.testDiffer1(com.google.javascript.jscomp.LinkedFlowScopeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>differsFrom</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1070</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>5</block><killingTest>com.google.javascript.jscomp.LinkedFlowScopeTest.testDiffer1(com.google.javascript.jscomp.LinkedFlowScopeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="9"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>differsFrom</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1073</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>31</index><block>11</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testAssert7(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::differsFrom</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>differsFrom</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1070</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>22</index><block>8</block><killingTest>com.google.javascript.jscomp.LinkedFlowScopeTest.testDiffer1(com.google.javascript.jscomp.LinkedFlowScopeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::differsFrom</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="20"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>differsFrom</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1073</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>31</index><block>11</block><killingTest>com.google.javascript.rhino.jstype.UnionTypeTest.testUnionType(com.google.javascript.rhino.jstype.UnionTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::differsFrom</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest.testGoogIsDef1(com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="86"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>16</index><block>4</block><killingTest>com.google.javascript.jscomp.TypedScopeCreatorTest.testBadCtorInit1(com.google.javascript.jscomp.TypedScopeCreatorTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>filterNoResolvedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testForwardDeclaredNamedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>filterNoResolvedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>845</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>5</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testForwardDeclaredNamedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="473"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>filterNoResolvedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>14</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>filterNoResolvedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>17</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNamedSubtypeChain(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>filterNoResolvedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>26</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNamedSubtypeChain(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>filterNoResolvedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>11</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeSimpleTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::filterNoResolvedType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>filterNoResolvedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>862</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>106</index><block>31</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNamedSubtypeChain(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::filterNoResolvedType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>filterNoResolvedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>111</index><block>32</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testForwardDeclaredNamedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::filterNoResolvedType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>findPropertyType</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testStringEnumType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>findPropertyType</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>16</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testStringEnumType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::findPropertyType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>forceResolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>1124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeRegistryTest.testForceResolve(com.google.javascript.rhino.jstype.JSTypeRegistryTest)</killingTest><description>removed call to com/google/javascript/rhino/jstype/JSTypeRegistry::setResolveMode</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>forceResolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>1126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>3</block><killingTest /><description>removed call to com/google/javascript/rhino/jstype/JSTypeRegistry::setResolveMode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>forceResolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>1127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeRegistryTest.testForceResolve(com.google.javascript.rhino.jstype.JSTypeRegistryTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::forceResolve</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getDisplayName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>4</index><block>0</block><killingTest /><description>replaced return value with "" for com/google/javascript/rhino/jstype/JSType::getDisplayName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>777</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testProxiedFunctionTypeRelationships(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testProxiedFunctionTypeRelationships(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>9</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType4(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>12</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>14</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>16</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeSimpleTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>21</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>802</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>25</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType4(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><block>29</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType4(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>806</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>34</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType4(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>110</index><block>39</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType8(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>810</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>123</index><block>44</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType8(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>814</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>49</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeSimpleTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>147</index><block>52</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testEnumElementType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>160</index><block>56</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeSimpleTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>171</index><block>59</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSymmetryOfGreatestSubtype(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>181</index><block>62</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeSimpleTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>184</index><block>64</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeSimpleTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>791</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>17</index><block>7</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testProxiedFunctionTypeRelationships(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>28</index><block>10</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testReflexivityOfGreatestSubtype(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>54</index><block>19</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeSimpleTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>66</index><block>23</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>78</index><block>27</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType3(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>805</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>91</index><block>32</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeWithProperty(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>807</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>104</index><block>37</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSymmetryOfGreatestSubtype(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>809</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>117</index><block>42</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType4(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>811</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>130</index><block>47</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType8(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>151</index><block>53</block><killingTest>com.google.javascript.rhino.jstype.EnumElementTypeTest.testMeet(com.google.javascript.rhino.jstype.EnumElementTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>822</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>175</index><block>60</block><killingTest>com.google.javascript.rhino.jstype.EnumElementTypeTest.testMeet(com.google.javascript.rhino.jstype.EnumElementTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>190</index><block>66</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeSimpleTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>197</index><block>68</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeSimpleTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getLeastSupertype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testForwardDeclaredNamedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getLeastSupertype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testAnonymousEnumElementChain(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getLeastSupertype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getLeastSupertype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>19</index><block>6</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testForwardDeclaredNamedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getLeastSupertype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getLeastSupertype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>759</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testForwardDeclaredNamedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getLeastSupertype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>759</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>31</index><block>5</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testForwardDeclaredNamedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getLeastSupertype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getNativeType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCallOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getNativeType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getRestrictedTypeGivenToBooleanOutcome</mutatedMethod><methodDescription>(Z)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>883</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRestrictedTypeGivenToBoolean(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getRestrictedTypeGivenToBooleanOutcome</mutatedMethod><methodDescription>(Z)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>883</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRestrictedTypeGivenToBoolean(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getRestrictedTypeGivenToBooleanOutcome</mutatedMethod><methodDescription>(Z)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>7</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRestrictedTypeGivenToBoolean(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getRestrictedTypeGivenToBooleanOutcome</mutatedMethod><methodDescription>(Z)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>884</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>15</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRestrictedTypeGivenToBoolean(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getRestrictedTypeGivenToBooleanOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getRestrictedTypeGivenToBooleanOutcome</mutatedMethod><methodDescription>(Z)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>889</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>31</index><block>8</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRestrictedTypeGivenToBoolean(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getRestrictedTypeGivenToBooleanOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getRestrictedTypeGivenToBooleanOutcome</mutatedMethod><methodDescription>(Z)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>891</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>38</index><block>10</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRestrictedTypeGivenToBoolean(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getRestrictedTypeGivenToBooleanOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderEquality2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>929</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>22</index><block>5</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderEquality5(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderEquality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>935</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>41</index><block>10</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderEquality6(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderEquality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>939</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>50</index><block>12</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderEquality2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderEquality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderInequality3(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>22</index><block>5</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderInequality3(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderInequality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>969</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>47</index><block>11</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderInequality4(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderInequality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>56</index><block>13</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderInequality3(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderInequality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>991</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>14</index><block>2</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testSheqCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderShallowEquality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>1005</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testAssert1a(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>1013</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>7</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testAssert1a(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>1013</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>9</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testAssert1a(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>1013</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>11</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testSheqCondition4(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>1013</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>13</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testSheqCondition4(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>1007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>22</index><block>5</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testShneCondition6(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderShallowInequality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>1015</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>48</index><block>15</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testAssert1a(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderShallowInequality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>57</index><block>17</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testAssert1a(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderShallowInequality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="41"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>hasAnyTemplate</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testIsTemplatedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="41"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>hasAnyTemplate</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>24</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testIsTemplatedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::hasAnyTemplate</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="41"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>hasAnyTemplate</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>24</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testIsTemplatedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::hasAnyTemplate</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>hasAnyTemplate</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>29</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testIsTemplatedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::hasAnyTemplate</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="41"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>hasAnyTemplateInternal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testIsTemplatedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::hasAnyTemplateInternal</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>hasDisplayName</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>hasDisplayName</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testBooleanObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>hasDisplayName</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>20</index><block>6</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::hasDisplayName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5656"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.jscomp.FunctionNamesTest.testFunctionsNamesAndIds(com.google.javascript.jscomp.FunctionNamesTest)</killingTest><description>replaced int return with 0 for com/google/javascript/rhino/jstype/JSType::hashCode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isAllType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCallOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isAllType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isArrayType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isArrayType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isBooleanObjectType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isBooleanObjectType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isBooleanValueType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isBooleanValueType</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isCheckedUnknownType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest /><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isCheckedUnknownType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isConstructor</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGoogBar(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isConstructor</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isDateType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isDateType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="53"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEmptyType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingMostGeneralFunction(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="75"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEmptyType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="15"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEmptyType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>5</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testForwardDeclaredNamedTypeEquals(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="75"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEmptyType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>7</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="75"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEmptyType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>27</index><block>10</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isEmptyType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEnumElementType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderEquality2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEnumElementType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>13</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderEquality2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isEnumElementType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEnumType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEnumType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>13</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isEnumType</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="86"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalent</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="83"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalent</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalent</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>com.google.javascript.rhino.NodeTest.testCheckTreeTypeAwareEqualsDifferentNull(com.google.javascript.rhino.NodeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalent</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>25</index><block>6</block><killingTest>com.google.javascript.rhino.NodeTest.testCheckTreeTypeAwareEqualsSame(com.google.javascript.rhino.NodeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isEquivalent</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalent</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>25</index><block>6</block><killingTest>com.google.javascript.rhino.NodeTest.testCheckTreeTypeAwareEqualsDifferent(com.google.javascript.rhino.NodeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isEquivalent</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalentTo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCallOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalentTo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCallOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="313"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalentTo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>11</index><block>2</block><killingTest /><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isEquivalentTo</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="9"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalentTo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>11</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeWithProperty(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isEquivalentTo</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="11"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalentTo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>25</index><block>6</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeSubtypingWithInferredProperties(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isEquivalentTo</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isFunctionPrototypeType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testBooleanValueType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isFunctionPrototypeType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isFunctionType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCallOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isFunctionType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>13</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCallOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isFunctionType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isGlobalThisType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>com.google.javascript.jscomp.SymbolTableTest.testMethodReferences(com.google.javascript.jscomp.SymbolTableTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isGlobalThisType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>16</index><block>4</block><killingTest>com.google.javascript.jscomp.SymbolTableTest.testMethodReferences(com.google.javascript.jscomp.SymbolTableTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isGlobalThisType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isInstanceType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isInstanceType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="42"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isInterface</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.jscomp.CheckAccessControlsTest.testNoWarningOnDeprecatedPrototype(com.google.javascript.jscomp.CheckAccessControlsTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isInterface</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNamedType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNamedType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNoObjectType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCallOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNoObjectType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="30"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNoResolvedType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingObjectTopOfObjects(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNoResolvedType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNoType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCallOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNoType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNominalConstructor</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testStringObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="12"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNominalConstructor</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>com.google.javascript.jscomp.CheckAccessControlsTest.testNoWarningInDeprecatedFunction(com.google.javascript.jscomp.CheckAccessControlsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNominalConstructor</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>5</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNominalConstructor</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>8</block><killingTest>com.google.javascript.jscomp.parsing.JsDocInfoParserTest.testStructuralConstructor(com.google.javascript.jscomp.parsing.JsDocInfoParserTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="21"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNominalConstructor</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>32</index><block>9</block><killingTest>com.google.javascript.jscomp.CheckAccessControlsTest.testProtectedAccessForProperties2(com.google.javascript.jscomp.CheckAccessControlsTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isNominalConstructor</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNominalConstructor</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>38</index><block>11</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testStringObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isNominalConstructor</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNominalConstructor</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>22</index><block>6</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNominalConstructor</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNominalConstructor</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>38</index><block>11</block><killingTest>com.google.javascript.jscomp.parsing.JsDocInfoParserTest.testStructuralConstructor(com.google.javascript.jscomp.parsing.JsDocInfoParserTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNominalConstructor</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNominalConstructor</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>43</index><block>12</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNominalConstructor</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="33"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNominalType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testWeirdBug(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNominalType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNullType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNullType</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="19"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNullable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>8</index><block>2</block><killingTest /><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isNullable</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNullable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNullable</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNumber</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isNumber</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNumber</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testStringObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNumber</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNumberObjectType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNumberObjectType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNumberValueType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNumberValueType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isObject</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingSimpleTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isObject</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isOrdinaryFunction</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest /><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isOrdinaryFunction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isParameterizedType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.jscomp.TypedScopeCreatorTest.testTemplateType4b(com.google.javascript.jscomp.TypedScopeCreatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isParameterizedType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>13</index><block>4</block><killingTest>com.google.javascript.jscomp.TypedScopeCreatorTest.testTemplateType4b(com.google.javascript.jscomp.TypedScopeCreatorTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isParameterizedType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isRecordType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCallOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isRecordType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>13</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCallOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isRecordType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isRegexpType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isRegexpType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="15"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isResolved</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testForwardDeclaredNamedTypeEquals(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isResolved</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="15"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isResolved</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testForwardDeclaredNamedTypeEquals(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isResolved</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isString</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isString</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isString</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testAllType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isString</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isStringObjectType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isStringObjectType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isStringValueType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isStringValueType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="28"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1056</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingFunctionFixedArgs(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="31"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1056</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingSimpleTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="11"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtypeHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1082</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeSubtypingWithInferredProperties(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="11"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtypeHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeSubtypingWithInferredProperties(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="11"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtypeHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1090</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>7</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeSubtypingWithInferredProperties(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtypeHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1094</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>10</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCallOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtypeHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1097</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>18</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeWithProperty(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtypeHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>21</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCallOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtypeHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1083</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>9</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingFunctionFixedArgs(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isSubtypeHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtypeHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1087</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>20</index><block>5</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingFunctionFixedArgs(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isSubtypeHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtypeHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>30</index><block>8</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingFunctionMultipleFixedArgs(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isSubtypeHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtypeHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>66</index><block>19</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testBug903110(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isSubtypeHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtypeHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>84</index><block>24</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordAndObjectChain3(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isSubtypeHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtypeHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>84</index><block>24</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeWithProperty(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isSubtypeHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="11"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtypeHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>1107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>89</index><block>25</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeSubtypingWithInferredProperties(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isSubtypeHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isTemplateType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeRegistryTest.testTypeResolutionModes(com.google.javascript.rhino.jstype.JSTypeRegistryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isTemplateType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>13</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeRegistryTest.testTypeResolutionModes(com.google.javascript.rhino.jstype.JSTypeRegistryTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isTemplateType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isTheObjectType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isTheObjectType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isUnionType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCallOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isUnionType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>13</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCallOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isUnionType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="31"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isUnknownType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingSimpleTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isUnknownType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isVoidType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isVoidType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>matchesInt32Context</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::matchesInt32Context</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>matchesInt32Context</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::matchesInt32Context</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>matchesNumberContext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testAllType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::matchesNumberContext</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>matchesObjectContext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest /><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::matchesObjectContext</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>matchesStringContext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest /><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::matchesStringContext</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>matchesUint32Context</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::matchesUint32Context</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>matchesUint32Context</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::matchesUint32Context</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>resolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>1145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCallOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="15"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>resolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>1148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testForwardDeclaredNamedTypeEquals(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2754"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>resolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>6</block><killingTest /><description>removed call to com/google/javascript/rhino/jstype/JSType::setResolvedTypeInternal</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>resolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>1149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>17</index><block>3</block><killingTest /><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::resolve</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="15"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>resolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>1151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>23</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testForwardDeclaredNamedTypeEquals(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::resolve</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>resolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>1156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>49</index><block>7</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCallOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::resolve</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="139"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>restrictByNotNullOrUndefined</mutatedMethod><methodDescription>()Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testGetElemDereference(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::restrictByNotNullOrUndefined</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="38"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>safeResolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>1186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGoogBar(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="28"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>safeResolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>1186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>15</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingFunctionFixedArgs(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::safeResolve</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>setValidator</mutatedMethod><methodDescription>(Lcom/google/common/base/Predicate;)Z</methodDescription><lineNumber>1196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>com.google.javascript.jscomp.CodePrinterTest.testTypeAnnotationsImplements(com.google.javascript.jscomp.CodePrinterTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::setValidator</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="46"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>setValidator</mutatedMethod><methodDescription>(Lcom/google/common/base/Predicate;)Z</methodDescription><lineNumber>1196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>com.google.javascript.jscomp.LooseTypeCheckTest.testBadImplementsNonObjectType(com.google.javascript.jscomp.LooseTypeCheckTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::setValidator</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>655</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::testForEquality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>5</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>7</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>9</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>11</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>15</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>16</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>17</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>18</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>22</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderEquality2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>24</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderEquality2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>26</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testTestForEquality(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><block>32</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypeUnderEquality1(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>34</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypeUnderEquality1(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>38</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderEquality2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>40</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderEquality2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>663</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>25</index><block>12</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::testForEqualityHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>53</index><block>19</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::testForEqualityHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>58</index><block>20</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::testForEqualityHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>102</index><block>35</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testTestForEquality(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::testForEqualityHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>107</index><block>36</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testTestForEquality(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::testForEqualityHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>123</index><block>42</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::testForEqualityHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>toAnnotationString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.RecordTypeTest.testLongToString(com.google.javascript.rhino.jstype.RecordTypeTest)</killingTest><description>replaced return value with "" for com/google/javascript/rhino/jstype/JSType::toAnnotationString</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>toDebugHashCodeString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>14</index><block>6</block><killingTest /><description>replaced return value with "" for com/google/javascript/rhino/jstype/JSType::toDebugHashCodeString</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>toMaybeFunctionType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/FunctionType;</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testImplementingType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>toMaybeFunctionType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/FunctionType;</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>13</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testImplementingType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::toMaybeFunctionType</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>toMaybeParameterizedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/ParameterizedType;</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>toMaybeParameterizedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/ParameterizedType;</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>13</index><block>3</block><killingTest /><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::toMaybeParameterizedType</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>toMaybeTemplateType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TemplateType;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>toMaybeTemplateType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TemplateType;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>13</index><block>3</block><killingTest /><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::toMaybeTemplateType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>toObjectType</mutatedMethod><methodDescription>()Lcom/google/javascript/rhino/jstype/ObjectType;</methodDescription><lineNumber>607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCallOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateAnonymousObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with "" for com/google/javascript/rhino/jstype/JSType::toString</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="19"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrMaybeShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>com.google.javascript.jscomp.LooseTypeCheckTest.testBooleanReduction5(com.google.javascript.jscomp.LooseTypeCheckTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrMaybeShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>5</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testShortCircuitingOr2(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrMaybeShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>8</block><killingTest>com.google.javascript.jscomp.LooseTypeCheckTest.testBooleanReduction5(com.google.javascript.jscomp.LooseTypeCheckTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrMaybeShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>13</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testAssert5(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrMaybeShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>17</block><killingTest>com.google.javascript.jscomp.LooseTypeCheckTest.testBooleanReduction5(com.google.javascript.jscomp.LooseTypeCheckTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrMaybeShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>99</index><block>24</block><killingTest>com.google.javascript.jscomp.LooseTypeCheckTest.testBooleanReduction5(com.google.javascript.jscomp.LooseTypeCheckTest)</killingTest><description>removed call to com/google/javascript/jscomp/type/FlowScope::inferSlotType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrMaybeShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>30</index><block>6</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testShortCircuitingOr2(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::caseAndOrMaybeShortCircuiting</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrMaybeShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>76</index><block>18</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testAssert5(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::caseAndOrMaybeShortCircuiting</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrMaybeShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>103</index><block>25</block><killingTest /><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::caseAndOrMaybeShortCircuiting</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="25"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrNotShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>com.google.javascript.jscomp.LooseTypeCheckTest.testTypeOfReduction6(com.google.javascript.jscomp.LooseTypeCheckTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrNotShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>6</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAnd(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrNotShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>9</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAnd(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrNotShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>13</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testAssert4(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrNotShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>103</index><block>18</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAnd(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrNotShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><block>19</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAnd(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrNotShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><block>22</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAnd(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrNotShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>25</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAnd(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrNotShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>62</index><block>11</block><killingTest /><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::caseAndOrNotShortCircuiting</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrNotShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>145</index><block>29</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAnd(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::caseAndOrNotShortCircuiting</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseAndOrNotShortCircuiting</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>150</index><block>30</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testShortCircuitingOr2(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::caseAndOrNotShortCircuiting</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/common/base/Function;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>11</index><block>3</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition3(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::caseEquality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/common/base/Function;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/common/base/Function;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>6</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition3(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/common/base/Function;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>12</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition3(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/common/base/Function;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>13</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/common/base/Function;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><block>16</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition3(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/common/base/Function;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>101</index><block>20</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition3(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::caseEquality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/common/base/Function;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>106</index><block>21</block><killingTest>com.google.javascript.jscomp.CheckMissingReturnTest.testReturnNotMissing(com.google.javascript.jscomp.CheckMissingReturnTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::caseEquality</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseIn</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Ljava/lang/String;Lcom/google/javascript/jscomp/type/FlowScope;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseIn</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Ljava/lang/String;Lcom/google/javascript/jscomp/type/FlowScope;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseIn</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Ljava/lang/String;Lcom/google/javascript/jscomp/type/FlowScope;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseIn</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Ljava/lang/String;Lcom/google/javascript/jscomp/type/FlowScope;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>16</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseIn</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Ljava/lang/String;Lcom/google/javascript/jscomp/type/FlowScope;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>89</index><block>19</block><killingTest /><description>removed call to com/google/javascript/jscomp/type/FlowScope::inferQualifiedSlot</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseIn</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Ljava/lang/String;Lcom/google/javascript/jscomp/type/FlowScope;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>93</index><block>20</block><killingTest /><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::caseIn</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseIn</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Ljava/lang/String;Lcom/google/javascript/jscomp/type/FlowScope;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>98</index><block>21</block><killingTest /><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::caseIn</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseInstanceOf</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInstanceOf(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseInstanceOf</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>5</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInstanceOf(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseInstanceOf</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>7</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInstanceOf(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseInstanceOf</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>10</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInstanceOf(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseInstanceOf</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>15</index><block>2</block><killingTest>com.google.javascript.jscomp.LooseTypeCheckTest.testInstanceof5(com.google.javascript.jscomp.LooseTypeCheckTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::caseInstanceOf</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseInstanceOf</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>77</index><block>17</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInstanceOf(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::caseInstanceOf</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseNameOrGetProp</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAssignCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseNameOrGetProp</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>22</index><block>4</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAssignCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::caseNameOrGetProp</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseNameOrGetProp</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>27</index><block>5</block><killingTest>com.google.javascript.jscomp.PeepholeFoldWithTypesTest.testDontFoldTypeofUnionTypes(com.google.javascript.jscomp.PeepholeFoldWithTypesTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::caseNameOrGetProp</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>caseTypeOf</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Ljava/lang/String;ZLcom/google/javascript/jscomp/type/FlowScope;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>13</index><block>2</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testTypeof2(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::caseTypeOf</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>2</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testTypeof2(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>11</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testTypeof2(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>13</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testTypeof2(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="91"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>16</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>18</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><block>20</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testTypeof2(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>21</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testTypeof2(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>24</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testTypeof2(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>110</index><block>25</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testTypeof2(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>26</block><killingTest>com.google.javascript.jscomp.LooseTypeCheckTest.testTypeOfReduction2(com.google.javascript.jscomp.LooseTypeCheckTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>27</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testSwitch2(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>130</index><block>30</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testTypeof2(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><block>31</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testTypeof2(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>164</index><block>39</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAnd(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>192</index><block>48</block><killingTest>com.google.javascript.jscomp.LooseTypeCheckTest.testBooleanReduction5(com.google.javascript.jscomp.LooseTypeCheckTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>220</index><block>57</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testEqCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>242</index><block>62</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testEqCondition2(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>264</index><block>67</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testSheqCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>286</index><block>72</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testAssert1a(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>337</index><block>86</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testNegatedNameCondition(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>351</index><block>91</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition3(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>377</index><block>98</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>381</index><block>101</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="17"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>408</index><block>110</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>154</index><block>37</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testTypeof2(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>175</index><block>43</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAnd(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>187</index><block>47</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAnd(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>203</index><block>52</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testShortCircuitingOr2(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>215</index><block>56</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testAssert5(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>228</index><block>59</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testEqCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>237</index><block>61</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testEqCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>250</index><block>64</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testEqCondition2(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>259</index><block>66</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testEqCondition2(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>272</index><block>69</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testSheqCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>281</index><block>71</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testSheqCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>294</index><block>74</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testAssert1a(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>303</index><block>76</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testShneCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>312</index><block>78</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAssignCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>328</index><block>84</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAssignCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>346</index><block>90</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testNegatedNameCondition(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>360</index><block>93</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition3(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>372</index><block>97</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInstanceOf(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>392</index><block>106</block><killingTest /><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>417</index><block>112</block><killingTest>com.google.javascript.jscomp.CheckMissingReturnTest.testMissingReturn(com.google.javascript.jscomp.CheckMissingReturnTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>427</index><block>114</block><killingTest>com.google.javascript.jscomp.CheckMissingReturnTest.testMissingReturn(com.google.javascript.jscomp.CheckMissingReturnTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>getPreciserScopeKnowingConditionOutcome</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>436</index><block>116</block><killingTest>com.google.javascript.jscomp.TypedScopeCreatorTest.testFunctionInOr(com.google.javascript.jscomp.TypedScopeCreatorTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::getPreciserScopeKnowingConditionOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>maybeRestrictName</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAssignCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>maybeRestrictName</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAssignCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>maybeRestrictName</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>3</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAssignCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>removed call to com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::declareNameInScope</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>maybeRestrictName</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>23</index><block>4</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testAssignCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::maybeRestrictName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>maybeRestrictName</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>28</index><block>5</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInstanceOf(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::maybeRestrictName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>maybeRestrictTwoNames</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>maybeRestrictTwoNames</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>maybeRestrictTwoNames</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>4</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition3(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>maybeRestrictTwoNames</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>5</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition3(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>maybeRestrictTwoNames</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>8</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>maybeRestrictTwoNames</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>9</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition3(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>maybeRestrictTwoNames</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>11</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition3(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>maybeRestrictTwoNames</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>13</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition3(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>maybeRestrictTwoNames</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><block>12</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>removed call to com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::declareNameInScope</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>maybeRestrictTwoNames</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>14</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition3(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>removed call to com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::declareNameInScope</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>maybeRestrictTwoNames</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>70</index><block>15</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testInequalitiesCondition3(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::maybeRestrictTwoNames</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SemanticReverseAbstractInterpreter.java</sourceFile><mutatedClass>com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter</mutatedClass><mutatedMethod>maybeRestrictTwoNames</mutatedMethod><methodDescription>(Lcom/google/javascript/jscomp/type/FlowScope;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/jscomp/type/FlowScope;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>75</index><block>16</block><killingTest>com.google.javascript.jscomp.TypeInferenceTest.testFor4(com.google.javascript.jscomp.TypeInferenceTest)</killingTest><description>replaced return value with null for com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter::maybeRestrictTwoNames</description></mutation>
</mutations>