{"41": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [12240, 12242]]]}, "42": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [21487, 21489]]]}, "43": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(\n          childCount == 2,\n          \"Bad binary operator \\\"%s\\\": expected 2 arguments but got %s\",\n          opstr, childCount)", [3412, 3566]]]}, "45": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount >= 2 && childCount <= 3)", [4665, 4725]]]}, "46": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [5193, 5234]]]}, "47": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [5388, 5429]]]}, "48": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 0)", [5747, 5788]]]}, "49": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(!n.getString().isEmpty())", [6049, 6099]]]}, "50": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [6293, 6334]]]}, "51": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [6985, 7026]]]}, "53": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [7443, 7484]]]}, "54": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [7663, 7704]]]}, "55": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 3)", [8215, 8256]]]}, "56": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [8917, 8958]]]}, "57": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 3)", [9152, 9193]]]}, "59": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [9707, 9748]]]}, "61": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(first.getFirstChild().getString().isEmpty())", [9848, 9917]]]}, "62": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(!first.getChildAtIndex(1).hasChildren())", [10014, 10079]]]}, "63": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(first.getChildAtIndex(1).hasOneChild())", [10176, 10240]]]}, "64": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.notePreferredLineBreak()", [12105, 12132]]]}, "65": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 3)", [12810, 12851]]]}, "66": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [13128, 13169]]]}, "67": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [13384, 13425]]]}, "68": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 0)", [13634, 13675]]]}, "69": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(\n            childCount == 2,\n            \"Bad GETPROP: expected 2 children, but got %s\", childCount)", [13729, 13855]]]}, "71": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(\n            childCount == 2,\n            \"Bad GETELEM: expected 2 children but got %s\", childCount)", [14311, 14436]]]}, "72": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [14611, 14652]]]}, "73": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [14882, 14923]]]}, "74": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [17014, 17055]]]}, "75": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 0)", [17542, 17583]]]}, "76": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount <= 1)", [17668, 17709]]]}, "77": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["add(\" \")", [17904, 17912]]]}, "78": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.endStatement()", [17954, 17971]]]}, "79": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount <= 1)", [18167, 18208]]]}, "80": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["add(\" \")", [18400, 18408]]]}, "81": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [18523, 18564]]]}, "82": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [19776, 19817]]]}, "83": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [21557, 21598]]]}, "84": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [21724, 21765]]]}, "85": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [21867, 21908]]]}, "545": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.endCaseBody()", [28825, 28841]]]}, "565": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [24978, 24980]]]}, "566": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [25642, 25644]]]}, "567": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.maybeLineBreak()", [25566, 25585]]]}, "568": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.endStatement(true)", [25929, 25950]]]}, "617": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["<", [36168, 36169]]]}, "618": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["-", [36271, 36272]]]}, "624": {"src/com/google/javascript/jscomp/CodeGenerator.java": [[">", [35709, 35710]]]}, "625": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["<", [35721, 35722]]]}, "649": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [26768, 26770]]]}, "650": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["isOneExactlyFunctionOrDo(labeledStatement)", [26504, 26546]]]}, "651": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["false", [26999, 27004]]]}, "688": {"src/com/google/javascript/jscomp/CodeGenerator.java": [[">", [34750, 34751]]]}}