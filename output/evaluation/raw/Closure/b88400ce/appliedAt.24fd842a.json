{"41": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [11732, 11734]]]}, "42": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [20979, 20981]]]}, "43": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(\n          childCount == 2,\n          \"Bad binary operator \\\"%s\\\": expected 2 arguments but got %s\",\n          opstr, childCount)", [2904, 3058]]]}, "45": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount >= 2 && childCount <= 3)", [4157, 4217]]]}, "46": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [4685, 4726]]]}, "47": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [4880, 4921]]]}, "48": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 0)", [5239, 5280]]]}, "49": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(!n.getString().isEmpty())", [5541, 5591]]]}, "50": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [5785, 5826]]]}, "51": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [6477, 6518]]]}, "53": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [6935, 6976]]]}, "54": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [7155, 7196]]]}, "55": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 3)", [7707, 7748]]]}, "56": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [8409, 8450]]]}, "57": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 3)", [8644, 8685]]]}, "59": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [9199, 9240]]]}, "61": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(first.getFirstChild().getString().isEmpty())", [9340, 9409]]]}, "62": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(!first.getChildAtIndex(1).hasChildren())", [9506, 9571]]]}, "63": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(first.getChildAtIndex(1).hasOneChild())", [9668, 9732]]]}, "64": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.notePreferredLineBreak()", [11597, 11624]]]}, "65": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 3)", [12302, 12343]]]}, "66": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [12620, 12661]]]}, "67": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [12876, 12917]]]}, "68": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 0)", [13126, 13167]]]}, "69": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(\n            childCount == 2,\n            \"Bad GETPROP: expected 2 children, but got %s\", childCount)", [13221, 13347]]]}, "71": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(\n            childCount == 2,\n            \"Bad GETELEM: expected 2 children but got %s\", childCount)", [13803, 13928]]]}, "72": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [14103, 14144]]]}, "73": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [14374, 14415]]]}, "74": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [16506, 16547]]]}, "75": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 0)", [17034, 17075]]]}, "76": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount <= 1)", [17160, 17201]]]}, "77": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["add(\" \")", [17396, 17404]]]}, "78": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.endStatement()", [17446, 17463]]]}, "79": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount <= 1)", [17659, 17700]]]}, "80": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["add(\" \")", [17892, 17900]]]}, "81": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [18015, 18056]]]}, "82": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [19268, 19309]]]}, "83": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [21049, 21090]]]}, "84": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [21216, 21257]]]}, "85": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [21359, 21400]]]}, "545": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.endCaseBody()", [28175, 28191]]]}, "565": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [24328, 24330]]]}, "566": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [24992, 24994]]]}, "567": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.maybeLineBreak()", [24916, 24935]]]}, "568": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.endStatement(true)", [25279, 25300]]]}, "617": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["<", [34563, 34564]]]}, "618": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["-", [34665, 34666]]]}, "624": {"src/com/google/javascript/jscomp/CodeGenerator.java": [[">", [34104, 34105]]]}, "625": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["<", [34116, 34117]]]}, "649": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [26118, 26120]]]}, "650": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["isOneExactlyFunctionOrDo(labeledStatement)", [25854, 25896]]]}, "651": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["false", [26349, 26354]]]}, "688": {"src/com/google/javascript/jscomp/CodeGenerator.java": [[">", [33145, 33146]]]}}