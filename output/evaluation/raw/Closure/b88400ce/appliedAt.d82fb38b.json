{"41": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [12242, 12244]]]}, "42": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [21489, 21491]]]}, "43": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(\n          childCount == 2,\n          \"Bad binary operator \\\"%s\\\": expected 2 arguments but got %s\",\n          opstr, childCount)", [3414, 3568]]]}, "45": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount >= 2 && childCount <= 3)", [4667, 4727]]]}, "46": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [5195, 5236]]]}, "47": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [5390, 5431]]]}, "48": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 0)", [5749, 5790]]]}, "49": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(!n.getString().isEmpty())", [6051, 6101]]]}, "50": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [6295, 6336]]]}, "51": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [6987, 7028]]]}, "53": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [7445, 7486]]]}, "54": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [7665, 7706]]]}, "55": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 3)", [8217, 8258]]]}, "56": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [8919, 8960]]]}, "57": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 3)", [9154, 9195]]]}, "59": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [9709, 9750]]]}, "61": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(first.getFirstChild().getString().isEmpty())", [9850, 9919]]]}, "62": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(!first.getChildAtIndex(1).hasChildren())", [10016, 10081]]]}, "63": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(first.getChildAtIndex(1).hasOneChild())", [10178, 10242]]]}, "64": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.notePreferredLineBreak()", [12107, 12134]]]}, "65": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 3)", [12812, 12853]]]}, "66": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [13130, 13171]]]}, "67": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [13386, 13427]]]}, "68": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 0)", [13636, 13677]]]}, "69": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(\n            childCount == 2,\n            \"Bad GETPROP: expected 2 children, but got %s\", childCount)", [13731, 13857]]]}, "71": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(\n            childCount == 2,\n            \"Bad GETELEM: expected 2 children but got %s\", childCount)", [14313, 14438]]]}, "72": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [14613, 14654]]]}, "73": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [14884, 14925]]]}, "74": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [17016, 17057]]]}, "75": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 0)", [17544, 17585]]]}, "76": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount <= 1)", [17670, 17711]]]}, "77": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["add(\" \")", [17906, 17914]]]}, "78": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.endStatement()", [17956, 17973]]]}, "79": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount <= 1)", [18169, 18210]]]}, "80": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["add(\" \")", [18402, 18410]]]}, "81": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [18525, 18566]]]}, "82": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [19778, 19819]]]}, "83": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [21559, 21600]]]}, "84": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [21726, 21767]]]}, "85": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [21869, 21910]]]}, "545": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.endCaseBody()", [28827, 28843]]]}, "565": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [24980, 24982]]]}, "566": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [25644, 25646]]]}, "567": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.maybeLineBreak()", [25568, 25587]]]}, "568": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.endStatement(true)", [25931, 25952]]]}, "617": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["<", [36180, 36181]]]}, "618": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["-", [36282, 36283]]]}, "624": {"src/com/google/javascript/jscomp/CodeGenerator.java": [[">", [35721, 35722]]]}, "625": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["<", [35733, 35734]]]}, "649": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [26770, 26772]]]}, "650": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["isOneExactlyFunctionOrDo(labeledStatement)", [26506, 26548]]]}, "651": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["false", [27001, 27006]]]}, "688": {"src/com/google/javascript/jscomp/CodeGenerator.java": [[">", [34762, 34763]]]}}