{"41": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [12336, 12338]]]}, "42": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [22214, 22216]]]}, "43": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(\n          childCount == 2,\n          \"Bad binary operator \\\"%s\\\": expected 2 arguments but got %s\",\n          opstr, childCount)", [3616, 3770]]]}, "45": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount >= 2 && childCount <= 3)", [4557, 4617]]]}, "46": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [5118, 5159]]]}, "47": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [5392, 5433]]]}, "48": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 0)", [5751, 5792]]]}, "49": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(!n.getString().isEmpty())", [6053, 6103]]]}, "50": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [6297, 6338]]]}, "51": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [6989, 7030]]]}, "53": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [7480, 7521]]]}, "54": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [7700, 7741]]]}, "55": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 3)", [8252, 8293]]]}, "56": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [9013, 9054]]]}, "57": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 3)", [9248, 9289]]]}, "59": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [9803, 9844]]]}, "61": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(first.getFirstChild().getString().isEmpty())", [9944, 10013]]]}, "62": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(!first.getChildAtIndex(1).hasChildren())", [10110, 10175]]]}, "63": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(first.getChildAtIndex(1).hasOneChild())", [10272, 10336]]]}, "64": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.notePreferredLineBreak()", [12201, 12228]]]}, "65": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 3)", [12958, 12999]]]}, "66": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [13328, 13369]]]}, "67": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [13663, 13704]]]}, "68": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 0)", [13961, 14002]]]}, "69": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(\n            childCount == 2,\n            \"Bad GETPROP: expected 2 children, but got %s\", childCount)", [14056, 14182]]]}, "71": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(\n            childCount == 2,\n            \"Bad GETELEM: expected 2 children but got %s\", childCount)", [14891, 15016]]]}, "72": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [15191, 15232]]]}, "73": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [15462, 15503]]]}, "74": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [17675, 17716]]]}, "75": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 0)", [18203, 18244]]]}, "76": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount <= 1)", [18329, 18370]]]}, "77": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["add(\" \")", [18565, 18573]]]}, "78": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.endStatement()", [18615, 18632]]]}, "79": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount <= 1)", [18828, 18869]]]}, "80": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["add(\" \")", [19061, 19069]]]}, "81": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [19184, 19225]]]}, "82": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [20437, 20478]]]}, "83": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [22284, 22325]]]}, "84": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [22451, 22492]]]}, "85": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [22594, 22635]]]}, "545": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.endCaseBody()", [29662, 29678]]]}, "565": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [25779, 25781]]]}, "566": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [26443, 26445]]]}, "567": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.maybeLineBreak()", [26367, 26386]]]}, "568": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.endStatement(true)", [26730, 26751]]]}, "617": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["<", [37005, 37006]]]}, "618": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["-", [37108, 37109]]]}, "624": {"src/com/google/javascript/jscomp/CodeGenerator.java": [[">", [36546, 36547]]]}, "625": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["<", [36558, 36559]]]}, "649": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [27569, 27571]]]}, "650": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["isOneExactlyFunctionOrDo(labeledStatement)", [27305, 27347]]]}, "651": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["false", [27800, 27805]]]}, "688": {"src/com/google/javascript/jscomp/CodeGenerator.java": [[">", [35587, 35588]]]}}