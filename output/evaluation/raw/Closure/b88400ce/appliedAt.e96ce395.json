{"41": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [12224, 12226]]]}, "42": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [21790, 21792]]]}, "43": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(\n          childCount == 2,\n          \"Bad binary operator \\\"%s\\\": expected 2 arguments but got %s\",\n          opstr, childCount)", [3616, 3770]]]}, "45": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount >= 2 && childCount <= 3)", [4557, 4617]]]}, "46": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [5085, 5126]]]}, "47": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [5280, 5321]]]}, "48": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 0)", [5639, 5680]]]}, "49": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(!n.getString().isEmpty())", [5941, 5991]]]}, "50": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [6185, 6226]]]}, "51": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [6877, 6918]]]}, "53": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [7368, 7409]]]}, "54": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [7588, 7629]]]}, "55": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 3)", [8140, 8181]]]}, "56": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [8901, 8942]]]}, "57": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 3)", [9136, 9177]]]}, "59": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [9691, 9732]]]}, "61": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(first.getFirstChild().getString().isEmpty())", [9832, 9901]]]}, "62": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(!first.getChildAtIndex(1).hasChildren())", [9998, 10063]]]}, "63": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(first.getChildAtIndex(1).hasOneChild())", [10160, 10224]]]}, "64": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.notePreferredLineBreak()", [12089, 12116]]]}, "65": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 3)", [12794, 12835]]]}, "66": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [13112, 13153]]]}, "67": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [13368, 13409]]]}, "68": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 0)", [13618, 13659]]]}, "69": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(\n            childCount == 2,\n            \"Bad GETPROP: expected 2 children, but got %s\", childCount)", [13713, 13839]]]}, "71": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(\n            childCount == 2,\n            \"Bad GETELEM: expected 2 children but got %s\", childCount)", [14548, 14673]]]}, "72": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [14848, 14889]]]}, "73": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [15119, 15160]]]}, "74": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [17251, 17292]]]}, "75": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 0)", [17779, 17820]]]}, "76": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount <= 1)", [17905, 17946]]]}, "77": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["add(\" \")", [18141, 18149]]]}, "78": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.endStatement()", [18191, 18208]]]}, "79": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount <= 1)", [18404, 18445]]]}, "80": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["add(\" \")", [18637, 18645]]]}, "81": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [18760, 18801]]]}, "82": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [20013, 20054]]]}, "83": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [21860, 21901]]]}, "84": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 1)", [22027, 22068]]]}, "85": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["Preconditions.checkState(childCount == 2)", [22170, 22211]]]}, "545": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.endCaseBody()", [29164, 29180]]]}, "565": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [25281, 25283]]]}, "566": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [25945, 25947]]]}, "567": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.maybeLineBreak()", [25869, 25888]]]}, "568": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["cc.endStatement(true)", [26232, 26253]]]}, "617": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["<", [36507, 36508]]]}, "618": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["-", [36610, 36611]]]}, "624": {"src/com/google/javascript/jscomp/CodeGenerator.java": [[">", [36048, 36049]]]}, "625": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["<", [36060, 36061]]]}, "649": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["==", [27071, 27073]]]}, "650": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["isOneExactlyFunctionOrDo(labeledStatement)", [26807, 26849]]]}, "651": {"src/com/google/javascript/jscomp/CodeGenerator.java": [["false", [27302, 27307]]]}, "688": {"src/com/google/javascript/jscomp/CodeGenerator.java": [[">", [35089, 35090]]]}}