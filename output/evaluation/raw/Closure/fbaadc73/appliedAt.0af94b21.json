{"0": {"src/com/google/javascript/jscomp/NodeUtil.java": [["++", [7996, 7998]]]}, "12": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.getType() == Token.CALL)", [30160, 30211]]]}, "22": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(isFunctionExpression(n))", [32786, 32835]]]}, "98": {"src/com/google/javascript/jscomp/NodeUtil.java": [["evaluatesToLocalValue(value.getFirstChild(), locals)", [88145, 88197]]]}, "99": {"src/com/google/javascript/jscomp/NodeUtil.java": [["locals.apply(value)", [88287, 88306]]]}, "150": {"src/com/google/javascript/jscomp/NodeUtil.java": [["==", [29267, 29269]]]}, "151": {"src/com/google/javascript/jscomp/NodeUtil.java": [["false", [28660, 28665]]]}, "198": {"src/com/google/javascript/jscomp/NodeUtil.java": [["==", [67249, 67251]]]}, "199": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(addingRoot.getType() == Token.BLOCK ||\n        addingRoot.getType() == Token.SCRIPT)", [67082, 67191]]]}, "200": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(addingRoot.getFirstChild() == null ||\n        addingRoot.getFirstChild().getType() != Token.SCRIPT)", [67197, 67321]]]}, "221": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(isCallOrNew(call))", [90512, 90555]]]}, "222": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(isFunction(function))", [90176, 90222]]]}, "225": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(isName(n))", [43626, 43661]]]}, "229": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.getType() == Token.TRY)", [82062, 82115]]]}, "237": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(isFunction(fn))", [54107, 54150]]]}, "238": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.getType() == Token.FUNCTION)", [84743, 84798]]]}, "244": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(fnNode.getType() == Token.FUNCTION)", [82687, 82750]]]}, "292": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(type == Token.GETPROP)", [70244, 70291]]]}, "300": {"src/com/google/javascript/jscomp/NodeUtil.java": [[">", [10090, 10091]]]}, "301": {"src/com/google/javascript/jscomp/NodeUtil.java": [[">", [10406, 10407]]]}, "362": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.getType() == Token.BLOCK)", [82317, 82372]]]}, "372": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.getType() == Token.TRY)", [81835, 81888]]]}, "400": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.getFirstChild() == n", [46881, 46908]]]}, "459": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(nType == Token.NAME || nType == Token.GETPROP ||\n        nType == Token.GETELEM)", [59786, 59894]]]}, "495": {"src/com/google/javascript/jscomp/NodeUtil.java": [[">", [73354, 73355]]]}, "500": {"src/com/google/javascript/jscomp/NodeUtil.java": [["!=", [16584, 16586]]]}, "501": {"src/com/google/javascript/jscomp/NodeUtil.java": [["includeFunctions && !NodeUtil.isFunctionDeclaration(n)", [17128, 17182]]]}, "565": {"src/com/google/javascript/jscomp/NodeUtil.java": [["isSimpleOperatorType(n.getType())", [19180, 19213]]]}, "573": {"src/com/google/javascript/jscomp/NodeUtil.java": [["(Character.getType(c) == Character.SPACE_SEPARATOR)\n            ? TernaryValue.TRUE : TernaryValue.FALSE", [11928, 12032]]]}, "644": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(isFunction(function))", [56651, 56700]]]}, "662": {"src/com/google/javascript/jscomp/NodeUtil.java": [["mayBeStringHelper(n)", [39401, 39421]]]}, "677": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(tryNode.getType() == Token.TRY)", [52661, 52717]]]}, "684": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.getType() == Token.NEW)", [30395, 30445]]]}, "692": {"src/com/google/javascript/jscomp/NodeUtil.java": [["nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true)", [71059, 71111]]]}, "708": {"src/com/google/javascript/jscomp/NodeUtil.java": [["nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true)", [71662, 71714]]]}, "723": {"src/com/google/javascript/jscomp/NodeUtil.java": [["nameNode.putProp(Node.ORIGINALNAME_PROP, originalName)", [72484, 72538]]]}, "750": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(value.getNext() == null)", [76701, 76750]]]}, "754": {"src/com/google/javascript/jscomp/NodeUtil.java": [["NodeUtil.constructorCallHasSideEffects(n, compiler)", [31269, 31320]]]}, "770": {"src/com/google/javascript/jscomp/NodeUtil.java": [["3", [34012, 34013]]]}, "771": {"src/com/google/javascript/jscomp/NodeUtil.java": [["5", [34082, 34083]]]}, "772": {"src/com/google/javascript/jscomp/NodeUtil.java": [["6", [34117, 34118]]]}, "773": {"src/com/google/javascript/jscomp/NodeUtil.java": [["7", [34152, 34153]]]}, "774": {"src/com/google/javascript/jscomp/NodeUtil.java": [["8", [34252, 34253]]]}, "775": {"src/com/google/javascript/jscomp/NodeUtil.java": [["10", [34479, 34481]]]}, "816": {"src/com/google/javascript/jscomp/NodeUtil.java": [["copyNameAnnotations(nameNode, var.getFirstChild())", [66122, 66172]]]}, "821": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(NodeUtil.hasFinally(tryNode))", [50695, 50749]]]}, "822": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(NodeUtil.hasFinally(tryNode))", [50996, 51050]]]}, "823": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.removeChild(node)", [51626, 51650]]]}, "824": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.removeChild(node)", [51934, 51958]]]}, "847": {"src/com/google/javascript/jscomp/NodeUtil.java": [["node.putProp(Node.ORIGINALNAME_PROP, originalName)", [70782, 70832]]]}, "857": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(block.getType() == Token.BLOCK)", [53014, 53070]]]}}