{"0": {"src/com/google/javascript/jscomp/NodeUtil.java": [["++", [7996, 7998]]]}, "12": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.getType() == Token.CALL)", [31453, 31504]]]}, "22": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(isFunctionExpression(n))", [34079, 34128]]]}, "98": {"src/com/google/javascript/jscomp/NodeUtil.java": [["evaluatesToLocalValue(value.getFirstChild(), locals)", [89616, 89668]]]}, "99": {"src/com/google/javascript/jscomp/NodeUtil.java": [["locals.apply(value)", [89758, 89777]]]}, "150": {"src/com/google/javascript/jscomp/NodeUtil.java": [["==", [30560, 30562]]]}, "151": {"src/com/google/javascript/jscomp/NodeUtil.java": [["false", [29953, 29958]]]}, "198": {"src/com/google/javascript/jscomp/NodeUtil.java": [["==", [68557, 68559]]]}, "199": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(addingRoot.getType() == Token.BLOCK ||\n        addingRoot.getType() == Token.SCRIPT)", [68390, 68499]]]}, "200": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(addingRoot.getFirstChild() == null ||\n        addingRoot.getFirstChild().getType() != Token.SCRIPT)", [68505, 68629]]]}, "221": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(isCallOrNew(call))", [91983, 92026]]]}, "222": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(isFunction(function))", [91647, 91693]]]}, "225": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(isName(n))", [44924, 44959]]]}, "229": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.getType() == Token.TRY)", [84062, 84115]]]}, "237": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(isFunction(fn))", [55405, 55448]]]}, "238": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.getType() == Token.FUNCTION)", [86214, 86269]]]}, "244": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(fnNode.getType() == Token.FUNCTION)", [84687, 84750]]]}, "292": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(type == Token.GETPROP)", [71552, 71599]]]}, "300": {"src/com/google/javascript/jscomp/NodeUtil.java": [[">", [10090, 10091]]]}, "301": {"src/com/google/javascript/jscomp/NodeUtil.java": [[">", [10406, 10407]]]}, "362": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.getType() == Token.BLOCK)", [84317, 84372]]]}, "372": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(n.getType() == Token.TRY)", [83835, 83888]]]}, "400": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.getFirstChild() == n", [48179, 48206]]]}, "459": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(nType == Token.NAME || nType == Token.GETPROP ||\n        nType == Token.GETELEM)", [61084, 61192]]]}, "495": {"src/com/google/javascript/jscomp/NodeUtil.java": [[">", [74662, 74663]]]}, "500": {"src/com/google/javascript/jscomp/NodeUtil.java": [["!=", [17877, 17879]]]}, "501": {"src/com/google/javascript/jscomp/NodeUtil.java": [["includeFunctions && !NodeUtil.isFunctionDeclaration(n)", [18421, 18475]]]}, "565": {"src/com/google/javascript/jscomp/NodeUtil.java": [["isSimpleOperatorType(n.getType())", [20473, 20506]]]}, "573": {"src/com/google/javascript/jscomp/NodeUtil.java": [["(Character.getType(c) == Character.SPACE_SEPARATOR)\n            ? TernaryValue.TRUE : TernaryValue.FALSE", [11928, 12032]]]}, "644": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkArgument(isFunction(function))", [57949, 57998]]]}, "662": {"src/com/google/javascript/jscomp/NodeUtil.java": [["mayBeStringHelper(n)", [40694, 40714]]]}, "677": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(tryNode.getType() == Token.TRY)", [53959, 54015]]]}, "684": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(n.getType() == Token.NEW)", [31688, 31738]]]}, "692": {"src/com/google/javascript/jscomp/NodeUtil.java": [["nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true)", [72367, 72419]]]}, "708": {"src/com/google/javascript/jscomp/NodeUtil.java": [["nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true)", [72970, 73022]]]}, "723": {"src/com/google/javascript/jscomp/NodeUtil.java": [["nameNode.putProp(Node.ORIGINALNAME_PROP, originalName)", [73792, 73846]]]}, "750": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(value.getNext() == null)", [78693, 78742]]]}, "754": {"src/com/google/javascript/jscomp/NodeUtil.java": [["NodeUtil.constructorCallHasSideEffects(n, compiler)", [32562, 32613]]]}, "770": {"src/com/google/javascript/jscomp/NodeUtil.java": [["3", [35305, 35306]]]}, "771": {"src/com/google/javascript/jscomp/NodeUtil.java": [["5", [35375, 35376]]]}, "772": {"src/com/google/javascript/jscomp/NodeUtil.java": [["6", [35410, 35411]]]}, "773": {"src/com/google/javascript/jscomp/NodeUtil.java": [["7", [35445, 35446]]]}, "774": {"src/com/google/javascript/jscomp/NodeUtil.java": [["8", [35545, 35546]]]}, "775": {"src/com/google/javascript/jscomp/NodeUtil.java": [["10", [35772, 35774]]]}, "816": {"src/com/google/javascript/jscomp/NodeUtil.java": [["copyNameAnnotations(nameNode, var.getFirstChild())", [67430, 67480]]]}, "821": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(NodeUtil.hasFinally(tryNode))", [51993, 52047]]]}, "822": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(NodeUtil.hasFinally(tryNode))", [52294, 52348]]]}, "823": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.removeChild(node)", [52924, 52948]]]}, "824": {"src/com/google/javascript/jscomp/NodeUtil.java": [["parent.removeChild(node)", [53232, 53256]]]}, "847": {"src/com/google/javascript/jscomp/NodeUtil.java": [["node.putProp(Node.ORIGINALNAME_PROP, originalName)", [72090, 72140]]]}, "857": {"src/com/google/javascript/jscomp/NodeUtil.java": [["Preconditions.checkState(block.getType() == Token.BLOCK)", [54312, 54368]]]}}