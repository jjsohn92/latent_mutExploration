<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canAssignTo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGoogBar(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canAssignTo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGoogBar(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::canAssignTo</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canAssignTo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>15</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNamedGoogBar(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::canAssignTo</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canBeCalled</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testBooleanValueType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::canBeCalled</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canTestForEqualityWith</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::canTestForEqualityWith</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canTestForEqualityWith</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::canTestForEqualityWith</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canTestForShallowEqualityWith</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testVoidType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canTestForShallowEqualityWith</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testVoidType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>canTestForShallowEqualityWith</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>20</index><block>6</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testVoidType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::canTestForShallowEqualityWith</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>dereference</mutatedMethod><methodDescription>()Lcom/google/javascript/rhino/jstype/ObjectType;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>com.google.javascript.jscomp.CheckAccessControlsTest.testNoWarningInDeprecatedFunction(com.google.javascript.jscomp.CheckAccessControlsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>dereference</mutatedMethod><methodDescription>()Lcom/google/javascript/rhino/jstype/ObjectType;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>23</index><block>6</block><killingTest>com.google.javascript.jscomp.CheckAccessControlsTest.testNoWarningInDeprecatedFunction(com.google.javascript.jscomp.CheckAccessControlsTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::dereference</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>differsFrom</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>11</block><killingTest>com.google.javascript.rhino.jstype.UnionTypeTest.testUnionType(com.google.javascript.rhino.jstype.UnionTypeTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>differsFrom</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>884</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.jscomp.LinkedFlowScopeTest.testDiffer2(com.google.javascript.jscomp.LinkedFlowScopeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>differsFrom</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>884</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>com.google.javascript.jscomp.LinkedFlowScopeTest.testDiffer2(com.google.javascript.jscomp.LinkedFlowScopeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>differsFrom</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>885</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>5</block><killingTest>com.google.javascript.jscomp.LinkedFlowScopeTest.testDiffer2(com.google.javascript.jscomp.LinkedFlowScopeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>differsFrom</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>31</index><block>11</block><killingTest>com.google.javascript.rhino.jstype.UnionTypeTest.testUnionType(com.google.javascript.rhino.jstype.UnionTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::differsFrom</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>differsFrom</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>885</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>22</index><block>8</block><killingTest>com.google.javascript.jscomp.LinkedFlowScopeTest.testJoin2(com.google.javascript.jscomp.LinkedFlowScopeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::differsFrom</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>differsFrom</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>31</index><block>11</block><killingTest>com.google.javascript.rhino.jstype.UnionTypeTest.testUnionType(com.google.javascript.rhino.jstype.UnionTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::differsFrom</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest.testGoogIsDef2(com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="37"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>16</index><block>4</block><killingTest>com.google.javascript.jscomp.TypedScopeCreatorTest.testBadCtorInit1(com.google.javascript.jscomp.TypedScopeCreatorTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>filterNoResolvedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testLeastSupertypeUnresolvedNamedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>filterNoResolvedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>666</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeLeastSuperType4(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="410"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>filterNoResolvedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>filterNoResolvedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>15</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNamedSubtypeChain(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>filterNoResolvedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>24</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNamedSubtypeChain(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>filterNoResolvedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>11</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeSimpleTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::filterNoResolvedType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>filterNoResolvedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>106</index><block>29</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNamedSubtypeChain(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::filterNoResolvedType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>filterNoResolvedType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>111</index><block>30</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testLeastSupertypeUnresolvedNamedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::filterNoResolvedType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>findPropertyType</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testStringEnumType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>findPropertyType</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>16</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testStringEnumType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::findPropertyType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>forceResolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>938</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeRegistryTest.testForceResolve(com.google.javascript.rhino.jstype.JSTypeRegistryTest)</killingTest><description>removed call to com/google/javascript/rhino/jstype/JSTypeRegistry::setResolveMode</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>forceResolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>940</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>3</block><killingTest /><description>removed call to com/google/javascript/rhino/jstype/JSTypeRegistry::setResolveMode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>forceResolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>941</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeRegistryTest.testForceResolve(com.google.javascript.rhino.jstype.JSTypeRegistryTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::forceResolve</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getDisplayName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>4</index><block>0</block><killingTest /><description>replaced return value with "" for com/google/javascript/rhino/jstype/JSType::getDisplayName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testReflexivityOfGreatestSubtype(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>11</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType5(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>18</index><block>5</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testReflexivityOfGreatestSubtype(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testReflexivityOfGreatestSubtype(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>6</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>8</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeSimpleTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>13</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>17</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeWithProperty(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>21</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeWithProperty(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>25</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType5(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><block>29</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType5(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>31</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType5(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testReflexivityOfGreatestSubtype(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>36</index><block>11</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeSimpleTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>48</index><block>15</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>60</index><block>19</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordAndObjectChain2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>73</index><block>23</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeWithProperty(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>86</index><block>27</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSymmetryOfGreatestSubtype(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>101</index><block>33</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeGreatestSubType5(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getGreatestSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>650</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>108</index><block>35</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeSimpleTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getGreatestSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getLeastSupertype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetAndSetJSDocInfoWithObjectTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getLeastSupertype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>11</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNullableNamedTypeChain(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getLeastSupertype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getLeastSupertype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>18</index><block>5</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetAndSetJSDocInfoWithObjectTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getLeastSupertype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getLeastSupertype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testLeastSupertypeUnresolvedNamedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getLeastSupertype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>31</index><block>5</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetAndSetJSDocInfoWithObjectTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getLeastSupertype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getNativeType</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateAnonymousObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getNativeType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getRestrictedTypeGivenToBooleanOutcome</mutatedMethod><methodDescription>(Z)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRestrictedTypeGivenToBoolean(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getRestrictedTypeGivenToBooleanOutcome</mutatedMethod><methodDescription>(Z)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>15</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRestrictedTypeGivenToBoolean(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getRestrictedTypeGivenToBooleanOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getRestrictedTypeGivenToBooleanOutcome</mutatedMethod><methodDescription>(Z)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>22</index><block>5</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRestrictedTypeGivenToBoolean(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getRestrictedTypeGivenToBooleanOutcome</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderEquality5(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>21</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderEquality5(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderEquality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>40</index><block>8</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderEquality6(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderEquality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>756</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>49</index><block>10</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderEquality5(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderEquality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>777</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderInequality1(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>779</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>21</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderInequality1(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderInequality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>786</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>46</index><block>9</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderInequality2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderInequality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>790</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>55</index><block>11</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypesUnderInequality1(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderInequality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>14</index><block>2</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testSheqCondition2(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderShallowEquality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>822</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testSheqCondition1(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>5</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testShneCondition5(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>7</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testSheqCondition5(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>9</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testSheqCondition4(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>11</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testSheqCondition4(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>21</index><block>3</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testSheqCondition3(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderShallowInequality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>832</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>47</index><block>13</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testSheqCondition4(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderShallowInequality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>getTypesUnderShallowInequality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType$TypePair;</methodDescription><lineNumber>834</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>56</index><block>15</block><killingTest>com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testSheqCondition2(com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::getTypesUnderShallowInequality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>hasDisplayName</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>hasDisplayName</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testBooleanObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>hasDisplayName</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>20</index><block>6</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::hasDisplayName</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5771"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>1</block><killingTest /><description>replaced int return with 0 for com/google/javascript/rhino/jstype/JSType::hashCode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isAllType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateAnonymousObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isAllType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isArrayType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isArrayType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isBooleanObjectType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isBooleanObjectType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isBooleanValueType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isBooleanValueType</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isCheckedUnknownType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest /><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isCheckedUnknownType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isConstructor</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGoogBar(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isConstructor</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isDateType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isDateType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="44"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEmptyType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingFunctionVariableArgsOneOnly(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="44"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEmptyType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingFunctionVariableArgsOneOnly(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEmptyType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>5</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testForwardDeclaredNamedTypeEquals(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="44"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEmptyType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>7</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingFunctionVariableArgsOneOnly(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="44"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEmptyType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>27</index><block>10</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingFunctionVariableArgsOneOnly(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isEmptyType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEnumElementType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isEnumElementType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEnumType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isEnumType</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="10"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalent</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="9"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalent</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalent</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>com.google.javascript.rhino.NodeTest.testCheckTreeTypeAwareEqualsDifferentNull(com.google.javascript.rhino.NodeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalent</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>25</index><block>6</block><killingTest>com.google.javascript.rhino.NodeTest.testCheckTreeTypeAwareEqualsSameNull(com.google.javascript.rhino.NodeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isEquivalent</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalent</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>25</index><block>6</block><killingTest>com.google.javascript.rhino.NodeTest.testCheckTreeTypeAwareEqualsDifferent(com.google.javascript.rhino.NodeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isEquivalent</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalentTo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateAnonymousObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalentTo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="227"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalentTo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>11</index><block>2</block><killingTest /><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isEquivalentTo</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalentTo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>11</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeWithProperty(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isEquivalentTo</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isEquivalentTo</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>25</index><block>6</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateOptionalType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isEquivalentTo</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isFunctionPrototypeType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNamedGoogBar(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isFunctionPrototypeType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isFunctionType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingObjectTopOfObjects(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isFunctionType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isInstanceType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isInstanceType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="684"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isInterface</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.jscomp.TypeCheckTest.testDirectPrototypeAssign(com.google.javascript.jscomp.TypeCheckTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isInterface</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNamedType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNamedType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="17"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNoObjectType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testApplyOfDateMethod(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNoObjectType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="16"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNoResolvedType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingObjectTopOfObjects(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNoResolvedType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNoType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateAnonymousObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNoType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="46"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNominalType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testWeirdBug(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNominalType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNullType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNullType</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNullable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>8</index><block>2</block><killingTest /><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isNullable</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNullable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNullable</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNumber</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isNumber</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNumber</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testStringObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNumber</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNumberObjectType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNumberObjectType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isNumberValueType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isNumberValueType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isObject</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingSimpleTypes(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isObject</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isOrdinaryFunction</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.jscomp.LooseTypeCheckTest.testWarnDataPropertyOnInterface4(com.google.javascript.jscomp.LooseTypeCheckTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isOrdinaryFunction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isRecordType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateAnonymousObjectType2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isRecordType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isRegexpType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isRegexpType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isResolved</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testForwardDeclaredNamedTypeEquals(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isResolved</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isResolved</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testForwardDeclaredNamedTypeEquals(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isResolved</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isString</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoResolvedType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isString</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isString</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testAllType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isString</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isStringObjectType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isStringObjectType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isStringValueType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isStringValueType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>897</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateOptionalType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>901</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateOptionalType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>905</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>7</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateOptionalType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>909</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>9</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateAnonymousObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>912</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>16</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeWithProperty(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>918</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>19</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateAnonymousObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>898</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>9</index><block>2</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingFunctionFixedArgs(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="14"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>902</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>20</index><block>5</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingFunctionFixedArgs(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>30</index><block>8</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingFunctionMultipleFixedArgs(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>66</index><block>17</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingFunctionVariableArgsBoth(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>84</index><block>22</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testRecordAndObjectChain2(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::isSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>84</index><block>22</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGreatestSubtypeWithProperty(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isSubtype</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z</methodDescription><lineNumber>921</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>89</index><block>23</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateOptionalType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isSubtype</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isTemplateType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.jscomp.TypedScopeCreatorTest.testTemplateType(com.google.javascript.jscomp.TypedScopeCreatorTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isTemplateType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isTheObjectType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isTheObjectType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isUnionType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testFunctionTypeRepresentation(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isUnionType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="22"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isUnknownType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testFunctionTypeRepresentation(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isUnknownType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>isVoidType</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::isVoidType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>matchesInt32Context</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::matchesInt32Context</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>matchesInt32Context</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testVoidType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::matchesInt32Context</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>matchesNumberContext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testAllType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::matchesNumberContext</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>matchesObjectContext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest /><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::matchesObjectContext</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>matchesStringContext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest /><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::matchesStringContext</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>matchesUint32Context</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::matchesUint32Context</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>matchesUint32Context</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testVoidType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::matchesUint32Context</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>resolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateAnonymousObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>resolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateOptionalType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2442"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>resolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>969</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>6</block><killingTest /><description>removed call to com/google/javascript/rhino/jstype/JSType::setResolvedTypeInternal</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>resolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>17</index><block>3</block><killingTest /><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::resolve</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>resolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>23</index><block>4</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testForwardDeclaredNamedTypeEquals(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::resolve</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>resolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>49</index><block>7</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateAnonymousObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::resolve</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="127"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>restrictByNotNullOrUndefined</mutatedMethod><methodDescription>()Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.JSDocInfoTest.testSetReturnTypeAndBaseType(com.google.javascript.rhino.JSDocInfoTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::restrictByNotNullOrUndefined</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="24"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>safeResolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGoogBar(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="14"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>safeResolve</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>15</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testSubtypingFunctionFixedArgs(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::safeResolve</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>setValidator</mutatedMethod><methodDescription>(Lcom/google/common/base/Predicate;)Z</methodDescription><lineNumber>1010</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>com.google.javascript.jscomp.CodePrinterTest.testTypeAnnotationsImplements(com.google.javascript.jscomp.CodePrinterTest)</killingTest><description>replaced boolean return with false for com/google/javascript/rhino/jstype/JSType::setValidator</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="44"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>setValidator</mutatedMethod><methodDescription>(Lcom/google/common/base/Predicate;)Z</methodDescription><lineNumber>1010</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>com.google.javascript.jscomp.LooseTypeCheckTest.testBadImplementsNonObjectType(com.google.javascript.jscomp.LooseTypeCheckTest)</killingTest><description>replaced boolean return with true for com/google/javascript/rhino/jstype/JSType::setValidator</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEquality</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::testForEquality</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>5</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>7</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>9</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>11</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>15</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>16</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>17</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>18</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>22</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>24</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>26</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testFunctionInstanceType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><block>32</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypeUnderEquality1(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>34</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testGetTypeUnderEquality1(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>38</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>40</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>25</index><block>12</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testUnknownType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::testForEqualityHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>53</index><block>19</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::testForEqualityHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>58</index><block>20</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testNoType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::testForEqualityHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>102</index><block>35</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testFunctionInstanceType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::testForEqualityHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>107</index><block>36</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testTestForEquality(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::testForEqualityHelper</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>testForEqualityHelper</mutatedMethod><methodDescription>(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;</methodDescription><lineNumber>553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>123</index><block>42</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCanTestForEqualityWithCornerCases(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>replaced return value with null for com/google/javascript/rhino/jstype/JSType::testForEqualityHelper</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>toDebugHashCodeString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>14</index><block>6</block><killingTest /><description>replaced return value with "" for com/google/javascript/rhino/jstype/JSType::toDebugHashCodeString</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>JSType.java</sourceFile><mutatedClass>com.google.javascript.rhino.jstype.JSType</mutatedClass><mutatedMethod>toObjectType</mutatedMethod><methodDescription>()Lcom/google/javascript/rhino/jstype/ObjectType;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.google.javascript.rhino.jstype.JSTypeTest.testCreateAnonymousObjectType(com.google.javascript.rhino.jstype.JSTypeTest)</killingTest><description>negated conditional</description></mutation>
</mutations>