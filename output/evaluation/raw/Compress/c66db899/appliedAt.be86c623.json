{"37": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["in.close()", [22633, 22643]]]}, "38": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["inf.end()", [22685, 22694]]]}, "49": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [26718, 26719]]]}, "64": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["<", [28186, 28187]]]}, "73": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [29662, 29663]]]}, "74": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["count(buf.limit())", [29712, 29730]]]}, "78": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [39322, 39323]]]}, "83": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["==", [39902, 39904]]]}, "84": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["==", [40131, 40133]]]}, "127": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">=", [29286, 29288]]]}, "129": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">=", [29286, 29288]]]}, "147": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">>", [10249, 10251]]]}, "148": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.entry.setPlatform((versionMadeBy >> ZipFile.BYTE_SHIFT) & ZipFile.NIBLET_MASK)", [10208, 10294]]]}, "149": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.entry.setTime(time)", [10863, 10890]]]}, "150": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.entry.setStreamContiguous(true)", [12228, 12267]]]}, "204": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["b == ZipArchiveOutputStream.EOCD_SIG[0]", [41538, 41577]]]}, "223": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["!=", [15303, 15305]]]}, "224": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["!=", [15374, 15376]]]}, "249": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["pushedBackBytes(length)", [37670, 37693]]]}, "250": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["<", [16943, 16944]]]}, "251": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [16917, 16918]]]}, "252": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">=", [18410, 18412]]]}, "253": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["-", [16978, 16979]]]}, "254": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.crc.update(buffer, offset, read)", [18430, 18470]]]}, "278": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.entry.setCrc(val.getValue())", [30371, 30407]]]}, "279": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.entry.setCompressedSize(ZipLong.getValue(twoDwordBuf))", [31305, 31367]]]}, "296": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [21962, 21963]]]}, "312": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["!=", [41401, 41403]]]}, "313": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["count(1)", [41422, 41430]]]}, "329": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["<", [20617, 20618]]]}, "331": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["-", [20596, 20597]]]}, "332": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["-", [20732, 20733]]]}, "333": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["count(l)", [20454, 20462]]]}, "350": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [40827, 40828]]]}, "353": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["-", [40744, 40745]]]}, "354": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["==", [40881, 40883]]]}, "355": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["count(x)", [40952, 40960]]]}, "376": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">=", [23398, 23400]]]}, "377": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["<", [23463, 23464]]]}, "378": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [23593, 23594]]]}, "381": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["-", [23513, 23514]]]}, "382": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["+=", [23734, 23736]]]}, "383": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["skipped", [23683, 23690]]]}, "408": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["realSkip((long) entriesRead * CFH_LEN - LFH_LEN)", [38733, 38781]]]}, "409": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["realSkip(ZipShort.getValue(shortBuf))", [38967, 39004]]]}, "430": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["!entry.getGeneralPurposeBit().usesDataDescriptor()\n\n                || (allowStoredEntriesWithDataDescriptor && entry.getMethod() == ZipEntry.STORED)\n                || entry.getMethod() == ZipEntry.DEFLATED\n                || entry.getMethod() == ZipMethod.ENHANCED_DEFLATED.getCode()", [32029, 32314]]]}}