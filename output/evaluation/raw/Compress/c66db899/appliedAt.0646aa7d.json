{"37": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["in.close()", [22643, 22653]]]}, "38": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["inf.end()", [22695, 22704]]]}, "49": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [26728, 26729]]]}, "64": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["<", [28196, 28197]]]}, "73": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [29672, 29673]]]}, "74": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["count(buf.limit())", [29722, 29740]]]}, "78": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [39332, 39333]]]}, "83": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["==", [39912, 39914]]]}, "84": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["==", [40141, 40143]]]}, "127": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">=", [29296, 29298]]]}, "129": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">=", [29296, 29298]]]}, "147": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">>", [10249, 10251]]]}, "148": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.entry.setPlatform((versionMadeBy >> ZipFile.BYTE_SHIFT) & ZipFile.NIBLET_MASK)", [10208, 10294]]]}, "149": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.entry.setTime(time)", [10863, 10890]]]}, "150": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.entry.setStreamContiguous(true)", [12228, 12267]]]}, "204": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["b == ZipArchiveOutputStream.EOCD_SIG[0]", [41548, 41587]]]}, "223": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["!=", [15303, 15305]]]}, "224": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["!=", [15374, 15376]]]}, "249": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["pushedBackBytes(length)", [37680, 37703]]]}, "250": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["<", [16943, 16944]]]}, "251": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [16917, 16918]]]}, "252": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">=", [18410, 18412]]]}, "253": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["-", [16978, 16979]]]}, "254": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.crc.update(buffer, offset, read)", [18430, 18470]]]}, "278": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.entry.setCrc(val.getValue())", [30381, 30417]]]}, "279": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.entry.setCompressedSize(ZipLong.getValue(twoDwordBuf))", [31315, 31377]]]}, "296": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [21972, 21973]]]}, "312": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["!=", [41411, 41413]]]}, "313": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["count(1)", [41432, 41440]]]}, "329": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["<", [20627, 20628]]]}, "331": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["-", [20606, 20607]]]}, "332": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["-", [20742, 20743]]]}, "333": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["count(l)", [20464, 20472]]]}, "350": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [40837, 40838]]]}, "353": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["-", [40754, 40755]]]}, "354": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["==", [40891, 40893]]]}, "355": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["count(x)", [40962, 40970]]]}, "376": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">=", [23408, 23410]]]}, "377": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["<", [23473, 23474]]]}, "378": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [23603, 23604]]]}, "381": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["-", [23523, 23524]]]}, "382": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["+=", [23744, 23746]]]}, "383": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["skipped", [23693, 23700]]]}, "408": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["realSkip((long) entriesRead * CFH_LEN - LFH_LEN)", [38743, 38791]]]}, "409": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["realSkip(ZipShort.getValue(shortBuf))", [38977, 39014]]]}, "430": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["!entry.getGeneralPurposeBit().usesDataDescriptor()\n\n                || (allowStoredEntriesWithDataDescriptor && entry.getMethod() == ZipEntry.STORED)\n                || entry.getMethod() == ZipEntry.DEFLATED\n                || entry.getMethod() == ZipMethod.ENHANCED_DEFLATED.getCode()", [32039, 32324]]]}}