<mutations>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>179</index><block>27</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>2</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>889</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>6</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>890</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>8</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>890</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>10</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>891</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>14</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>15</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>15</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><block>15</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>896</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><block>17</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>896</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>127</index><block>19</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>898</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><block>20</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>898</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><block>20</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>158</index><block>23</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><block>23</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>889</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>889</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>890</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>890</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>891</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>891</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><block>14</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>896</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><block>17</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>896</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>132</index><block>19</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>901</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>21</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>162</index><block>23</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::pushback</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>907</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>171</index><block>25</block><killingTest /><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>908</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>175</index><block>26</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readDataDescriptor</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>912</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>185</index><block>28</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::bufferContainsSignature</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>912</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>185</index><block>28</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::bufferContainsSignature</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>5</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>929</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>6</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>7</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>2</block><killingTest /><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>5</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>933</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>56</index><block>8</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::cacheBytesRead</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properlyMarksEntriesAsUnreadableIfUncompressedSizeIsUnknown(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properlyMarksEntriesAsUnreadableIfUncompressedSizeIsUnknown(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properlyMarksEntriesAsUnreadableIfUncompressedSizeIsUnknown(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>6</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properlyMarksEntriesAsUnreadableIfUncompressedSizeIsUnknown(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>36</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properlyMarksEntriesAsUnreadableIfUncompressedSizeIsUnknown(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::canReadEntryData</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>41</index><block>10</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::canReadEntryData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.skipsPK00Prefix(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testCOMPRESS335(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testCOMPRESS335(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>33</index><block>5</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.skipsPK00Prefix(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::checksig</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>23</index><block>3</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testCOMPRESS335(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::checksig</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="55"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="55"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest /><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="55"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>2</block><killingTest /><description>removed call to java/util/zip/Inflater::end</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="27"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>666</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>73</index><block>17</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>663</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>17</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>667</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>20</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>22</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>652</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>6</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>12</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>666</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>17</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>25</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><block>27</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><block>29</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::drainCurrentEntryData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>667</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>86</index><block>20</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::pushback</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>109</index><block>26</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::drainCurrentEntryData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>123</index><block>30</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readDataDescriptor</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="14"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>129</index><block>31</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to java/util/zip/Inflater::reset</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>currentEntryHasOutstandingBytes</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>currentEntryHasOutstandingBytes</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>currentEntryHasOutstandingBytes</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>5</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="9"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>currentEntryHasOutstandingBytes</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>26</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::currentEntryHasOutstandingBytes</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>20</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>4</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>68</index><block>19</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testOffsets(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="30"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>742</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>5</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="30"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>8</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>11</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to java/util/zip/Inflater::setInput</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>751</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>57</index><block>12</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::fill</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="29"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>981</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>981</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>981</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>5</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>987</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>988</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>14</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="16"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="29"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><block>20</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>111</index><block>21</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="25"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>3</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>5</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="25"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>37</index><block>6</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>replaced long return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::getBytesInflated</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/ArchiveEntry;</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testRawNameReadFromStream(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::getNextEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>146</index><block>29</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceDefaultsToName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>200</index><block>40</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceDefaultsToName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>213</index><block>43</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceDefaultsToName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>231</index><block>47</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceDefaultsToName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>257</index><block>52</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceDefaultsToName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>269</index><block>53</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceDefaultsToName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>281</index><block>54</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceDefaultsToName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>286</index><block>55</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 12 to -12</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>297</index><block>57</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceIsSetToUnicodeExtraField(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="52"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>307</index><block>58</block><killingTest /><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="52"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>154</index><block>30</block><killingTest /><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>156</index><block>30</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>551</index><block>119</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="43"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>7</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>15</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>17</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><block>21</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="18"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>173</index><block>33</block><killingTest>org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testRead7ZipArchiveForStream(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>244</index><block>48</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceDefaultsToName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>331</index><block>62</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceDefaultsToName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>360</index><block>68</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceIsSetToUnicodeExtraField(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>363</index><block>69</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceIsSetToUnicodeExtraField(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>417</index><block>85</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>424</index><block>88</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>427</index><block>89</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>430</index><block>90</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>532</index><block>115</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>4</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::closeEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>47</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceDefaultsToName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFirstLocalFileHeader</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><block>10</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>96</index><block>18</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::skipRemainderOfArchive</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="52"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>157</index><block>30</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setPlatform</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="17"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>197</index><block>39</block><killingTest>org.apache.commons.compress.archivers.zip.EncryptedArchiveTest.testReadPasswordEncryptedEntryViaStream(org.apache.commons.compress.archivers.zip.EncryptedArchiveTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setGeneralPurposeBit</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>210</index><block>42</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setMethod</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="52"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>228</index><block>46</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setTime</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="22"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>254</index><block>51</block><killingTest>org.apache.commons.compress.archivers.zip.ExplodeSupportTest.testZipStreamWithImplodeCompression4K2Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCrc</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>317</index><block>58</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceDefaultsToName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>327</index><block>61</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceDefaultsToName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>338</index><block>64</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceIsSetToEFS(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setNameSource</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>349</index><block>65</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceIsSetToUnicodeExtraField(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>356</index><block>67</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceIsSetToUnicodeExtraField(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setExtra</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>371</index><block>71</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceIsSetToUnicodeExtraField(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipUtil::setNameAndCommentFromExtraFields</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>378</index><block>72</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::processZip64Extra</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>385</index><block>74</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testOffsets(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setLocalHeaderOffset</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>393</index><block>77</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testOffsets(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setDataOffset</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="52"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>400</index><block>79</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setStreamContiguous</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>558</index><block>120</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceDefaultsToName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::getNextZipEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>isFirstByteOfEocdSig</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>1050</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="29"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>isFirstByteOfEocdSig</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>1050</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>15</index><block>3</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::isFirstByteOfEocdSig</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.skipsPK00Prefix(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testCOMPRESS335(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>5</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testCOMPRESS335(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>7</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testCOMPRESS335(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>10</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testCOMPRESS335(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testDetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>47</index><block>13</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testCOMPRESS335(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="52"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><block>16</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCompressedSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>20</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>75</index><block>24</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCompressedSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>83</index><block>27</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>pushback</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>937</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to java/io/PushbackInputStream::unread</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="27"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>pushback</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>938</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::pushedBackBytes</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="40"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="40"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>6</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="39"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>203</index><block>60</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="40"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>8</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>5</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>6</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>15</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>21</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>27</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><block>32</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>141</index><block>38</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>150</index><block>42</block><killingTest>org.apache.commons.compress.archivers.zip.ExplodeSupportTest.testZipStreamWithImplodeCompression4K2Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><block>46</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>168</index><block>50</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>203</index><block>60</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="9"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><block>12</block><killingTest>org.apache.commons.compress.archivers.zip.EncryptedArchiveTest.testReadPasswordEncryptedEntryViaStream(org.apache.commons.compress.archivers.zip.EncryptedArchiveTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipUtil::checkRequestedFeatures</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="39"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>212</index><block>62</block><killingTest /><description>removed call to java/util/zip/CRC32::update</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>22</index><block>4</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::read</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>217</index><block>63</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::read</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>13</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testListAllFilesWithNestedArchive(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>15</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>4</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="23"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><block>9</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCrc</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>49</index><block>10</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>786</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>77</index><block>16</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::pushback</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="23"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>86</index><block>19</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCompressedSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>788</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>96</index><block>22</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>790</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>107</index><block>26</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCompressedSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>791</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>117</index><block>29</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>6</block><killingTest>org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest.testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest.testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>22</index><block>4</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readDeflated</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>54</index><block>12</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadJar(org.apache.commons.compress.IOMethodsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readDeflated</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceDefaultsToName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.nameSourceDefaultsToName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>8</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>9</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>10</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="30"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest.testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>17</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>19</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>538</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>46</index><block>10</block><killingTest>org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest.testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFromInflater</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>88</index><block>20</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadJar(org.apache.commons.compress.IOMethodsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFromInflater</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>756</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testOffsets(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="29"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readOneByte</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="29"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readOneByte</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1044</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>2</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readOneByte</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1046</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>21</index><block>3</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readOneByte</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>41</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>13</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>126</index><block>27</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>22</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>27</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><block>29</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>156</index><block>32</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>17</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>126</index><block>27</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>3</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStoredEntry</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>93</index><block>20</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>25</index><block>5</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStored</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>45</index><block>10</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStored</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>80</index><block>18</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStored</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>162</index><block>33</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStored</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>65</index><block>12</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>8</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>12</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>13</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>862</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>1019</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="29"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>1023</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="29"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>1022</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>3</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>1028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>10</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>1019</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>1023</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="29"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>1024</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="29"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>1027</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><block>9</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="27"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="27"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="27"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="27"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>3</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="7"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>9</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testListAllFilesWithNestedArchive(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="27"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>587</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>58</index><block>8</block><killingTest /><description>replaced long return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::skip</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>74</index><block>10</block><killingTest /><description>replaced long return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::skip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>966</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>966</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="29"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>966</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::realSkip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::findEocdRecord</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>968</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::realSkip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>969</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="29"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>5</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::realSkip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsCompressedSizeFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>815</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properlyMarksEntriesAsUnreadableIfUncompressedSizeIsUnknown(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsCompressedSizeFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properlyMarksEntriesAsUnreadableIfUncompressedSizeIsUnknown(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsCompressedSizeFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>6</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properlyMarksEntriesAsUnreadableIfUncompressedSizeIsUnknown(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsCompressedSizeFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsCompressedSizeFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsCompressedSizeFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsCompressedSizeFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>815</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>45</index><block>15</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properlyMarksEntriesAsUnreadableIfUncompressedSizeIsUnknown(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::supportsCompressedSizeFor</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="25"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>805</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>806</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>7</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadJar(org.apache.commons.compress.IOMethodsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>807</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>10</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="40"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>40</index><block>13</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::supportsDataDescriptorFor</description></mutation>
</mutations>