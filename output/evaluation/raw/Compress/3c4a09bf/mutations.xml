<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>134</index><block>42</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>9</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>13</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>17</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>22</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>26</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>31</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>35</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>126</index><block>40</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>143</index><block>45</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>157</index><block>50</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>14</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongLinkNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setLinkName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>19</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setGroupId</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>78</index><block>23</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setGroupName</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>92</index><block>28</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setUserId</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>105</index><block>32</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setUserName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>119</index><block>37</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testBigNumberPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>136</index><block>42</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setModTime</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>150</index><block>47</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setDevMinor</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>164</index><block>52</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setDevMajor</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="21"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>0</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="21"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="20"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>2</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadTar(org.apache.commons.compress.IOMethodsTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>14</index><block>1</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::available</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>23</index><block>2</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::available</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>21</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::canReadEntryData</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>25</index><block>6</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::canReadEntryData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="46"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long modulus with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>3</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getCurrentEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>649</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getCurrentEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><block>11</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>65</index><block>13</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>12</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>7</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>11</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>12</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>14</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>85</index><block>15</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>93</index><block>17</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getLongNameData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/ArchiveEntry;</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.compress.archivers.TarTestCase.testTarUnarchive(org.apache.commons.compress.archivers.TarTestCase)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getNextEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>15</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>17</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongLinkNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><block>22</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>130</index><block>24</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>29</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="42"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><block>32</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::skipRecordPadding</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>115</index><block>20</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongLinkNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setLinkName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>143</index><block>27</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>153</index><block>30</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::paxHeaders</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>163</index><block>33</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::readGNUSparse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>175</index><block>35</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getNextTarEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="7"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>4</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::tryToConsumeSecondEOFRecord</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::consumeRemainderOfLastBlock</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>35</index><block>7</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getRecord</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecordSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getRecordSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isAtEOF</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::isAtEOF</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isAtEOF</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::isAtEOF</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>16</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::isEOFRecord</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>markSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::markSupported</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="9"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>8</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>10</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>716</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>17</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>29</index><block>6</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>57</index><block>13</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>77</index><block>18</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>688</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>81</index><block>19</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testDetectionNotArchive(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>26</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>48</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>12</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>22</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><block>27</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>140</index><block>27</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>141</index><block>27</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>9</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>13</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>148</index><block>28</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>127</index><block>25</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>158</index><block>31</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with Collections.emptyMap for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::parsePaxHeaders</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>paxHeaders</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::applyPaxHeadersToCurrentEntry</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><block>10</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>15</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>9</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="21"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><block>14</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>605</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>19</index><block>2</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::read</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>87</index><block>16</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::read</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readGNUSparse</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readGNUSparse</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readGNUSparse</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>32</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::readRecord</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="24"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="24"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="24"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>44</index><block>5</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>replaced long return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::skip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="24"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="25"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>1</block><killingTest /><description>Replaced long modulus with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>1</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>5</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>8</block><killingTest>org.apache.commons.compress.archivers.LongPathTest.testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>14</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>2</block><killingTest /><description>removed call to java/io/InputStream::mark</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>11</block><killingTest /><description>removed call to java/io/InputStream::reset</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>67</index><block>10</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::pushedBackBytes</description></mutation>
</mutations>