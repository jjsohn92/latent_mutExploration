<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ChecksumCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ChecksumCalculatingInputStream</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest.testClassInstantiationWithParameterBeingNullThrowsNullPointerExceptionTwo(org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ChecksumCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ChecksumCalculatingInputStream</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest.testClassInstantiationWithParameterBeingNullThrowsNullPointerExceptionThree(org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ChecksumCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ChecksumCalculatingInputStream</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest.testReadTakingByteArray(org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest)</killingTest><description>replaced long return with 0 for org/apache/commons/compress/utils/ChecksumCalculatingInputStream::getValue</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ChecksumCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ChecksumCalculatingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest.testSkipReturningPositive(org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ChecksumCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ChecksumCalculatingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest.testReadTakingNoArguments(org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ChecksumCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ChecksumCalculatingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>2</block><killingTest>org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest.testSkipReturningPositive(org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest)</killingTest><description>removed call to java/util/zip/Checksum::update</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ChecksumCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ChecksumCalculatingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>21</index><block>3</block><killingTest>org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest.testReadTakingNoArguments(org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/utils/ChecksumCalculatingInputStream::read</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ChecksumCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ChecksumCalculatingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest.testReadTakingByteArray(org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/utils/ChecksumCalculatingInputStream::read</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="6"><sourceFile>ChecksumCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ChecksumCalculatingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ChecksumCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ChecksumCalculatingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest.testReadTakingByteArray(org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ChecksumCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ChecksumCalculatingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>2</block><killingTest>org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest.testReadTakingByteArray(org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest)</killingTest><description>removed call to java/util/zip/Checksum::update</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ChecksumCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ChecksumCalculatingInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>26</index><block>3</block><killingTest>org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest.testReadTakingByteArray(org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/utils/ChecksumCalculatingInputStream::read</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ChecksumCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ChecksumCalculatingInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest.testSkipReturningPositive(org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ChecksumCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ChecksumCalculatingInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest.testSkipReturningPositive(org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ChecksumCalculatingInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ChecksumCalculatingInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest.testSkipReturningPositive(org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest)</killingTest><description>replaced long return with 0 for org/apache/commons/compress/utils/ChecksumCalculatingInputStream::skip</description></mutation>
</mutations>