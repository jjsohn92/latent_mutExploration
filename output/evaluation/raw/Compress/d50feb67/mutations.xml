<mutations>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>173</index><block>27</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>2</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>6</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>8</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>10</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>796</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>14</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><block>15</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>15</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>15</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><block>17</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><block>19</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><block>20</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><block>20</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>811</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>153</index><block>23</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>811</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>155</index><block>23</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>796</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>796</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>14</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>117</index><block>17</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><block>19</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>806</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>144</index><block>21</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>811</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>157</index><block>23</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::pushback</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>812</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>166</index><block>25</block><killingTest /><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>813</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>170</index><block>26</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readDataDescriptor</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>178</index><block>28</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::bufferContainsSignature</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>178</index><block>28</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::bufferContainsSignature</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>5</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>834</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>6</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>7</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>832</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>2</block><killingTest /><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>5</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>838</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>54</index><block>8</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::cacheBytesRead</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>28</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.EncryptedArchiveTest.testReadPasswordEncryptedEntryViaStream(org.apache.commons.compress.archivers.zip.EncryptedArchiveTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::canReadEntryData</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>32</index><block>8</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::canReadEntryData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.skipsPK00Prefix(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>30</index><block>5</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.skipsPK00Prefix(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::checksig</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>22</index><block>3</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::checksig</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="41"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="41"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest /><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="41"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>2</block><killingTest /><description>removed call to java/util/zip/Inflater::end</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><block>21</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>21</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>24</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>10</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>16</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>21</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><block>25</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>27</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>11</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::drainCurrentEntryData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>93</index><block>24</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::pushback</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>609</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>106</index><block>28</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readDataDescriptor</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>111</index><block>29</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to java/util/zip/Inflater::reset</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="10"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>41</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><block>19</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>4</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="10"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>63</index><block>18</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>5</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>667</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>8</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>11</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to java/util/zip/Inflater::setInput</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>55</index><block>12</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::fill</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>886</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>886</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>886</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>5</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>14</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="16"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>901</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>908</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>20</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>908</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>104</index><block>21</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="23"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>652</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>3</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>5</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="23"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>652</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>35</index><block>6</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>replaced long return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::getBytesInflated</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/ArchiveEntry;</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testReadWinZipArchiveForStream(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::getNextEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>115</index><block>23</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>167</index><block>34</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>180</index><block>37</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>198</index><block>41</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>224</index><block>46</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>236</index><block>47</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>248</index><block>48</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>252</index><block>49</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadZip(org.apache.commons.compress.IOMethodsTest)</killingTest><description>Changed increment from 12 to -12</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>262</index><block>51</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>272</index><block>52</block><killingTest /><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><block>24</block><killingTest /><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>24</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>421</index><block>93</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="23"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>6</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>14</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>16</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>19</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="9"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>142</index><block>27</block><killingTest>org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testRead7ZipArchiveForStream(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>211</index><block>42</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>313</index><block>59</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>316</index><block>60</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>339</index><block>66</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>348</index><block>70</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>377</index><block>80</block><killingTest>org.apache.commons.compress.archivers.zip.ExplodeSupportTest.testZipStreamWithImplodeCompression4K2Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>4</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::closeEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFirstLocalFileHeader</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>46</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>83</index><block>17</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::skipRemainderOfArchive</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>126</index><block>24</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setPlatform</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>164</index><block>33</block><killingTest>org.apache.commons.compress.archivers.zip.EncryptedArchiveTest.testReadPasswordEncryptedEntryViaStream(org.apache.commons.compress.archivers.zip.EncryptedArchiveTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setGeneralPurposeBit</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>177</index><block>36</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setMethod</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>195</index><block>40</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setTime</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="11"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>221</index><block>45</block><killingTest>org.apache.commons.compress.archivers.zip.ExplodeSupportTest.testZipStreamWithImplodeCompression4K2Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCrc</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>282</index><block>52</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>292</index><block>55</block><killingTest>org.apache.commons.compress.archivers.zip.EncryptedArchiveTest.testReadPasswordEncryptedEntryViaStream(org.apache.commons.compress.archivers.zip.EncryptedArchiveTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>302</index><block>56</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>309</index><block>58</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setExtra</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>324</index><block>62</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipUtil::setNameAndCommentFromExtraFields</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>330</index><block>63</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::processZip64Extra</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>428</index><block>94</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::getNextZipEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>isFirstByteOfEocdSig</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>isFirstByteOfEocdSig</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>13</index><block>3</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::isFirstByteOfEocdSig</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="40"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.skipsPK00Prefix(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>5</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>7</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>10</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>10</index><block>1</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>43</index><block>13</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="19"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><block>16</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCompressedSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>62</index><block>20</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>71</index><block>24</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCompressedSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><block>27</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>pushback</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>842</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to java/io/PushbackInputStream::unread</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>pushback</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::pushedBackBytes</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="35"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="35"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>6</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="34"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>154</index><block>46</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="35"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>8</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>5</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>6</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>15</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>21</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><block>26</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>32</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>122</index><block>36</block><killingTest>org.apache.commons.compress.archivers.zip.ExplodeSupportTest.testZipStreamWithImplodeCompression4K2Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>154</index><block>46</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>49</index><block>12</block><killingTest>org.apache.commons.compress.archivers.zip.EncryptedArchiveTest.testReadPasswordEncryptedEntryViaStream(org.apache.commons.compress.archivers.zip.EncryptedArchiveTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipUtil::checkRequestedFeatures</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="34"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>163</index><block>48</block><killingTest /><description>removed call to java/util/zip/CRC32::update</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>21</index><block>4</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::read</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>167</index><block>49</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::read</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>684</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>3</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>15</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>4</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>9</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCrc</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>48</index><block>10</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>75</index><block>16</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::pushback</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>84</index><block>19</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCompressedSize</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>22</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>104</index><block>26</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCompressedSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>114</index><block>29</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadZip(org.apache.commons.compress.IOMethodsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>6</block><killingTest>org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest.testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest.testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>22</index><block>4</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readDeflated</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>51</index><block>12</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadZip(org.apache.commons.compress.IOMethodsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readDeflated</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>8</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>49</index><block>9</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><block>10</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest.testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>17</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>19</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>44</index><block>10</block><killingTest>org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest.testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFromInflater</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>82</index><block>20</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadZip(org.apache.commons.compress.IOMethodsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFromInflater</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>1</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readOneByte</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readOneByte</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>2</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readOneByte</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>20</index><block>3</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readOneByte</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><block>13</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>121</index><block>27</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><block>22</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>27</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><block>29</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>150</index><block>32</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>17</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><block>27</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>3</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStoredEntry</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>89</index><block>20</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>24</index><block>5</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStored</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>43</index><block>10</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStored</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>77</index><block>18</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStored</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>156</index><block>33</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStored</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>760</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>61</index><block>12</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>754</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>8</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>760</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>12</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>762</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>13</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>751</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>760</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>924</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>3</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>933</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>10</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>924</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>929</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><block>9</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>3</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="7"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>9</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>2</block><killingTest>org.apache.commons.compress.changes.ChangeSetTestCase.testDeleteFromJar(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>55</index><block>8</block><killingTest /><description>replaced long return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::skip</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>69</index><block>10</block><killingTest /><description>replaced long return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::skip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>871</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>871</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>871</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::realSkip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>872</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::findEocdRecord</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>873</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::realSkip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>876</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>5</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::realSkip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>7</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadZip(org.apache.commons.compress.IOMethodsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="34"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>29</index><block>10</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::supportsDataDescriptorFor</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::ensureOpen</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>17</index><block>3</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::available</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest /><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>ensureOpen</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>getNextCPIOEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>getNextCPIOEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>5</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>getNextCPIOEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>9</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>getNextCPIOEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>16</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>getNextCPIOEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><block>20</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchive(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>getNextCPIOEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>123</index><block>24</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>getNextCPIOEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>172</index><block>38</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="19"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>getNextCPIOEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::ensureOpen</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>getNextCPIOEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>2</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::closeEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>getNextCPIOEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><block>12</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>getNextCPIOEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>181</index><block>39</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::skipRemainderOfLastBlock</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>getNextCPIOEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>190</index><block>41</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::getNextCPIOEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/ArchiveEntry;</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::getNextEntry</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>3</block><killingTest /><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>6</block><killingTest /><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testDetection(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>538</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>8</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testDetection(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>10</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testDetection(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>12</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testDetection(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>14</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testDetection(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><block>16</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testDetection(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><block>18</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testEmptyCpioArchive(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>118</index><block>20</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testDetection(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>129</index><block>22</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>27</index><block>4</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>45</index><block>7</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>111</index><block>19</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testEmptyCpioArchive(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>122</index><block>21</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testDetection(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>133</index><block>23</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>9</index><block>1</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>56</index><block>9</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>67</index><block>11</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>78</index><block>13</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>89</index><block>15</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>100</index><block>17</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>137</index><block>24</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="15"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="15"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>117</index><block>29</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>144</index><block>35</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchive(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>160</index><block>36</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchive(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="15"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>3</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><block>28</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadCpio(org.apache.commons.compress.IOMethodsTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>154</index><block>36</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchive(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>156</index><block>36</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchive(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><block>37</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>8</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>9</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>12</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>16</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>18</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchive(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>117</index><block>29</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>33</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchive(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>144</index><block>35</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchive(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="15"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::ensureOpen</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>14</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchive(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::skip</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>42</index><block>10</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::read</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>100</index><block>26</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchive(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::read</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>121</index><block>30</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::read</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>174</index><block>37</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadCpio(org.apache.commons.compress.IOMethodsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::read</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readAsciiLong</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>21</index><block>3</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>replaced long return with 0 for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::readAsciiLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readBinaryLong</mutatedMethod><methodDescription>(IZ)J</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>replaced long return with 0 for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::readBinaryLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readCString</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readCString</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>29</index><block>3</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>replaced return value with "" for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::readCString</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="19"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>1</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::count</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>29</index><block>5</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>9</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>153</index><block>35</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>157</index><block>37</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>6</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setInode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>47</index><block>10</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setMode</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><block>12</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setUID</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>63</index><block>14</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setGID</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>71</index><block>16</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setNumberOfLinks</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><block>18</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setTime</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>87</index><block>20</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setSize</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>95</index><block>22</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setDeviceMaj</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>103</index><block>24</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setDeviceMin</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>111</index><block>26</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setRemoteDeviceMaj</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>119</index><block>28</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setRemoteDeviceMin</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>134</index><block>31</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchive(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setChksum</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>146</index><block>33</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>182</index><block>48</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchive(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::skip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readNewEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>186</index><block>49</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::readNewEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldAsciiEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldAsciiEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>25</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldAsciiEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><block>27</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldAsciiEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setDevice</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldAsciiEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>4</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setInode</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldAsciiEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>8</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setMode</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldAsciiEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>10</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setUID</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldAsciiEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>12</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setGID</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldAsciiEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>66</index><block>14</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setNumberOfLinks</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldAsciiEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><block>16</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setRemoteDevice</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldAsciiEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><block>18</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setTime</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldAsciiEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>97</index><block>21</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldAsciiEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>109</index><block>23</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setName</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldAsciiEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>143</index><block>37</block><killingTest /><description>replaced return value with null for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::readOldAsciiEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldBinaryEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>7</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldBinaryEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>25</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldBinaryEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><block>27</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldBinaryEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setDevice</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldBinaryEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>4</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setInode</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldBinaryEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>8</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setMode</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldBinaryEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>10</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setUID</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldBinaryEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>12</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setGID</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldBinaryEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>66</index><block>14</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setNumberOfLinks</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldBinaryEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><block>16</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setRemoteDevice</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldBinaryEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><block>18</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setTime</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldBinaryEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>97</index><block>21</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldBinaryEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>109</index><block>23</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setName</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldBinaryEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>145</index><block>38</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::skip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>readOldBinaryEntry</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>149</index><block>39</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::readOldBinaryEntry</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="19"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchive(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><block>6</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>7</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>7</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>12</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>6</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>7</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>3</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::ensureOpen</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>88</index><block>13</block><killingTest /><description>replaced long return with 0 for org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream::skip</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>7</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>1</block><killingTest /><description>Replaced long modulus with multiplication</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>3</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>6</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>9</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>CpioArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::finish</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>3</block><killingTest /><description>removed call to java/io/OutputStream::close</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>closeArchiveEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>closeArchiveEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>closeArchiveEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>8</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>closeArchiveEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>22</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>closeArchiveEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>24</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>closeArchiveEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>3</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::ensureOpen</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="11"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>closeArchiveEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>69</index><block>20</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testCpioUnarchive(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::pad</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>createArchiveEntry</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.ArchiveOutputStreamTest.testCallSequenceCpio(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>createArchiveEntry</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.compress.archivers.ArchiveOutputStreamTest.testCallSequenceCpio(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::createArchiveEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>ensureOpen</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>finish</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>13</block><killingTest /><description>Replaced long modulus with multiplication</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>finish</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>14</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>finish</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>finish</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>finish</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>finish</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::ensureOpen</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>finish</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><block>8</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setName</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>finish</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>49</index><block>9</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setNumberOfLinks</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>finish</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><block>10</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeHeader</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>finish</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>11</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::closeArchiveEntry</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>finish</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>81</index><block>14</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::pad</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>pad</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>pad</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>pad</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>pad</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>2</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::count</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>9</block><killingTest /><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>4</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>11</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>22</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>3</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::ensureOpen</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>5</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::closeArchiveEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>9</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveEntry::setTime</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>103</index><block>30</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeHeader</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.compress.IOMethodsTest.testWriteCpio(org.apache.commons.compress.IOMethodsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>53</index><block>12</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>92</index><block>19</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>108</index><block>20</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>3</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>11</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>16</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><block>20</block><killingTest /><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>20</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>6</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>8</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>12</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><block>17</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><block>19</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::ensureOpen</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>68</index><block>15</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>114</index><block>21</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeAsciiLong</mutatedMethod><methodDescription>(JII)V</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>45</index><block>13</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeAsciiLong</mutatedMethod><methodDescription>(JII)V</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>63</index><block>16</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeAsciiLong</mutatedMethod><methodDescription>(JII)V</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>73</index><block>18</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeAsciiLong</mutatedMethod><methodDescription>(JII)V</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>15</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeAsciiLong</mutatedMethod><methodDescription>(JII)V</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>22</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeAsciiLong</mutatedMethod><methodDescription>(JII)V</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeAsciiLong</mutatedMethod><methodDescription>(JII)V</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeAsciiLong</mutatedMethod><methodDescription>(JII)V</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>13</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testCpioArchiveCreation(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeAsciiLong</mutatedMethod><methodDescription>(JII)V</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>16</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeAsciiLong</mutatedMethod><methodDescription>(JII)V</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>102</index><block>25</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeAsciiLong</mutatedMethod><methodDescription>(JII)V</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>108</index><block>26</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::count</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeBinaryLong</mutatedMethod><methodDescription>(JIZ)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeBinaryLong</mutatedMethod><methodDescription>(JIZ)V</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>2</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeCString</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>3</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeCString</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>7</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeCString</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>5</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeCString</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>6</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeCString</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>7</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::count</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeHeader</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>3</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeHeader</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>4</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::count</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeHeader</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>5</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeNewEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeHeader</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>8</block><killingTest /><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeHeader</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>9</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::count</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeHeader</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>10</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeNewEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeHeader</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>13</block><killingTest /><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeHeader</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><block>14</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::count</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeHeader</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>62</index><block>15</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeOldAsciiEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeHeader</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>76</index><block>17</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeBinaryLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeHeader</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><block>18</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeOldBinaryEntry</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>8</block><killingTest /><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>8</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>8</block><killingTest /><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>8</block><killingTest /><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>9</block><killingTest>org.apache.commons.compress.changes.ChangeSetTestCase.testDeleteDir(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="9"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>9</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="9"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>10</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>166</index><block>33</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><block>11</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>87</index><block>13</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>95</index><block>15</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>103</index><block>17</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>111</index><block>19</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>119</index><block>21</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>127</index><block>23</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>135</index><block>25</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>142</index><block>26</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>150</index><block>28</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>158</index><block>30</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>170</index><block>33</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>178</index><block>35</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>184</index><block>37</block><killingTest>org.apache.commons.compress.archivers.CpioTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeCString</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="12"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeNewEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>190</index><block>39</block><killingTest>org.apache.commons.compress.changes.ChangeSetTestCase.testAddDeleteToOneFileArchive(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::pad</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>8</block><killingTest /><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>8</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>8</block><killingTest /><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>8</block><killingTest /><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>9</block><killingTest /><description>Replaced long multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>9</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>10</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>142</index><block>27</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><block>11</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>86</index><block>12</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>14</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>102</index><block>16</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>110</index><block>18</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>118</index><block>20</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>126</index><block>22</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>134</index><block>24</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>146</index><block>27</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>154</index><block>29</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeAsciiLong</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldAsciiEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>160</index><block>31</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeCString</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>8</block><killingTest /><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>8</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>8</block><killingTest /><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>8</block><killingTest /><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>9</block><killingTest /><description>Replaced long multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>9</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>10</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>142</index><block>27</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><block>11</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeBinaryLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>86</index><block>12</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeBinaryLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>14</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeBinaryLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>102</index><block>16</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeBinaryLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>110</index><block>18</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeBinaryLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>118</index><block>20</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeBinaryLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>126</index><block>22</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeBinaryLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>134</index><block>24</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeBinaryLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>146</index><block>27</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeBinaryLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>154</index><block>29</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeBinaryLong</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>160</index><block>31</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest.testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::writeCString</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>CpioArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream</mutatedClass><mutatedMethod>writeOldBinaryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>166</index><block>33</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream::pad</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/io/OutputStream;IILjava/lang/String;)V</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>addPaxHeaderForBigNumber</mutatedMethod><methodDescription>(Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testBigNumberPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>addPaxHeaderForBigNumber</mutatedMethod><methodDescription>(Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>addPaxHeaderForBigNumber</mutatedMethod><methodDescription>(Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testBigNumberPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>addPaxHeaderForBigNumber</mutatedMethod><methodDescription>(Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testBigNumberPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>addPaxHeadersForBigNumbers</mutatedMethod><methodDescription>(Ljava/util/Map;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testBigNumberPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>addPaxHeadersForBigNumbers</mutatedMethod><methodDescription>(Ljava/util/Map;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testBigNumberPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::addPaxHeaderForBigNumber</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>addPaxHeadersForBigNumbers</mutatedMethod><methodDescription>(Ljava/util/Map;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>587</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>3</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::addPaxHeaderForBigNumber</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>addPaxHeadersForBigNumbers</mutatedMethod><methodDescription>(Ljava/util/Map;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::addPaxHeaderForBigNumber</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>addPaxHeadersForBigNumbers</mutatedMethod><methodDescription>(Ljava/util/Map;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><block>8</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::addPaxHeaderForBigNumber</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>addPaxHeadersForBigNumbers</mutatedMethod><methodDescription>(Ljava/util/Map;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>10</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::addPaxHeaderForBigNumber</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>addPaxHeadersForBigNumbers</mutatedMethod><methodDescription>(Ljava/util/Map;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>73</index><block>12</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::addPaxHeaderForBigNumber</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>addPaxHeadersForBigNumbers</mutatedMethod><methodDescription>(Ljava/util/Map;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><block>14</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::failForBigNumber</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="33"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::finish</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="33"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>3</block><killingTest /><description>removed call to java/io/OutputStream::close</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="26"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>closeArchiveEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>closeArchiveEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>8</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>closeArchiveEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><block>12</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>closeArchiveEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>11</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>closeArchiveEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>closeArchiveEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>closeArchiveEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>closeArchiveEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>closeArchiveEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>12</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>closeArchiveEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPaxHeadersWithLength99(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::writeRecord</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>createArchiveEntry</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.ArchiveOutputStreamTest.testCallSequenceTar(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>createArchiveEntry</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.compress.archivers.ArchiveOutputStreamTest.testCallSequenceTar(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::createArchiveEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>failForBigNumber</mutatedMethod><methodDescription>(Ljava/lang/String;JJ)V</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testMaxFileSizeError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::failForBigNumber</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>failForBigNumber</mutatedMethod><methodDescription>(Ljava/lang/String;JJLjava/lang/String;)V</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testMaxFileSizeError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>failForBigNumber</mutatedMethod><methodDescription>(Ljava/lang/String;JJLjava/lang/String;)V</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testMaxFileSizeError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>failForBigNumber</mutatedMethod><methodDescription>(Ljava/lang/String;JJLjava/lang/String;)V</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testMaxFileSizeError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>failForBigNumber</mutatedMethod><methodDescription>(Ljava/lang/String;JJLjava/lang/String;)V</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testMaxFileSizeError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="35"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>failForBigNumberWithPosixMessage</mutatedMethod><methodDescription>(Ljava/lang/String;JJ)V</methodDescription><lineNumber>630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::failForBigNumber</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>failForBigNumbers</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testMaxFileSizeError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>failForBigNumbers</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testMaxFileSizeError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::failForBigNumber</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="35"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>failForBigNumbers</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>3</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::failForBigNumberWithPosixMessage</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>failForBigNumbers</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::failForBigNumber</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="34"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>failForBigNumbers</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>8</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::failForBigNumber</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="34"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>failForBigNumbers</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>10</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::failForBigNumber</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="34"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>failForBigNumbers</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>12</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::failForBigNumber</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="34"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>failForBigNumbers</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>68</index><block>14</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::failForBigNumber</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>finish</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>finish</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="33"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>finish</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>6</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::writeEOFRecord</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="33"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>finish</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>7</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::writeEOFRecord</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>finish</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>8</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::padAsNeeded</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="33"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>finish</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>9</block><killingTest /><description>removed call to java/io/OutputStream::flush</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to java/io/OutputStream::flush</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>getBytesWritten</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testCount(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>replaced long return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::getBytesWritten</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>1</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::getCount</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>getRecordSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::getRecordSize</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="41"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>handleLongName</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z</methodDescription><lineNumber>669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="41"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>handleLongName</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z</methodDescription><lineNumber>668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>3</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>handleLongName</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z</methodDescription><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>9</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>handleLongName</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z</methodDescription><lineNumber>669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNameErrorMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>handleLongName</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNameErrorMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>handleLongName</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>7</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNameErrorMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>handleLongName</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z</methodDescription><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><block>18</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNameErrorMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>handleLongName</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z</methodDescription><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>9</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>handleLongName</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z</methodDescription><lineNumber>680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testLongNameMd5Hash(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::transferModTime</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>handleLongName</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><block>11</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::putArchiveEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>handleLongName</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><block>14</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::write</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>handleLongName</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>84</index><block>15</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::write</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>handleLongName</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z</methodDescription><lineNumber>684</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>88</index><block>16</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::closeArchiveEntry</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>handleLongName</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z</methodDescription><lineNumber>673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>37</index><block>6</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::handleLongName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="23"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>handleLongName</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;BLjava/lang/String;)Z</methodDescription><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>122</index><block>29</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiPathNamePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::handleLongName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>padAsNeeded</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>padAsNeeded</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>28</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>padAsNeeded</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>padAsNeeded</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>padAsNeeded</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>padAsNeeded</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::writeEOFRecord</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="40"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>146</index><block>36</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testMaxFileSizeError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNameErrorMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>7</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongLinkNameErrorMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>9</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongLinkNameErrorMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>11</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiLinkPathNamePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>14</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testMaxFileSizeError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><block>17</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testMaxFileSizeError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="21"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>19</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiPathNamePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>20</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiPathNamePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>22</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiPathNamePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="22"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>117</index><block>25</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiLinkPathNamePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><block>26</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiLinkPathNamePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><block>28</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiLinkPathNamePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><block>30</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><block>32</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiLinkPathNamePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>146</index><block>36</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testMaxFileSizeError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>164</index><block>38</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryStarMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>186</index><block>44</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryStarMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>80</index><block>15</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testBigNumberPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::addPaxHeadersForBigNumbers</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>92</index><block>18</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testMaxFileSizeError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::failForBigNumbers</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>153</index><block>37</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testBigNumberPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::writePaxHeaders</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>170</index><block>41</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryStarMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::writeEntryHeader</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>putArchiveEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>176</index><block>42</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryStarMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::writeRecord</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>shouldBeReplaced</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>shouldBeReplaced</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiDirectoryNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>shouldBeReplaced</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>shouldBeReplaced</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>17</index><block>5</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::shouldBeReplaced</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>stripTo7Bits</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPaxHeadersWithLength99(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>stripTo7Bits</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>51</index><block>11</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPaxHeadersWithLength99(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>stripTo7Bits</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiDirectoryNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>stripTo7Bits</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPaxHeadersWithLength99(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>stripTo7Bits</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiDirectoryNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>stripTo7Bits</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>57</index><block>13</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPaxHeadersWithLength99(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>replaced return value with "" for org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::stripTo7Bits</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="16"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>transferModTime</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="15"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>transferModTime</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="16"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>transferModTime</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>2</block><killingTest /><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>transferModTime</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="15"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>transferModTime</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="16"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>transferModTime</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</methodDescription><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testLongNameMd5Hash(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setModTime</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="32"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>54</index><block>15</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>64</index><block>16</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="32"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>163</index><block>23</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="32"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>170</index><block>24</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="32"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>3</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>16</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>17</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><block>20</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><block>20</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>20</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><block>22</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>154</index><block>22</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>187</index><block>26</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>211</index><block>28</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testRoundtripWith67CharFileNameGnu(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>217</index><block>28</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryStarMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>223</index><block>28</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryStarMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryStarMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryStarMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="32"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>16</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>163</index><block>23</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>170</index><block>24</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryStarMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>84</index><block>17</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>18</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>100</index><block>19</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::writeRecord</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>141</index><block>21</block><killingTest>org.apache.commons.compress.IOMethodsTest.testWriteTar(org.apache.commons.compress.IOMethodsTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>180</index><block>25</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPaxHeadersWithLength99(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>197</index><block>27</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::writeRecord</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="30"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writeEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.changes.ChangeSetTestCase.testDeleteFromAndAddToTar(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTest><description>removed call to java/util/Arrays::fill</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writeEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::writeRecord</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writePaxHeaders</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;)V</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>6</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writePaxHeaders</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;)V</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>22</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPaxHeadersWithLength99(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writePaxHeaders</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;)V</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>22</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writePaxHeaders</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;)V</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>22</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writePaxHeaders</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;)V</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPaxHeadersWithLength99(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writePaxHeaders</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><block>32</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writePaxHeaders</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;)V</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>10</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::transferModTime</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writePaxHeaders</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;)V</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>151</index><block>43</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPaxHeadersWithLength99(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to java/io/StringWriter::write</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writePaxHeaders</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;)V</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>168</index><block>47</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPaxHeadersWithLength99(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writePaxHeaders</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;)V</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>173</index><block>48</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPaxHeadersWithLength99(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::putArchiveEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writePaxHeaders</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;)V</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>178</index><block>49</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPaxHeadersWithLength99(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::write</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writePaxHeaders</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;Ljava/lang/String;Ljava/util/Map;)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>182</index><block>50</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPaxHeadersWithLength99(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveOutputStream::closeArchiveEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writeRecord</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>11</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writeRecord</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testMaxFileSizeError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writeRecord</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryStarMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writeRecord</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryStarMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writeRecord</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>0</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writeRecord</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>13</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writeRecord</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryStarMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>TarArchiveOutputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveOutputStream</mutatedClass><mutatedMethod>writeRecord</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>12</block><killingTest /><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>134</index><block>42</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>9</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>13</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>17</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>22</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>26</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>31</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>35</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>126</index><block>40</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>143</index><block>45</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>157</index><block>50</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongFileNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>14</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongLinkNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setLinkName</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>19</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setGroupId</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>78</index><block>23</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setGroupName</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>92</index><block>28</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setUserId</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>105</index><block>32</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setUserName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>119</index><block>37</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testBigNumberPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>136</index><block>42</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setModTime</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>150</index><block>47</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setDevMinor</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>164</index><block>52</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setDevMajor</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>2</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadTar(org.apache.commons.compress.IOMethodsTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>14</index><block>1</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::available</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>23</index><block>2</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::available</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>21</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::canReadEntryData</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>25</index><block>6</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::canReadEntryData</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="46"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long modulus with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>3</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getCurrentEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>649</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getCurrentEntry</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><block>11</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>65</index><block>13</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>12</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>7</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>11</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>12</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>14</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>85</index><block>15</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>93</index><block>17</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getLongNameData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/ArchiveEntry;</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.compress.ChainingTestCase.testTarGzip(org.apache.commons.compress.ChainingTestCase)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getNextEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>15</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>17</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongLinkNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><block>22</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>130</index><block>24</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>29</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><block>32</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::skipRecordPadding</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>115</index><block>20</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongLinkNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setLinkName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>143</index><block>27</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>153</index><block>30</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::paxHeaders</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>163</index><block>33</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::readGNUSparse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>175</index><block>35</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getNextTarEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>4</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::tryToConsumeSecondEOFRecord</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::consumeRemainderOfLastBlock</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>35</index><block>7</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getRecord</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecordSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getRecordSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isAtEOF</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::isAtEOF</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isAtEOF</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::isAtEOF</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>16</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::isEOFRecord</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>markSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::markSupported</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="8"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="7"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>8</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>10</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>716</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>17</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>29</index><block>6</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>57</index><block>13</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>77</index><block>18</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>688</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>81</index><block>19</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testDetectionNotArchive(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>26</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>48</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>12</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>22</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><block>27</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>140</index><block>27</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>141</index><block>27</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>9</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>13</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="13"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>148</index><block>28</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>127</index><block>25</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>158</index><block>31</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with Collections.emptyMap for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::parsePaxHeaders</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>paxHeaders</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::applyPaxHeadersToCurrentEntry</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><block>10</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>15</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>9</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><block>14</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>605</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>19</index><block>2</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::read</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>87</index><block>16</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::read</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readGNUSparse</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readGNUSparse</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readGNUSparse</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>32</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::readRecord</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="23"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="23"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="23"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>44</index><block>5</block><killingTest /><description>replaced long return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::skip</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="23"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>1</block><killingTest /><description>Replaced long modulus with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>14</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>2</block><killingTest /><description>removed call to java/io/InputStream::mark</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>11</block><killingTest /><description>removed call to java/io/InputStream::reset</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>67</index><block>10</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::pushedBackBytes</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>7</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testNotADumpArchiveButBigEnough(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>86</index><block>13</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/dump/TapeInputStream::resetBlockSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>96</index><block>14</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/dump/DumpArchiveInputStream::readCLRI</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>100</index><block>15</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/dump/DumpArchiveInputStream::readBITS</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/dump/TapeInputStream::close</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getBytesRead</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>1</block><killingTest /><description>replaced long return with 0 for org/apache/commons/compress/archivers/dump/DumpArchiveInputStream::getBytesRead</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>1</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/dump/DumpArchiveInputStream::getCount</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextDumpEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/dump/DumpArchiveInputStream::getNextDumpEntry</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>8</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>9</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><block>27</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><block>27</block><killingTest /><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>1</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>4</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>5</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>8</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>10</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>12</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>18</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>24</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>28</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>160</index><block>34</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>180</index><block>40</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>199</index><block>43</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>257</index><block>50</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>205</index><block>44</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/dump/DumpArchiveInputStream::readDirectoryEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>269</index><block>53</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/dump/DumpArchiveEntry::setName</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>281</index><block>58</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/dump/DumpArchiveEntry::setSimpleName</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>287</index><block>59</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/dump/DumpArchiveEntry::setOffset</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>21</index><block>3</block><killingTest /><description>replaced return value with null for org/apache/commons/compress/archivers/dump/DumpArchiveInputStream::getNextEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>291</index><block>60</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/dump/DumpArchiveInputStream::getNextEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getPath</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>5</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getPath</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>14</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getPath</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>19</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getPath</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>28</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getPath</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>6</block><killingTest /><description>removed call to java/util/Stack::clear</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getPath</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>81</index><block>23</block><killingTest /><description>replaced return value with "" for org/apache/commons/compress/archivers/dump/DumpArchiveInputStream::getPath</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getPath</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>115</index><block>34</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>replaced return value with "" for org/apache/commons/compress/archivers/dump/DumpArchiveInputStream::getPath</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>getSummary</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced return value with null for org/apache/commons/compress/archivers/dump/DumpArchiveInputStream::getSummary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCompressedArchiveDetection(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="10"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCompressedArchiveDetection(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCompressedArchiveDetection(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>6</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>19</index><block>4</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/dump/DumpArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>9</index><block>1</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/dump/DumpArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>19</index><block>4</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/dump/DumpArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>32</index><block>9</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/dump/DumpArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>45</index><block>7</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>58</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>68</index><block>10</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>89</index><block>13</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>129</index><block>16</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>135</index><block>17</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>7</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>8</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>10</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>11</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>13</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>15</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><block>15</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>118</index><block>15</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>124</index><block>15</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>173</index><block>25</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>226</index><block>35</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>4</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>7</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>10</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>13</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>129</index><block>16</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>135</index><block>17</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>146</index><block>20</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>176</index><block>26</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>195</index><block>28</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>99</index><block>14</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>210</index><block>32</block><killingTest /><description>removed call to java/util/Arrays::fill</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>22</index><block>3</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/dump/DumpArchiveInputStream::read</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>231</index><block>35</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/dump/DumpArchiveInputStream::read</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readBITS</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>11</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readBITS</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readBITS</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>7</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readBITS</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>12</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readCLRI</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>11</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readCLRI</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readCLRI</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>7</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readCLRI</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>12</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>68</index><block>19</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>105</index><block>26</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>112</index><block>27</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>19</block><killingTest /><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>26</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><block>27</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><block>29</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><block>30</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><block>30</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><block>30</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>278</index><block>69</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>311</index><block>76</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>5</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>11</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>19</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>22</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>26</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>27</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>160</index><block>32</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>164</index><block>34</block><killingTest>org.apache.commons.compress.archivers.DumpTestCase.testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>214</index><block>48</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>291</index><block>72</block><killingTest>org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest.testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>221</index><block>50</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/dump/DumpArchiveEntry::setName</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DumpArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.dump.DumpArchiveInputStream</mutatedClass><mutatedMethod>readDirectoryEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>236</index><block>55</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/dump/DumpArchiveEntry::setSimpleName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>266</index><block>60</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testCOMPRESS117(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>4</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>11</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>12</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>18</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><block>19</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>25</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>122</index><block>29</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><block>30</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>151</index><block>36</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>156</index><block>37</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>180</index><block>43</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>214</index><block>50</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>251</index><block>57</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>266</index><block>60</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testCOMPRESS117(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>286</index><block>65</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testCOMPRESS209(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>7</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>removed call to java/io/InputStream::mark</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>9</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>removed call to java/io/InputStream::reset</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="10"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>198</index><block>46</block><killingTest /><description>removed call to java/io/InputStream::mark</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>208</index><block>48</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>removed call to java/io/InputStream::reset</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="8"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>235</index><block>53</block><killingTest /><description>removed call to java/io/InputStream::mark</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>245</index><block>55</block><killingTest>org.apache.commons.compress.changes.ChangeSetTestCase.testDeleteFromTar(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTest><description>removed call to java/io/InputStream::reset</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>307</index><block>67</block><killingTest /><description>removed call to org/apache/commons/compress/utils/IOUtils::closeQuietly</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>65</index><block>14</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>73</index><block>16</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.skipsPK00Prefix(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>94</index><block>21</block><killingTest /><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>102</index><block>23</block><killingTest /><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>116</index><block>27</block><killingTest>org.apache.commons.compress.changes.ChangeSetTestCase.testDeleteFromAr(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>137</index><block>32</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>145</index><block>34</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>166</index><block>39</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>174</index><block>41</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>224</index><block>52</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>261</index><block>59</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>303</index><block>68</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testCOMPRESS117(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantRead7zFromStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantRead7zFromStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>7</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantRead7zFromStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>11</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantRead7zFromStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>12</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>18</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantRead7zFromStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>19</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>25</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantRead7zFromStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><block>26</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>122</index><block>32</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantRead7zFromStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><block>33</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>39</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantRead7zFromStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>154</index><block>40</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>176</index><block>46</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantRead7zFromStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>181</index><block>47</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>203</index><block>53</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantRead7zFromStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>35</index><block>9</block><killingTest>org.apache.commons.compress.changes.ChangeSetTestCase.testDeleteFromAr(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>55</index><block>14</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>62</index><block>16</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>82</index><block>21</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>89</index><block>23</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>109</index><block>28</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>116</index><block>30</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>136</index><block>35</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>143</index><block>37</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>163</index><block>42</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>170</index><block>44</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>190</index><block>49</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>197</index><block>51</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveInputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantWrite7zToStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantWrite7zToStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>7</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantWrite7zToStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>11</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantWrite7zToStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>13</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingOutputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>17</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantWrite7zToStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>18</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingOutputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><block>24</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantWrite7zToStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><block>25</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingOutputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>123</index><block>31</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantWrite7zToStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><block>32</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingOutputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>150</index><block>38</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.cantWrite7zToStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>14</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingOutputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream::setEncoding</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>35</index><block>9</block><killingTest>org.apache.commons.compress.archivers.ArchiveOutputStreamTest.testCallSequenceAr(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveOutputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>63</index><block>15</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingOutputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveOutputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>83</index><block>20</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingOutputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveOutputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>90</index><block>22</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingOutputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveOutputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>110</index><block>27</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingOutputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveOutputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>117</index><block>29</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingOutputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveOutputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>137</index><block>34</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingOutputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveOutputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>createArchiveOutputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>144</index><block>36</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingOutputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/ArchiveStreamFactory::createArchiveOutputStream</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>getEntryEncoding</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingCtor(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced return value with "" for org/apache/commons/compress/archivers/ArchiveStreamFactory::getEntryEncoding</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveStreamFactory.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveStreamFactory</mutatedClass><mutatedMethod>setEntryEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingDeprecated(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
</mutations>