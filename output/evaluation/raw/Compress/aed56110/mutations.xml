<mutations>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>173</index><block>27</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>2</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>786</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>6</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>8</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>10</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>788</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>14</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>790</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><block>15</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>790</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>15</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>790</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>15</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><block>17</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><block>19</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><block>20</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><block>20</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>153</index><block>23</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>155</index><block>23</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>786</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>786</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>788</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>788</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>14</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>117</index><block>17</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><block>19</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>144</index><block>21</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>157</index><block>23</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::pushback</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>166</index><block>25</block><killingTest /><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>805</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>170</index><block>26</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readDataDescriptor</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>809</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>178</index><block>28</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::bufferContainsSignature</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>809</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>178</index><block>28</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::bufferContainsSignature</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>822</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>822</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>822</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>5</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>6</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>828</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>7</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>2</block><killingTest /><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>5</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>54</index><block>8</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::cacheBytesRead</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>28</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.EncryptedArchiveTest.testReadPasswordEncryptedEntryViaStream(org.apache.commons.compress.archivers.zip.EncryptedArchiveTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::canReadEntryData</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>32</index><block>8</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::canReadEntryData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.skipsPK00Prefix(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>30</index><block>5</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.skipsPK00Prefix(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::checksig</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>22</index><block>3</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::checksig</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="41"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="41"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest /><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="41"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>2</block><killingTest /><description>removed call to java/util/zip/Inflater::end</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><block>21</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>21</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>24</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>10</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>587</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>16</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>21</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="9"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><block>25</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>27</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>11</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::drainCurrentEntryData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>93</index><block>24</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::pushback</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>106</index><block>28</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readDataDescriptor</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="9"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>111</index><block>29</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to java/util/zip/Inflater::reset</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="10"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>41</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><block>19</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>4</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="10"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>63</index><block>18</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>5</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>8</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>660</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>11</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to java/util/zip/Inflater::setInput</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>55</index><block>12</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::fill</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>880</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>5</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>884</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>885</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>14</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="16"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>20</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>104</index><block>21</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="23"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>3</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>5</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="23"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>649</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>35</index><block>6</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>replaced long return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::getBytesInflated</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/ArchiveEntry;</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testRawNameReadFromStream(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::getNextEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>115</index><block>23</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>167</index><block>34</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>180</index><block>37</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>198</index><block>41</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>224</index><block>46</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>236</index><block>47</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>248</index><block>48</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>252</index><block>49</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadZip(org.apache.commons.compress.IOMethodsTest)</killingTest><description>Changed increment from 12 to -12</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>262</index><block>51</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>272</index><block>52</block><killingTest /><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><block>24</block><killingTest /><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>24</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>421</index><block>93</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="18"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>6</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>14</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>16</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>19</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>142</index><block>27</block><killingTest>org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testRead7ZipArchiveForStream(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>211</index><block>42</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>313</index><block>59</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>316</index><block>60</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>339</index><block>66</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>348</index><block>70</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="15"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>377</index><block>80</block><killingTest>org.apache.commons.compress.archivers.zip.ExplodeSupportTest.testZipStreamWithImplodeCompression4K2Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>4</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::closeEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFirstLocalFileHeader</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>46</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>83</index><block>17</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::skipRemainderOfArchive</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>126</index><block>24</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setPlatform</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>164</index><block>33</block><killingTest>org.apache.commons.compress.archivers.zip.EncryptedArchiveTest.testReadPasswordEncryptedEntryViaStream(org.apache.commons.compress.archivers.zip.EncryptedArchiveTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setGeneralPurposeBit</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>177</index><block>36</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setMethod</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>195</index><block>40</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setTime</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="16"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>221</index><block>45</block><killingTest>org.apache.commons.compress.archivers.zip.ExplodeSupportTest.testZipStreamWithImplodeCompression4K2Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCrc</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>282</index><block>52</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>292</index><block>55</block><killingTest>org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testRawNameReadFromStream(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>302</index><block>56</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>309</index><block>58</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setExtra</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>324</index><block>62</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipUtil::setNameAndCommentFromExtraFields</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>330</index><block>63</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::processZip64Extra</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>428</index><block>94</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::getNextZipEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>isFirstByteOfEocdSig</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>isFirstByteOfEocdSig</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>13</index><block>3</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::isFirstByteOfEocdSig</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="38"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.skipsPK00Prefix(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>5</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>7</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>10</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>10</index><block>1</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>43</index><block>13</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="19"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><block>16</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCompressedSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>62</index><block>20</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>71</index><block>24</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCompressedSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><block>27</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>pushback</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>834</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to java/io/PushbackInputStream::unread</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>pushback</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>835</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::pushedBackBytes</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="35"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="35"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>6</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="34"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>154</index><block>46</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="35"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>8</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>5</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>6</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>15</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>21</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><block>26</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>32</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>122</index><block>36</block><killingTest>org.apache.commons.compress.archivers.zip.ExplodeSupportTest.testZipStreamWithImplodeCompression4K2Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>154</index><block>46</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>49</index><block>12</block><killingTest>org.apache.commons.compress.archivers.zip.EncryptedArchiveTest.testReadPasswordEncryptedEntryViaStream(org.apache.commons.compress.archivers.zip.EncryptedArchiveTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipUtil::checkRequestedFeatures</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="34"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>163</index><block>48</block><killingTest /><description>removed call to java/util/zip/CRC32::update</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>21</index><block>4</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::read</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>167</index><block>49</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::read</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>3</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>15</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>4</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>9</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCrc</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>48</index><block>10</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>75</index><block>16</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::pushback</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>698</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>84</index><block>19</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCompressedSize</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>22</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>104</index><block>26</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCompressedSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>114</index><block>29</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadZip(org.apache.commons.compress.IOMethodsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>6</block><killingTest>org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest.testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest.testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>22</index><block>4</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readDeflated</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>51</index><block>12</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadZip(org.apache.commons.compress.IOMethodsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readDeflated</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>8</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>49</index><block>9</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><block>10</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest.testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>17</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>19</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>44</index><block>10</block><killingTest>org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest.testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFromInflater</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>82</index><block>20</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadZip(org.apache.commons.compress.IOMethodsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFromInflater</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>667</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>1</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readOneByte</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>940</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readOneByte</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>941</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>2</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readOneByte</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>20</index><block>3</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readOneByte</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><block>13</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>125</index><block>29</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>24</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><block>29</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>132</index><block>31</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>154</index><block>34</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>17</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><block>29</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>3</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStoredEntry</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>91</index><block>21</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>24</index><block>5</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStored</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>43</index><block>10</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStored</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>77</index><block>18</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStored</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>160</index><block>35</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStored</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>747</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>61</index><block>12</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>8</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>12</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>754</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>13</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>747</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>759</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>916</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>918</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>920</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>3</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>10</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>916</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>918</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>920</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>921</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>924</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><block>9</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>3</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="7"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>9</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>2</block><killingTest>org.apache.commons.compress.changes.ChangeSetTestCase.testDeleteFromAndAddToJar(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>55</index><block>8</block><killingTest /><description>replaced long return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::skip</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>69</index><block>10</block><killingTest /><description>replaced long return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::skip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::realSkip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>864</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::findEocdRecord</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::realSkip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>868</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>5</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::realSkip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>716</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>7</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadZip(org.apache.commons.compress.IOMethodsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="34"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>29</index><block>10</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::supportsDataDescriptorFor</description></mutation>
</mutations>