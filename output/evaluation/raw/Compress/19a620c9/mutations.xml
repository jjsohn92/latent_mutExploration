<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>142</index><block>42</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>9</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>13</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>17</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>22</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>26</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>538</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>31</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><block>35</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><block>40</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>152</index><block>45</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>167</index><block>50</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>182</index><block>55</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>196</index><block>59</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>210</index><block>63</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>214</index><block>65</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongFileNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><block>14</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongLinkNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setLinkName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>68</index><block>19</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setGroupId</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><block>23</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setGroupName</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>97</index><block>28</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setUserId</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>111</index><block>32</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setUserName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>126</index><block>37</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testBigNumberPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>144</index><block>42</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setModTime</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>159</index><block>47</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setDevMinor</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>174</index><block>52</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setDevMajor</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>188</index><block>56</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testPaxGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::fillGNUSparse0xData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>202</index><block>60</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testPaxGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::fillGNUSparse1xData</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>220</index><block>66</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::fillStarSparseData</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>5</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>24</index><block>4</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::available</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>34</index><block>5</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::available</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>23</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::canReadEntryData</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>28</index><block>6</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::canReadEntryData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="40"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long modulus with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>3</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getCurrentEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getCurrentEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>3</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><block>11</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>69</index><block>13</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>12</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>7</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>11</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>12</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>14</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>90</index><block>15</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>99</index><block>17</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getLongNameData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/ArchiveEntry;</methodDescription><lineNumber>600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.compress.archivers.TarTestCase.testTarUnarchive(org.apache.commons.compress.archivers.TarTestCase)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getNextEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>14</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><block>16</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><block>21</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><block>23</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>28</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>160</index><block>31</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="33"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>172</index><block>35</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="48"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>185</index><block>38</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::skipRecordPadding</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>112</index><block>19</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setLinkName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>142</index><block>26</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setName</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>153</index><block>29</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::readGlobalPaxHeaders</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>164</index><block>32</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::paxHeaders</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>178</index><block>36</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::applyPaxHeadersToCurrentEntry</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>189</index><block>39</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::readOldGNUSparse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>202</index><block>41</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getNextTarEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>4</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::tryToConsumeSecondEOFRecord</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::consumeRemainderOfLastBlock</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>36</index><block>7</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getRecord</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecordSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getRecordSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isAtEOF</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::isAtEOF</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isAtEOF</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::isAtEOF</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="18"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isDirectory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isDirectory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isDirectory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>17</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::isDirectory</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>19</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::isEOFRecord</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>markSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::markSupported</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="11"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="9"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="9"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>8</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>10</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>17</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>30</index><block>6</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>60</index><block>13</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>81</index><block>18</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>86</index><block>19</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testDetectionNotArchive(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>30</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.paxHeaderEntryWithEmptyValueRemovesKey(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>62</index><block>12</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.paxHeaderEntryWithEmptyValueRemovesKey(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>14</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.paxHeaderEntryWithEmptyValueRemovesKey(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><block>27</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.paxHeaderEntryWithEmptyValueRemovesKey(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>163</index><block>32</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.paxHeaderEntryWithEmptyValueRemovesKey(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>170</index><block>32</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.paxHeaderEntryWithEmptyValueRemovesKey(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><block>32</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.paxHeaderEntryWithEmptyValueRemovesKey(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readPaxHeaderWithEmbeddedNewline(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>7</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.paxHeaderEntryWithEmptyValueRemovesKey(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>11</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readPaxHeaderWithEmbeddedNewline(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>12</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.paxHeaderEntryWithEmptyValueRemovesKey(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><block>14</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.paxHeaderEntryWithEmptyValueRemovesKey(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>18</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.paxHeaderEntryWithEmptyValueRemovesKey(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>179</index><block>33</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.paxHeaderEntryWithEmptyValueRemovesKey(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>156</index><block>30</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readPaxHeaderWithEmbeddedNewline(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>191</index><block>36</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readPaxHeaderWithEmbeddedNewline(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with Collections.emptyMap for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::parsePaxHeaders</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>paxHeaders</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::applyPaxHeadersToCurrentEntry</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><block>12</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>17</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>650</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>11</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>12</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><block>16</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>23</index><block>4</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::read</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>96</index><block>18</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::read</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readOldGNUSparse</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readOldGNUSparse</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readOldGNUSparse</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>33</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::readRecord</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="17"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>7</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="17"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="17"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>49</index><block>7</block><killingTest /><description>replaced long return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::skip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="16"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>2</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="24"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testPaxGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>Replaced long modulus with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>1</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="7"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>8</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>14</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>2</block><killingTest /><description>removed call to java/io/InputStream::mark</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>10</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::pushedBackBytes</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><block>11</block><killingTest /><description>removed call to java/io/InputStream::reset</description></mutation>
</mutations>