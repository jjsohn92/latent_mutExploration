<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>134</index><block>42</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>9</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>13</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>17</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>22</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>26</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>31</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>35</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>126</index><block>40</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>143</index><block>45</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>157</index><block>50</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>14</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongLinkNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setLinkName</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>19</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setGroupId</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>78</index><block>23</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setGroupName</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>92</index><block>28</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setUserId</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>105</index><block>32</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setUserName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>119</index><block>37</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testBigNumberPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>136</index><block>42</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setModTime</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>150</index><block>47</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setDevMinor</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>applyPaxHeadersToCurrentEntry</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>164</index><block>52</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setDevMajor</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="19"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="19"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="11"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>2</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadTar(org.apache.commons.compress.IOMethodsTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>14</index><block>1</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::available</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>23</index><block>2</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::available</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>21</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::canReadEntryData</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>25</index><block>6</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::canReadEntryData</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="44"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long modulus with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>consumeRemainderOfLastBlock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>3</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getCurrentEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getCurrentEntry</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><block>11</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>65</index><block>13</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>12</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>7</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>11</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>12</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>14</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>85</index><block>15</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getLongNameData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>93</index><block>17</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getLongNameData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/ArchiveEntry;</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.compress.ChainingTestCase.testTarGzip(org.apache.commons.compress.ChainingTestCase)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getNextEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>15</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>17</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongLinkNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><block>22</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>130</index><block>24</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>29</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="41"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><block>32</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::skipRecordPadding</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>115</index><block>20</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongLinkNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setLinkName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>143</index><block>27</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>153</index><block>30</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::paxHeaders</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>163</index><block>33</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::readGNUSparse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>175</index><block>35</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getNextTarEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>4</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::tryToConsumeSecondEOFRecord</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::consumeRemainderOfLastBlock</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>35</index><block>7</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getRecord</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecordSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getRecordSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isAtEOF</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::isAtEOF</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isAtEOF</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::isAtEOF</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>16</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::isEOFRecord</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="7"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>655</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="7"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>655</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="6"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="6"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>667</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>684</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>17</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>29</index><block>6</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>57</index><block>13</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>77</index><block>18</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>81</index><block>19</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testDetectionNotArchive(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>26</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>48</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>12</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>13</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>16</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>22</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><block>22</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><block>27</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>142</index><block>27</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><block>27</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>9</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>13</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="13"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>150</index><block>28</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>129</index><block>25</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>parsePaxHeaders</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/Map;</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>160</index><block>31</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with Collections.emptyMap for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::parsePaxHeaders</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>paxHeaders</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::applyPaxHeadersToCurrentEntry</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><block>10</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>15</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>9</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="19"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><block>14</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>19</index><block>2</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::read</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>87</index><block>16</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::read</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readGNUSparse</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readGNUSparse</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readGNUSparse</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>32</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::readRecord</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>3</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>38</index><block>3</block><killingTest /><description>replaced long return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::skip</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>1</block><killingTest /><description>Replaced long modulus with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>14</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>2</block><killingTest /><description>removed call to java/io/InputStream::mark</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>11</block><killingTest /><description>removed call to java/io/InputStream::reset</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>tryToConsumeSecondEOFRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>67</index><block>10</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::pushedBackBytes</description></mutation>
</mutations>