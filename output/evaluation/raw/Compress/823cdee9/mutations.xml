<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="29"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><block>3</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testMaxFileSize(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)V</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>6</block><killingTest>org.apache.commons.compress.archivers.TarTestCase.testDirectoryEntryFromFile(org.apache.commons.compress.archivers.TarTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)V</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>150</index><block>18</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testFileSystemRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)V</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testFileSystemRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)V</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;BZ)V</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testLinkFlagConstructor(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;Z)V</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>11</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="39"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;Z)V</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;Z)V</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::parseTarHeader</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::parseTarHeader</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>22</index><block>6</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveEntry::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>14</index><block>4</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>22</index><block>6</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>8</index><block>3</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveEntry::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>8</index><block>3</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="37"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="14"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNameTruncateMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::evaluateType</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>33</index><block>7</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::evaluateType</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="33"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>38</index><block>8</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::evaluateType</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>fillGNUSparse0xData</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>1234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testPaxGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>fillStarSparseData</mutatedMethod><methodDescription>(Ljava/util/Map;)V</methodDescription><lineNumber>1248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="37"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getDevMajor</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getDevMajor</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="37"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getDevMinor</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getDevMinor</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getDirectoryEntries</mutatedMethod><methodDescription>()[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>8</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getDirectoryEntries</mutatedMethod><methodDescription>()[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getDirectoryEntries</mutatedMethod><methodDescription>()[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getDirectoryEntries</mutatedMethod><methodDescription>()[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>954</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getDirectoryEntries</mutatedMethod><methodDescription>()[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getDirectoryEntries</mutatedMethod><methodDescription>()[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>950</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>14</index><block>3</block><killingTest /><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getDirectoryEntries</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getDirectoryEntries</mutatedMethod><methodDescription>()[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>6</block><killingTest /><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getDirectoryEntries</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getDirectoryEntries</mutatedMethod><methodDescription>()[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>71</index><block>12</block><killingTest /><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getDirectoryEntries</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>()Ljava/io/File;</methodDescription><lineNumber>657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getFile</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getGroupId</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>0</block><killingTest /><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getGroupId</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>8</index><block>0</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getGroupId</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getGroupName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced return value with "" for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getGroupName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getLastModifiedDate</mutatedMethod><methodDescription>()Ljava/util/Date;</methodDescription><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getLastModifiedDate</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getLinkName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongLinkNameErrorMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>replaced return value with "" for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getLinkName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="23"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getLongGroupId</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced long return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getLongGroupId</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="37"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getLongUserId</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced long return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getLongUserId</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getModTime</mutatedMethod><methodDescription>()Ljava/util/Date;</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getModTime</mutatedMethod><methodDescription>()Ljava/util/Date;</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getModTime</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="37"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getMode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>666</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getMode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testFileSystemRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>replaced return value with "" for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getName</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getRealSize</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced long return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getRealSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>replaced long return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getUserId</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>0</block><killingTest /><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getUserId</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>8</index><block>0</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getUserId</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getUserName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced return value with "" for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getUserName</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>2</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::hashCode</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isBlockDevice</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isBlockDevice</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>14</index><block>3</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isBlockDevice</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isCharacterDevice</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>909</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isCharacterDevice</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>909</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>14</index><block>3</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isCharacterDevice</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isCheckSumOK</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isCheckSumOK</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isCheckSumOK</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.aiffFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isCheckSumOK</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isDescendent</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>8</index><block>3</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isDescendent</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isDescendent</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>8</index><block>3</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isDescendent</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isDirectory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>851</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isDirectory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="17"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isDirectory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>6</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="17"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isDirectory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>8</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isDirectory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>11</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="7"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isDirectory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>11</index><block>2</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isDirectory</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isDirectory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>22</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNameTruncateMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isDirectory</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isDirectory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>860</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>40</index><block>12</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isDirectory</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isDirectory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isDirectory</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isDirectory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>45</index><block>13</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isDirectory</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isExtended</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isExtended</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isExtended</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isExtended</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isFIFO</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>929</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isFIFO</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>929</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>14</index><block>3</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isFIFO</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isFile</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>873</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isFile</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>876</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isFile</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>876</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isFile</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>879</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isFile</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>11</index><block>2</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isFile</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isFile</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>26</index><block>5</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isFile</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isFile</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>11</index><block>2</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isFile</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isFile</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>879</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>42</index><block>11</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isFile</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isGNULongLinkEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isGNULongNameEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testPaxGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>18</index><block>6</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isGNUSparse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGlobalPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGlobalPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isGlobalPaxHeader</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isLink</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>899</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiLinkPathNamePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isLink</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>899</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>14</index><block>3</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isLink</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isOldGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>778</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="15"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isOldGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>778</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isOldGNUSparse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testPaxGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isPaxGNUSparse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isPaxGNUSparse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isPaxHeader</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>939</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>939</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>939</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>18</index><block>6</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isSparse</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isStarSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>799</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isStarSparse</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isStarSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>799</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isStarSparse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isSymbolicLink</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>889</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isSymbolicLink</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>889</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isSymbolicLink</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>6</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>43</index><block>10</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>11</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>12</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>54</index><block>13</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>21</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="19"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="19"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>4</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>11</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="19"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>18</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>20</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>104</index><block>25</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testLinkFlagConstructor(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>27</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testMaxFileSize(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>normalizeFileName</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>1208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>120</index><block>30</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testLinkFlagConstructor(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>replaced return value with "" for org/apache/commons/compress/archivers/tar/TarArchiveEntry::normalizeFileName</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>1062</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::parseTarHeader</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>1065</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>2</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::parseTarHeader</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>1085</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::parseTarHeader</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>309</index><block>36</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>378</index><block>57</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1095</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>29</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 100 to -100</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1097</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>41</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 8 to -8</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>54</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 8 to -8</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>67</index><block>7</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 8 to -8</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>78</index><block>8</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 12 to -12</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>89</index><block>9</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 12 to -12</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>98</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 8 to -8</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>104</index><block>10</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>131</index><block>14</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 100 to -100</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>142</index><block>15</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 6 to -6</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>153</index><block>16</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>178</index><block>20</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 32 to -32</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>203</index><block>24</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 32 to -32</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>215</index><block>25</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 8 to -8</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>227</index><block>26</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 8 to -8</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>241</index><block>28</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>Changed increment from 12 to -12</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="15"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>244</index><block>28</block><killingTest /><description>Changed increment from 12 to -12</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>247</index><block>28</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>Changed increment from 12 to -12</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>250</index><block>28</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>253</index><block>28</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>256</index><block>28</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>Changed increment from 96 to -96</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>266</index><block>29</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>277</index><block>30</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>Changed increment from 12 to -12</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1093</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.TarTestCase.testCOMPRESS114(org.apache.commons.compress.archivers.TarTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="15"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>111</index><block>10</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="15"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>158</index><block>16</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="15"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>183</index><block>20</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>285</index><block>31</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>309</index><block>36</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="36"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>330</index><block>43</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>354</index><block>48</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>359</index><block>50</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>378</index><block>57</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>setDevMajor</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>setDevMajor</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>setDevMinor</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>setDevMinor</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>setGroupId</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setGroupId</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>setIds</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setUserId</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>setIds</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setGroupId</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>setModTime</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>setModTime</mutatedMethod><methodDescription>(Ljava/util/Date;)V</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testPaxHeadersWithLength101(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>setNames</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setUserName</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>setNames</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setGroupName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>setSize</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testMaxFileSize(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>setSize</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testMaxFileSize(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>setUserId</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::setUserId</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>975</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testLinkFlagConstructor(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::writeEntryHeader</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>978</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>2</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::writeEntryHeader</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>83</index><block>7</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testLinkFlagConstructor(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>182</index><block>17</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testLinkFlagConstructor(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1015</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>88</index><block>8</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testLinkFlagConstructor(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>100</index><block>9</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testLinkFlagConstructor(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1033</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>187</index><block>18</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testLinkFlagConstructor(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>7</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testLinkFlagConstructor(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>1032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>182</index><block>17</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="40"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeaderField</mutatedMethod><methodDescription>(J[BIIZ)I</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="35"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeaderField</mutatedMethod><methodDescription>(J[BIIZ)I</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testBigNumberPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="35"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeaderField</mutatedMethod><methodDescription>(J[BIIZ)I</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testBigNumberPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeaderField</mutatedMethod><methodDescription>(J[BIIZ)I</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeaderField</mutatedMethod><methodDescription>(J[BIIZ)I</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="17"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeaderField</mutatedMethod><methodDescription>(J[BIIZ)I</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testBigNumberStarMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeaderField</mutatedMethod><methodDescription>(J[BIIZ)I</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeaderField</mutatedMethod><methodDescription>(J[BIIZ)I</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeaderField</mutatedMethod><methodDescription>(J[BIIZ)I</methodDescription><lineNumber>1048</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>27</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::writeEntryHeaderField</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>writeEntryHeaderField</mutatedMethod><methodDescription>(J[BIIZ)I</methodDescription><lineNumber>1050</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>36</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testLinkFlagConstructor(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::writeEntryHeaderField</description></mutation>
</mutations>