<mutations>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="31"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>4</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="29"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="18"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>7</block><killingTest>org.apache.commons.compress.compressors.ZTestCase.testZUnarchiveViaFactory(org.apache.commons.compress.compressors.ZTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>106</index><block>13</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>132</index><block>15</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>10</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.testReading24BitsInLittleEndian(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>10</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.testReading24BitsInLittleEndian(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>11</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.testReading24BitsInBigEndian(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>11</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.testReading24BitsInBigEndian(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>12</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.testReading24BitsInBigEndian(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><block>14</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>118</index><block>14</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>150</index><block>18</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.littleEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><block>18</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.littleEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>161</index><block>18</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.littleEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>167</index><block>18</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.littleEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><block>18</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.littleEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>183</index><block>19</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>189</index><block>19</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>193</index><block>19</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>201</index><block>19</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>209</index><block>19</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>235</index><block>23</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.testReading24BitsInLittleEndian(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>243</index><block>23</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.littleEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>254</index><block>24</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.testReading24BitsInBigEndian(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>255</index><block>24</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.testReading30BitsInBigEndian(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>259</index><block>24</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.testReading24BitsInBigEndian(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>268</index><block>25</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>279</index><block>26</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.shouldNotAllowReadingOfANegativeAmountOfBits(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.shouldNotAllowReadingOfMoreThan63BitsAtATime(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>4</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.testReading24BitsInBigEndian(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>5</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.testReading24BitsInBigEndian(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>7</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.testReading24BitsInBigEndian(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>9</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.testReading24BitsInBigEndian(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><block>13</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.testReading30BitsInBigEndian(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>132</index><block>15</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>143</index><block>17</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>221</index><block>21</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.testReading30BitsInBigEndian(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>227</index><block>22</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.testReading30BitsInBigEndian(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>43</index><block>8</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>replaced long return with 0 for org/apache/commons/compress/utils/BitInputStream::readBits</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>136</index><block>16</block><killingTest /><description>replaced long return with 0 for org/apache/commons/compress/utils/BitInputStream::readBits</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>295</index><block>27</block><killingTest>org.apache.commons.compress.utils.BitInputStreamTest.testReading24BitsInBigEndian(org.apache.commons.compress.utils.BitInputStreamTest)</killingTest><description>replaced long return with 0 for org/apache/commons/compress/utils/BitInputStream::readBits</description></mutation>
</mutations>