<mutations>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="34"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/io/Closeable;)V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="34"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/io/Closeable;)V</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTest /><description>removed call to java/io/Closeable::close</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="31"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)J</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.compress.changes.ChangeSetTestCase.testDeleteFromTar(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTest><description>replaced long return with 0 for org/apache/commons/compress/utils/IOUtils::copy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="31"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>4</block><killingTest>org.apache.commons.compress.changes.ChangeSetTestCase.testDeleteFromTar(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>2</block><killingTest>org.apache.commons.compress.archivers.TarTestCase.testTarArchiveCreation(org.apache.commons.compress.archivers.TarTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>3</block><killingTest>org.apache.commons.compress.archivers.TarTestCase.testTarArchiveCreation(org.apache.commons.compress.archivers.TarTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="31"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>41</index><block>5</block><killingTest>org.apache.commons.compress.changes.ChangeSetTestCase.testDeleteFromTar(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTest><description>replaced long return with 0 for org/apache/commons/compress/utils/IOUtils::copy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/utils/IOUtils::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="26"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testSkipEntryWithUnsupportedCompressionMethod(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(org.apache.commons.compress.utils.IOUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="149"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>2</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="16"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>7</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testDetectionNotArchive(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="16"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>7</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testDetectionNotArchive(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>10</block><killingTest>org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(org.apache.commons.compress.utils.IOUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(org.apache.commons.compress.utils.IOUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(org.apache.commons.compress.utils.IOUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(org.apache.commons.compress.utils.IOUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>6</block><killingTest>org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(org.apache.commons.compress.utils.IOUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>8</block><killingTest>org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(org.apache.commons.compress.utils.IOUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>61</index><block>11</block><killingTest>org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(org.apache.commons.compress.utils.IOUtilsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/utils/IOUtils::readFully</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="36"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="36"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>6</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="10"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>8</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="10"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>71</index><block>11</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>5</block><killingTest>org.apache.commons.compress.utils.IOUtilsTest.skipUsingSkip(org.apache.commons.compress.utils.IOUtilsTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>13</block><killingTest>org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(org.apache.commons.compress.utils.IOUtilsTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="36"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>14</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="36"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>3</block><killingTest>org.apache.commons.compress.utils.IOUtilsTest.skipUsingSkip(org.apache.commons.compress.utils.IOUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>6</block><killingTest>org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(org.apache.commons.compress.utils.IOUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>8</block><killingTest>org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(org.apache.commons.compress.utils.IOUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>11</block><killingTest>org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(org.apache.commons.compress.utils.IOUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>90</index><block>14</block><killingTest>org.apache.commons.compress.utils.IOUtilsTest.skipUsingSkip(org.apache.commons.compress.utils.IOUtilsTest)</killingTest><description>replaced long return with 0 for org/apache/commons/compress/utils/IOUtils::skip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipFileTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipFileTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/utils/IOUtils::toByteArray</description></mutation>
</mutations>