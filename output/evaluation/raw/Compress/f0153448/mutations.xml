<mutations>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>179</index><block>27</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>2</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>842</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>6</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>8</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>10</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>14</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>15</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>15</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><block>15</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><block>17</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>127</index><block>19</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>851</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><block>20</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>851</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><block>20</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>158</index><block>23</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><block>23</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>842</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>842</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><block>14</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><block>17</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>132</index><block>19</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>21</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>162</index><block>23</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::pushback</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>860</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>171</index><block>25</block><killingTest /><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>861</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>175</index><block>26</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readDataDescriptor</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>185</index><block>28</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::bufferContainsSignature</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>bufferContainsSignature</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)Z</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>185</index><block>28</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::bufferContainsSignature</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>879</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>881</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>5</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>882</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>6</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>884</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>7</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>879</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>880</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>2</block><killingTest /><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>881</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>5</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>cacheBytesRead</mutatedMethod><methodDescription>(Ljava/io/ByteArrayOutputStream;III)I</methodDescription><lineNumber>886</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>56</index><block>8</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::cacheBytesRead</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>30</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.EncryptedArchiveTest.testReadPasswordEncryptedEntryViaStream(org.apache.commons.compress.archivers.zip.EncryptedArchiveTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::canReadEntryData</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>canReadEntryData</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>35</index><block>8</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::canReadEntryData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="12"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.skipsPK00Prefix(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>33</index><block>5</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.skipsPK00Prefix(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::checksig</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>checksig</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>587</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>23</index><block>3</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::checksig</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="48"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="48"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest /><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="48"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>2</block><killingTest /><description>removed call to java/util/zip/Inflater::end</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>73</index><block>17</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>17</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>20</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>22</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>6</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testMessageWithCorruptFileName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>12</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>17</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>25</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="12"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><block>27</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><block>29</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::drainCurrentEntryData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>86</index><block>20</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::pushback</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>109</index><block>26</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::drainCurrentEntryData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>123</index><block>30</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readDataDescriptor</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="12"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>closeEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>129</index><block>31</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to java/util/zip/Inflater::reset</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>currentEntryHasOutstandingBytes</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>currentEntryHasOutstandingBytes</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testMessageWithCorruptFileName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>currentEntryHasOutstandingBytes</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>663</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>5</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testMessageWithCorruptFileName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>currentEntryHasOutstandingBytes</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>26</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::currentEntryHasOutstandingBytes</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>20</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>4</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>drainCurrentEntryData</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>68</index><block>19</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="30"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>5</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="30"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>8</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>716</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>11</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to java/util/zip/Inflater::setInput</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>fill</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>57</index><block>12</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::fill</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>936</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>5</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>940</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>941</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>14</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="16"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>956</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><block>20</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>findEocdRecord</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>956</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>111</index><block>21</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="25"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>3</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>5</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="25"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getBytesInflated</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>37</index><block>6</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>replaced long return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::getBytesInflated</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/ArchiveEntry;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testRawNameReadFromStream(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::getNextEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>141</index><block>28</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>195</index><block>39</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>208</index><block>42</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>226</index><block>46</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>252</index><block>51</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>264</index><block>52</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>276</index><block>53</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>281</index><block>54</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadZip(org.apache.commons.compress.IOMethodsTest)</killingTest><description>Changed increment from 12 to -12</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>292</index><block>56</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="46"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>302</index><block>57</block><killingTest /><description>Changed increment from 2 to -2</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="46"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>149</index><block>29</block><killingTest /><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><block>29</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>484</index><block>108</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="30"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>6</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>14</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>16</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>20</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="12"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>168</index><block>32</block><killingTest>org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testRead7ZipArchiveForStream(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>239</index><block>47</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>343</index><block>64</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>346</index><block>65</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>370</index><block>71</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>379</index><block>75</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>409</index><block>85</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>457</index><block>101</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>4</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::closeEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFirstLocalFileHeader</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>91</index><block>17</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::skipRemainderOfArchive</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="46"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>152</index><block>29</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setPlatform</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="11"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>192</index><block>38</block><killingTest>org.apache.commons.compress.archivers.zip.EncryptedArchiveTest.testReadPasswordEncryptedEntryViaStream(org.apache.commons.compress.archivers.zip.EncryptedArchiveTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setGeneralPurposeBit</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>205</index><block>41</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setMethod</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="46"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>223</index><block>45</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setTime</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="16"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>249</index><block>50</block><killingTest>org.apache.commons.compress.archivers.zip.ExplodeSupportTest.testZipStreamWithImplodeCompression4K2Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCrc</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>312</index><block>57</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>322</index><block>60</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testMessageWithCorruptFileName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>332</index><block>61</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>339</index><block>63</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setExtra</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>354</index><block>67</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipUtil::setNameAndCommentFromExtraFields</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>361</index><block>68</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testMessageWithCorruptFileName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::processZip64Extra</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>491</index><block>109</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::getNextZipEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>isFirstByteOfEocdSig</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>isFirstByteOfEocdSig</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>15</index><block>3</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::isFirstByteOfEocdSig</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="12"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.skipsPK00Prefix(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>579</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>5</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>7</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>10</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>10</index><block>1</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::matches</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>47</index><block>13</block><killingTest>org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::matches</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="46"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testMessageWithCorruptFileName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="23"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><block>16</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCompressedSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>20</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>75</index><block>24</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testMessageWithCorruptFileName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCompressedSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>processZip64Extra</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipLong;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>83</index><block>27</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>pushback</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>890</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to java/io/PushbackInputStream::unread</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>pushback</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>891</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::pushedBackBytes</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="38"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="38"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>6</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="37"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>173</index><block>50</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="38"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>8</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>5</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>6</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>8</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>15</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>21</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><block>26</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><block>32</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>129</index><block>36</block><killingTest>org.apache.commons.compress.archivers.zip.ExplodeSupportTest.testZipStreamWithImplodeCompression4K2Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>138</index><block>40</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>173</index><block>50</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><block>12</block><killingTest>org.apache.commons.compress.archivers.zip.EncryptedArchiveTest.testReadPasswordEncryptedEntryViaStream(org.apache.commons.compress.archivers.zip.EncryptedArchiveTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipUtil::checkRequestedFeatures</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="37"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>182</index><block>52</block><killingTest /><description>removed call to java/util/zip/CRC32::update</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>22</index><block>4</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::read</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>187</index><block>53</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::read</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>3</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>13</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testListAllFilesWithNestedArchive(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>15</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>4</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><block>9</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCrc</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>49</index><block>10</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>77</index><block>16</block><killingTest>org.apache.commons.compress.archivers.JarTestCase.testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::pushback</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>754</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>86</index><block>19</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCompressedSize</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>96</index><block>22</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>107</index><block>26</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setCompressedSize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDataDescriptor</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>117</index><block>29</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveEntry::setSize</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>6</block><killingTest>org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest.testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest.testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>22</index><block>4</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readDeflated</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readDeflated</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>54</index><block>12</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadZip(org.apache.commons.compress.IOMethodsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readDeflated</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>8</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>9</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>10</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="30"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest.testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>17</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>19</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>46</index><block>10</block><killingTest>org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest.testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFromInflater</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFromInflater</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>88</index><block>20</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadZip(org.apache.commons.compress.IOMethodsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFromInflater</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="47"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>1</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readOneByte</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readOneByte</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>2</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readOneByte</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>999</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>21</index><block>3</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readOneByte</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>41</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>13</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>126</index><block>27</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>22</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>27</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><block>29</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>156</index><block>32</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>9</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>17</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>126</index><block>27</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>3</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStoredEntry</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>93</index><block>20</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>25</index><block>5</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStored</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>45</index><block>10</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStored</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>80</index><block>18</block><killingTest /><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStored</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStored</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>162</index><block>33</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>replaced int return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readStored</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>65</index><block>12</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>802</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>8</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>12</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>810</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>13</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>799</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readStoredEntry</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>815</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>972</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>975</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>3</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>981</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>10</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>972</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>realSkip</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>980</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><block>9</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>3</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="7"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>9</block><killingTest /><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.compress.archivers.ZipTestCase.testListAllFilesWithNestedArchive(org.apache.commons.compress.archivers.ZipTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>7</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>58</index><block>8</block><killingTest /><description>replaced long return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::skip</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>74</index><block>10</block><killingTest /><description>replaced long return with 0 for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::skip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>0</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::realSkip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>920</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::findEocdRecord</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>921</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::realSkip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>3</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>skipRemainderOfArchive</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>924</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>5</block><killingTest /><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::realSkip</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>2</block><killingTest>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>772</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>773</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>7</block><killingTest>org.apache.commons.compress.IOMethodsTest.testReadZip(org.apache.commons.compress.IOMethodsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="37"><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>supportsDataDescriptorFor</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z</methodDescription><lineNumber>770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>33</index><block>10</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::supportsDataDescriptorFor</description></mutation>
</mutations>