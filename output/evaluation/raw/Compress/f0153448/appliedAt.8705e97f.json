{"36": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["in.close()", [19766, 19776]]]}, "37": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["inf.end()", [19818, 19827]]]}, "48": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [23788, 23789]]]}, "63": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["<", [25256, 25257]]]}, "66": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["count(n)", [25442, 25450]]]}, "73": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [26732, 26733]]]}, "74": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["count(buf.limit())", [26782, 26800]]]}, "78": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [35708, 35709]]]}, "83": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["==", [36288, 36290]]]}, "84": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["==", [36517, 36519]]]}, "127": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">=", [26356, 26358]]]}, "129": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">=", [26356, 26358]]]}, "147": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">>", [9895, 9897]]]}, "148": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.entry.setPlatform((versionMadeBy >> ZipFile.BYTE_SHIFT) & ZipFile.NIBLET_MASK)", [9854, 9940]]]}, "149": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.entry.setTime(time)", [10512, 10539]]]}, "204": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["b == ZipArchiveOutputStream.EOCD_SIG[0]", [37927, 37966]]]}, "223": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["!=", [13971, 13973]]]}, "224": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["!=", [14042, 14044]]]}, "249": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["pushedBackBytes(length)", [34054, 34077]]]}, "251": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["<", [15563, 15564]]]}, "252": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">=", [16740, 16742]]]}, "253": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["-", [15598, 15599]]]}, "254": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.crc.update(buffer, offset, read)", [16760, 16800]]]}, "275": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["readFully(WORD_BUF)", [27189, 27208]]]}, "276": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.entry.setCrc(val.getValue())", [27445, 27481]]]}, "277": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF))", [28384, 28448]]]}, "278": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF, WORD))", [28462, 28522]]]}, "299": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [19095, 19096]]]}, "312": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["count(count)", [27021, 27033]]]}, "316": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["!=", [37790, 37792]]]}, "317": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["count(1)", [37811, 37819]]]}, "333": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["<", [17750, 17751]]]}, "335": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["-", [17729, 17730]]]}, "336": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["-", [17865, 17866]]]}, "337": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["count(l)", [17587, 17595]]]}, "354": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [37215, 37216]]]}, "357": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["-", [37130, 37131]]]}, "358": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["==", [37270, 37272]]]}, "359": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["count(x)", [37341, 37349]]]}, "380": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">=", [20531, 20533]]]}, "381": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["<", [20596, 20597]]]}, "382": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [[">", [20728, 20729]]]}, "385": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["-", [20646, 20647]]]}, "386": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["+=", [20870, 20872]]]}, "387": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["skipped", [20819, 20826]]]}, "412": {}, "413": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["realSkip(ZipShort.getValue(SHORT_BUF))", [35352, 35390]]]}, "423": {"src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": [["!entry.getGeneralPurposeBit().usesDataDescriptor()\n\n                || (allowStoredEntriesWithDataDescriptor && entry.getMethod() == ZipEntry.STORED)\n                || entry.getMethod() == ZipEntry.DEFLATED", [29095, 29302]]]}}