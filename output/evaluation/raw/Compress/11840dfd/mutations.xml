<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="11"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>23</index><block>4</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testCOMPRESS335(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="11"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>2</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>29</index><block>5</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/utils/ArchiveUtils::isArrayZero</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.compress.DetectArchiverTestCase.testCOMPRESS335(org.apache.commons.compress.DetectArchiverTestCase)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/utils/ArchiveUtils::isArrayZero</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BII)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>11</index><block>1</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/utils/ArchiveUtils::isEqual</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BII)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>11</index><block>1</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/utils/ArchiveUtils::isEqual</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.archivers.LongSymLinkTest.testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>64</index><block>11</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>73</index><block>13</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareBA(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>103</index><block>19</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareBA(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>43</index><block>7</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>89</index><block>16</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareBA(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>119</index><block>22</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareBA(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>14</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareBA(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>109</index><block>20</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareBA(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="9"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareAscii(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>4</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>8</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>10</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareAscii(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>11</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>14</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareBA(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>103</index><block>19</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>111</index><block>20</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareBA(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>54</index><block>9</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/utils/ArchiveUtils::isEqual</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>125</index><block>23</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareBA(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/utils/ArchiveUtils::isEqual</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>39</index><block>6</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/utils/ArchiveUtils::isEqual</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>85</index><block>15</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/utils/ArchiveUtils::isEqual</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>115</index><block>21</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/utils/ArchiveUtils::isEqual</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>130</index><block>24</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareAscii(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/utils/ArchiveUtils::isEqual</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareBA(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/utils/ArchiveUtils::isEqual</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([B[B)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareBA(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/utils/ArchiveUtils::isEqual</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([B[BZ)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareBA(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/utils/ArchiveUtils::isEqual</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([B[BZ)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareBA(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/utils/ArchiveUtils::isEqual</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqualWithNull</mutatedMethod><methodDescription>([BII[BII)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>11</index><block>1</block><killingTest /><description>replaced boolean return with false for org/apache/commons/compress/utils/ArchiveUtils::isEqualWithNull</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqualWithNull</mutatedMethod><methodDescription>([BII[BII)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>11</index><block>1</block><killingTest /><description>replaced boolean return with true for org/apache/commons/compress/utils/ArchiveUtils::isEqualWithNull</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[B)Z</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareAscii(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/utils/ArchiveUtils::matchAsciiBuffer</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[B)Z</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.testCompareAscii(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/utils/ArchiveUtils::matchAsciiBuffer</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>33</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTest><description>replaced boolean return with false for org/apache/commons/compress/utils/ArchiveUtils::matchAsciiBuffer</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>33</index><block>5</block><killingTest>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadGNULongNameEntryWithWrongName(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTest><description>replaced boolean return with true for org/apache/commons/compress/utils/ArchiveUtils::matchAsciiBuffer</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>sanitize</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>sanitize</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>sanitize</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>6</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.sanitizeShortensString(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>sanitize</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>67</index><block>10</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.sanitizeShortensString(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>sanitize</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>45</index><block>7</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.sanitizeShortensString(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>sanitize</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>110</index><block>20</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.sanitizeShortensString(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>sanitize</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.sanitizeShortensString(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>sanitize</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>4</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.sanitizeShortensString(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>sanitize</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>6</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.sanitizeShortensString(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>sanitize</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>10</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.sanitizeShortensString(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>sanitize</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>12</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.sanitizeShortensString(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>sanitize</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><block>14</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.sanitizeShortensString(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>sanitize</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>15</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.sanitizeShortensString(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>sanitize</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>117</index><block>22</block><killingTest>org.apache.commons.compress.ArchiveUtilsTest.sanitizeShortensString(org.apache.commons.compress.ArchiveUtilsTest)</killingTest><description>replaced return value with "" for org/apache/commons/compress/utils/ArchiveUtils::sanitize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>toAsciiBytes</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest.testLongFileNamesCauseExceptionByDefault(org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest)</killingTest><description>replaced return value with null for org/apache/commons/compress/utils/ArchiveUtils::toAsciiBytes</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>toAsciiString</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)</killingTest><description>replaced return value with "" for org/apache/commons/compress/utils/ArchiveUtils::toAsciiString</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>toAsciiString</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest.testReadLongNamesGNU(org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest)</killingTest><description>replaced return value with "" for org/apache/commons/compress/utils/ArchiveUtils::toAsciiString</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Ljava/lang/String;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>43</index><block>11</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Ljava/lang/String;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Ljava/lang/String;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>11</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Ljava/lang/String;</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>74</index><block>19</block><killingTest /><description>replaced return value with "" for org/apache/commons/compress/utils/ArchiveUtils::toString</description></mutation>
</mutations>