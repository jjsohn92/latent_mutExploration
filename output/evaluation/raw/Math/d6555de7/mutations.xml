<mutations>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>1</block><killingTest /><description>removed call to java/util/Arrays::fill</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;Lorg/apache/commons/math/linear/ArrayRealVector;)V</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>1</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;Lorg/apache/commons/math/linear/ArrayRealVector;)V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>1</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;Lorg/apache/commons/math/linear/ArrayRealVector;)V</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>2</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;Lorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>41</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;Lorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>55</index><block>6</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;Lorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>2</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;Lorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>5</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;Lorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;Lorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>2</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;Z)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;[D)V</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>2</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;[D)V</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>2</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;[D)V</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>3</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/linear/ArrayRealVector;)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/linear/ArrayRealVector;)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>43</index><block>5</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/linear/ArrayRealVector;)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>2</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/linear/ArrayRealVector;)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/linear/ArrayRealVector;)V</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><block>6</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DII)V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DII)V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>1</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DII)V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DII)V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>7</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/linear/ArrayRealVector;)V</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>2</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/linear/ArrayRealVector;)V</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>2</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/linear/ArrayRealVector;)V</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>3</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.math.linear.FrenchRealVectorFormatTest.testParseManyComponents(org.apache.commons.math.linear.FrenchRealVectorFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math.linear.FrenchRealVectorFormatTest.testParseManyComponents(org.apache.commons.math.linear.FrenchRealVectorFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="73"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>1</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>1</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>2</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;II)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;II)V</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>8</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;II)V</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>66</index><block>10</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;II)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>1</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;II)V</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>8</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;II)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>9</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;II)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;II)V</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;)Lorg/apache/commons/math/linear/ArrayRealVector;</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testInconsistentEquations(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::add</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>13</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNoDependency(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>3</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testInconsistentEquations(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::add</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>61</index><block>15</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::add</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>3</block><killingTest>org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testInconsistentEquations(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>4</block><killingTest>org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testInconsistentEquations(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>3</block><killingTest>org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNoDependency(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="15"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>46</index><block>6</block><killingTest>org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testInconsistentEquations(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::add</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>975</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>0</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>36</index><block>2</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::append</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;)Lorg/apache/commons/math/linear/ArrayRealVector;</methodDescription><lineNumber>969</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::append</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::append</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>21</index><block>3</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::append</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::append</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>1081</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testInconsistentEquations(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>1069</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/AbstractRealVector;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::copy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;)D</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testLongly(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::dotProduct</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>12</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>12</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>660</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>667</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>663</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>3</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testLongly(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::dotProduct</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>56</index><block>13</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::dotProduct</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="19"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>41</index><block>4</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::dotProduct</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;)Lorg/apache/commons/math/linear/ArrayRealVector;</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::ebeDivide</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>6</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>8</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>609</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>3</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>2</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::ebeDivide</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>57</index><block>10</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::ebeDivide</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>4</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>46</index><block>6</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::ebeDivide</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;)Lorg/apache/commons/math/linear/ArrayRealVector;</methodDescription><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::ebeMultiply</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>6</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>8</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>3</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>2</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::ebeMultiply</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>57</index><block>10</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::ebeMultiply</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>4</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>587</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>46</index><block>6</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::ebeMultiply</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>1163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><block>13</block><killingTest>org.apache.commons.math.linear.FrenchRealVectorFormatTest.testParseSimpleWithDecimals(org.apache.commons.math.linear.FrenchRealVectorFormatTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="29"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>1145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest.testParaboloid2D(org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>1149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTest>org.apache.commons.math.linear.RealVectorFormatTest.testParseNan(org.apache.commons.math.linear.RealVectorFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>1149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.math.linear.RealVectorFormatTest.testParseNan(org.apache.commons.math.linear.RealVectorFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>6</block><killingTest>org.apache.commons.math.linear.RealVectorFormatTest.testParseNan(org.apache.commons.math.linear.RealVectorFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>1159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>9</block><killingTest>org.apache.commons.math.linear.RealVectorFormatTest.testParseNan(org.apache.commons.math.linear.RealVectorFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="27"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>1163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>13</block><killingTest>org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest.testParaboloid2D(org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>1164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>15</block><killingTest>org.apache.commons.math.linear.FrenchRealVectorFormatTest.testParseSimpleWithDecimals(org.apache.commons.math.linear.FrenchRealVectorFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>1146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>9</index><block>1</block><killingTest /><description>replaced boolean return with false for org/apache/commons/math/linear/ArrayRealVector::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>1160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>47</index><block>11</block><killingTest>org.apache.commons.math.linear.RealVectorFormatTest.testParseNan(org.apache.commons.math.linear.RealVectorFormatTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math/linear/ArrayRealVector::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>1168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>80</index><block>18</block><killingTest>org.apache.commons.math.linear.FrenchRealVectorFormatTest.testParseSimpleWithDecimals(org.apache.commons.math.linear.FrenchRealVectorFormatTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math/linear/ArrayRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>1150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>20</index><block>4</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/ArrayRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>1156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>37</index><block>7</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/ArrayRealVector::equals</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>1160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>47</index><block>11</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/ArrayRealVector::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>1165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>72</index><block>16</block><killingTest>org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest.testParaboloid2D(org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/linear/ArrayRealVector::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::getData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDataRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testInconsistentEquations(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::getDataRef</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.linear.FrenchRealVectorFormatTest.testNonDefaultSetting(org.apache.commons.math.linear.FrenchRealVectorFormatTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/linear/ArrayRealVector::getDimension</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;)D</methodDescription><lineNumber>769</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>1</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::getDistance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>7</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>7</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>7</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>3</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>12</index><block>2</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::getDistance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>59</index><block>9</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::getDistance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>747</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>3</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>3</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>3</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>747</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>751</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>48</index><block>5</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::getDistance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.math.linear.FrenchRealVectorFormatTest.testNonDefaultSetting(org.apache.commons.math.linear.FrenchRealVectorFormatTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::getEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;)D</methodDescription><lineNumber>815</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>1</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::getL1Distance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>7</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>8</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>778</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>3</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>776</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>12</index><block>2</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::getL1Distance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>784</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>57</index><block>9</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::getL1Distance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>3</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>4</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>791</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>797</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>46</index><block>5</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::getL1Distance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Norm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Norm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>34</index><block>3</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Norm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>3</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Norm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getL1Norm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>39</index><block>4</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::getL1Norm</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;)D</methodDescription><lineNumber>861</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>1</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::getLInfDistance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>7</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>3</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>822</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>12</index><block>2</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::getLInfDistance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>57</index><block>10</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::getLInfDistance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>840</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>3</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>837</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>46</index><block>6</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::getLInfDistance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getLInfNorm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getLInfNorm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>34</index><block>4</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getLInfNorm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getLInfNorm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>39</index><block>5</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::getLInfNorm</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getNorm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>1</block><killingTest>org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest.testLinearFunction2D(org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getNorm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>35</index><block>2</block><killingTest>org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest.testLinearFunction2D(org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getNorm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>2</block><killingTest>org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest.testLinearFunction2D(org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getNorm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>2</block><killingTest>org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest.testLinearFunction2D(org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getNorm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>1</block><killingTest>org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest.testLinearFunction2D(org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getNorm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>41</index><block>4</block><killingTest>org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest.testLinearFunction2D(org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/ArrayRealVector::getNorm</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>4</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>4</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>989</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>1</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>991</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>3</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>4</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>41</index><block>5</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::getSubVector</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>9</index><block>2</block><killingTest /><description>replaced int return with 0 for org/apache/commons/math/linear/ArrayRealVector::hashCode</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>15</index><block>4</block><killingTest /><description>replaced int return with 0 for org/apache/commons/math/linear/ArrayRealVector::hashCode</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>41</index><block>8</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>38</index><block>7</block><killingTest /><description>replaced boolean return with false for org/apache/commons/math/linear/ArrayRealVector::isInfinite</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>9</index><block>2</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/ArrayRealVector::isInfinite</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>46</index><block>9</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/ArrayRealVector::isInfinite</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1093</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>1</block><killingTest>org.apache.commons.math.linear.FrenchRealVectorFormatTest.testParseSimpleWithDecimals(org.apache.commons.math.linear.FrenchRealVectorFormatTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1093</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>32</index><block>5</block><killingTest>org.apache.commons.math.linear.FrenchRealVectorFormatTest.testParseSimpleWithDecimals(org.apache.commons.math.linear.FrenchRealVectorFormatTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1093</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>1</block><killingTest>org.apache.commons.math.linear.RealVectorFormatTest.testParseNan(org.apache.commons.math.linear.RealVectorFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1094</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.math.linear.RealVectorFormatTest.testParseNan(org.apache.commons.math.linear.RealVectorFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1095</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>29</index><block>4</block><killingTest>org.apache.commons.math.linear.RealVectorFormatTest.testParseNan(org.apache.commons.math.linear.RealVectorFormatTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math/linear/ArrayRealVector::isNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="26"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>37</index><block>6</block><killingTest>org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest.testLinearFunction2D(org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/linear/ArrayRealVector::isNaN</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapAbsToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapAbsToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapAbsToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapAbsToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapAcosToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapAcosToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapAcosToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapAcosToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>2</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>30</index><block>3</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapAddToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapAsinToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapAsinToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapAsinToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapAsinToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapAtanToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapAtanToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapAtanToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapAtanToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapCbrtToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapCbrtToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapCbrtToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapCbrtToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapCeilToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapCeilToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapCeilToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapCeilToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapCosToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapCosToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapCosToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapCosToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapCoshToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapCoshToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapCoshToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapCoshToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapDivideToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapDivideToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>2</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapDivideToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapDivideToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>30</index><block>3</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapDivideToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapExpToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapExpToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapExpToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapExpToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapExpm1ToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapExpm1ToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapExpm1ToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapExpm1ToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapFloorToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapFloorToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapFloorToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapFloorToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapInvToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapInvToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>2</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapInvToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapInvToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>30</index><block>3</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapInvToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapLog10ToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapLog10ToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapLog10ToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapLog10ToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapLog1pToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapLog1pToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapLog1pToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapLog1pToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapLogToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapLogToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapLogToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapLogToSelf</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapMultiplyToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapMultiplyToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapMultiplyToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapMultiplyToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>30</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapMultiplyToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapPowToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapPowToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapPowToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>30</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapPowToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapRintToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapRintToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapRintToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapRintToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapSignumToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapSignumToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapSignumToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapSignumToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapSinToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapSinToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapSinToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapSinToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapSinhToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapSinhToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapSinhToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapSinhToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapSqrtToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapSqrtToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapSqrtToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapSqrtToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapSubtractToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapSubtractToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>2</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapSubtractToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapSubtractToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>30</index><block>3</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapSubtractToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapTanToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapTanToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapTanToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapTanToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapTanhToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapTanhToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapTanhToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapTanhToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapUlpToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapUlpToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>mapUlpToSelf</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::mapUlpToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::outerProduct</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>6</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>911</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>8</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>70</index><block>12</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>912</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>10</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>911</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>907</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>3</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>912</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>63</index><block>10</block><killingTest /><description>removed call to org/apache/commons/math/linear/RealMatrix::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>905</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>2</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::outerProduct</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>915</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>75</index><block>13</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::outerProduct</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>936</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>937</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>936</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>59</index><block>8</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>938</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>6</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>936</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>937</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>933</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>938</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>6</block><killingTest /><description>removed call to org/apache/commons/math/linear/RealMatrix::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>941</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>64</index><block>9</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::outerProduct</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;)Lorg/apache/commons/math/linear/ArrayRealVector;</methodDescription><lineNumber>898</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>2</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;)Lorg/apache/commons/math/linear/ArrayRealVector;</methodDescription><lineNumber>898</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>13</index><block>3</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::projection</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>884</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>2</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>884</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>3</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::projection</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>889</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>2</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::projection</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to java/util/Arrays::fill</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/ArrayRealVector;)V</methodDescription><lineNumber>1042</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::setSubVector</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>1002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>1012</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>1012</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>38</index><block>6</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>1012</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>4</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>1013</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>5</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>10</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>10</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>1012</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>1010</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::set</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>8</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><block>10</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>1028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>3</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>1028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>3</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>1025</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>0</block><killingTest /><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>1027</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>2</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>1028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>3</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/ArrayRealVector;)Lorg/apache/commons/math/linear/ArrayRealVector;</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.canEstimateResiduals(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::subtract</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>13</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>3</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.canEstimateResiduals(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::subtract</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>61</index><block>15</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::subtract</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>3</block><killingTest>org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.canEstimateResiduals(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>4</block><killingTest>org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testHat(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>3</block><killingTest>org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testHat(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/ArrayRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>46</index><block>6</block><killingTest>org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.canEstimateResiduals(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::subtract</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>1052</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::toArray</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1058</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorArray(org.apache.commons.math.FunctionEvaluationExceptionTest)</killingTest><description>replaced return value with "" for org/apache/commons/math/linear/ArrayRealVector::toString</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>unitVector</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>867</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>unitVector</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>870</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>24</index><block>5</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/ArrayRealVector::unitVector</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ArrayRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.ArrayRealVector</mutatedClass><mutatedMethod>unitize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>876</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;I)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>2</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>55</index><block>10</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;D)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;D)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;D)V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>27</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>11</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>20</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>24</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>68</index><block>21</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>90</index><block>27</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>98</index><block>30</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>105</index><block>32</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::add</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>18</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::add</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>24</index><block>6</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::add</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>19</index><block>2</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::append</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>8</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>6</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>9</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>40</index><block>11</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::append</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>2</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::append</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>19</index><block>5</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::append</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>3</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>3</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>37</index><block>5</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::append</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::copy</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>21</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>21</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>11</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>16</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><block>17</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>77</index><block>22</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::dotProduct</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>12</index><block>2</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::dotProduct</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>18</index><block>4</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::dotProduct</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>12</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>7</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>12</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>46</index><block>14</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::ebeDivide</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>10</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>6</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>10</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>46</index><block>12</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::ebeDivide</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>12</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>7</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>12</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>46</index><block>14</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::ebeMultiply</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>10</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>6</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>10</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>46</index><block>12</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::ebeMultiply</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>754</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>760</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>772</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><block>22</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>29</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><block>36</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>773</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>71</index><block>16</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>109</index><block>30</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>9</index><block>1</block><killingTest /><description>replaced boolean return with false for org/apache/commons/math/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>136</index><block>39</block><killingTest /><description>replaced boolean return with false for org/apache/commons/math/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>17</index><block>3</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>26</index><block>5</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>42</index><block>7</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>769</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>56</index><block>11</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>776</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>91</index><block>23</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>784</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>129</index><block>37</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>4</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>34</index><block>8</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::getData</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced int return with 0 for org/apache/commons/math/linear/OpenMapRealVector::getDimension</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>8</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>8</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>8</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>19</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>19</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>17</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>4</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>14</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>92</index><block>22</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getDistance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>18</index><block>4</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getDistance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>25</index><block>7</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getDistance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>4</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>4</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>4</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>47</index><block>6</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getDistance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntries</mutatedMethod><methodDescription>()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::getEntries</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>12</index><block>2</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>8</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>9</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>22</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>14</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>18</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>4</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><block>15</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>86</index><block>24</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getL1Distance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>18</index><block>4</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getL1Distance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>25</index><block>7</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getL1Distance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>4</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>5</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>44</index><block>6</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getL1Distance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>77</index><block>22</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>8</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>16</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>20</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>22</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>4</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>17</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>89</index><block>26</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getLInfDistance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>18</index><block>4</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getLInfDistance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>25</index><block>7</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getLInfDistance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>4</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>48</index><block>8</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getLInfDistance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSparcity</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>2</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSparcity</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>11</index><block>2</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getSparcity</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>10</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>1</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>1</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>3</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>11</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>7</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><block>12</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>71</index><block>14</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::getSubVector</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>1</block><killingTest /><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>1</block><killingTest /><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>1</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>1</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>1</block><killingTest /><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>1</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>8</block><killingTest /><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>8</block><killingTest /><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>8</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>8</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>5</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>75</index><block>9</block><killingTest /><description>replaced int return with 0 for org/apache/commons/math/linear/OpenMapRealVector::hashCode</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>14</index><block>4</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::isDefaultValue</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>4</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>49</index><block>13</block><killingTest /><description>replaced boolean return with false for org/apache/commons/math/linear/OpenMapRealVector::isInfinite</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>33</index><block>8</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::isInfinite</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>49</index><block>13</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::isInfinite</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>4</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>25</index><block>8</block><killingTest /><description>replaced boolean return with false for org/apache/commons/math/linear/OpenMapRealVector::isNaN</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>29</index><block>9</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::isNaN</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAdd</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>579</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>2</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::mapAdd</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>22</index><block>4</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>3</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>3</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>587</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>27</index><block>5</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::mapAddToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>10</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>64</index><block>12</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>11</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>6</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>61</index><block>11</block><killingTest /><description>removed call to org/apache/commons/math/linear/RealMatrix::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>72</index><block>14</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::outerProduct</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>609</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>4</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>609</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>18</index><block>5</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::projection</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>16</index><block>3</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::projection</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>18</index><block>3</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>2</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>2</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>4</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setSubVector</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>1</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>1</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>4</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>4</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>sparseIterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::sparseIterator</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>667</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>58</index><block>17</block><killingTest /><description>removed negation</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>14</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>11</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>8</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>14</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>667</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>17</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>66</index><block>19</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::subtract</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>18</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::subtract</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>25</index><block>7</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::subtract</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>51</index><block>9</block><killingTest /><description>removed negation</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>688</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>7</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>684</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>688</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>7</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>9</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>60</index><block>11</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::subtract</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::toArray</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitVector</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::unitize</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitVector</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>13</index><block>2</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::unitVector</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>12</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>9</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
</mutations>