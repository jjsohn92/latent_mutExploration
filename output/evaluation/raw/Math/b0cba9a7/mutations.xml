<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>1</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testPreconditions(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>5</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testPreconditions(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>1</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testIllegalArguments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>5</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testIllegalArguments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="6"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>3</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>3</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>3</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>3</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>3</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>3</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>3</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>3</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>3</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>3</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>3</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>46</index><block>3</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/FDistribution::calculateNumericalVariance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>50</index><block>4</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/FDistribution::calculateNumericalVariance</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>2</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>2</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testCumulativeProbabilities(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>2</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>2</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>2</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>2</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMath785(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>45</index><block>4</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/FDistribution::cumulativeProbability</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testDensities(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>0</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testDensities(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>3</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testDensities(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>3</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testDensities(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>4</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testDensities(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>4</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testDensities(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>4</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testDensities(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>4</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testIsSupportLowerBoundInclusive(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>4</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testDensities(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>4</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testDensities(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>4</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testDensities(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>4</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testDensities(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>4</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testDensities(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>4</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testDensities(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>5</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testDensities(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>71</index><block>6</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testIsSupportLowerBoundInclusive(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/FDistribution::density</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>getDenominatorDegreesOfFreedom</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/FDistribution::getDenominatorDegreesOfFreedom</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>getNumeratorDegreesOfFreedom</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/FDistribution::getNumeratorDegreesOfFreedom</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>getNumericalMean</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>getNumericalMean</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>getNumericalMean</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>getNumericalMean</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>getNumericalMean</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/FDistribution::getNumericalMean</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>getNumericalMean</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>23</index><block>3</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/FDistribution::getNumericalMean</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>getNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>getNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>21</index><block>3</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testMoments(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/FDistribution::getNumericalVariance</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>getSolverAbsoluteAccuracy</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/FDistribution::getSolverAbsoluteAccuracy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>getSupportUpperBound</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testInverseCumulativeProbabilityExtremes(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/FDistribution::getSupportUpperBound</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>isSupportConnected</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>4</index><block>0</block><killingTest /><description>replaced boolean return with false for org/apache/commons/math3/distribution/FDistribution::isSupportConnected</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>isSupportLowerBoundInclusive</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testIsSupportLowerBoundInclusive(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/distribution/FDistribution::isSupportLowerBoundInclusive</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.FDistribution</mutatedClass><mutatedMethod>isSupportUpperBoundInclusive</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math3.distribution.FDistributionTest.testIsSupportUpperBoundInclusive(org.apache.commons.math3.distribution.FDistributionTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/distribution/FDistribution::isSupportUpperBoundInclusive</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testPreconditions1(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testGetLowerBound(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>4</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testCumulativeProbabilities(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>4</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testDensityIntegrals(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>4</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testDensityIntegrals(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testDensityIntegrals(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testDensityIntegrals(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>22</index><block>3</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testCumulativeProbabilities(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/UniformRealDistribution::cumulativeProbability</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>35</index><block>4</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testDensityIntegrals(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/UniformRealDistribution::cumulativeProbability</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testDensities(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testDensities(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>3</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testDensities(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testDensities(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testDensities(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testDensities(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>26</index><block>3</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testDensities(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/UniformRealDistribution::density</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>getNumericalMean</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testMeanVariance(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>getNumericalMean</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testMeanVariance(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>getNumericalMean</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>10</index><block>0</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testMeanVariance(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/UniformRealDistribution::getNumericalMean</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>getNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testMeanVariance(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>getNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>0</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testMeanVariance(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>getNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>0</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testMeanVariance(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>getNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>16</index><block>0</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testMeanVariance(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/UniformRealDistribution::getNumericalVariance</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>getSolverAbsoluteAccuracy</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/UniformRealDistribution::getSolverAbsoluteAccuracy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>getSupportLowerBound</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testGetLowerBound(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/UniformRealDistribution::getSupportLowerBound</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>getSupportUpperBound</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testGetUpperBound(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/UniformRealDistribution::getSupportUpperBound</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>isSupportConnected</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>4</index><block>0</block><killingTest /><description>replaced boolean return with false for org/apache/commons/math3/distribution/UniformRealDistribution::isSupportConnected</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>isSupportLowerBoundInclusive</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testIsSupportLowerBoundInclusive(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math3/distribution/UniformRealDistribution::isSupportLowerBoundInclusive</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>isSupportUpperBoundInclusive</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testIsSupportUpperBoundInclusive(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math3/distribution/UniformRealDistribution::isSupportUpperBoundInclusive</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>sample</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testSampling(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>sample</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testSampling(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>sample</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>1</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testSampling(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>sample</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>1</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testSampling(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>UniformRealDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.UniformRealDistribution</mutatedClass><mutatedMethod>sample</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>20</index><block>1</block><killingTest>org.apache.commons.math3.distribution.UniformRealDistributionTest.testSampling(org.apache.commons.math3.distribution.UniformRealDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/UniformRealDistribution::sample</description></mutation>
</mutations>