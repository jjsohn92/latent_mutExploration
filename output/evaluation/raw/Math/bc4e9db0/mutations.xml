<mutations>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="31"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>1</block><killingTest>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>2</block><killingTest /><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>1</block><killingTest>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>8</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>9</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>9</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>11</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>5</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testAddFail(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>removed call to org/apache/commons/math/linear/MatrixUtils::checkAdditionCompatible</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>6</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><block>11</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealMatrix::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>64</index><block>13</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealMatrix::add</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>4</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/MatrixUtils::checkRowIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/MatrixUtils::checkColumnIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>computeKey</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnVector(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="17"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>computeKey</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>computeKey</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnVector(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/linear/OpenMapRealMatrix::computeKey</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testCopyFunctions(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealMatrix::copy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>createMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealMatrix::createMatrix</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testAddFail(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/linear/OpenMapRealMatrix::getColumnDimension</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/MatrixUtils::checkRowIndex</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/MatrixUtils::checkColumnIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnVector(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealMatrix::getEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testAddFail(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/linear/OpenMapRealMatrix::getRowDimension</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>65</index><block>11</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply2(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>125</index><block>23</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>10</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>10</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>18</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply2(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>18</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply2(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>6</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>11</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>14</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><block>18</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiply(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>removed call to org/apache/commons/math/linear/MatrixUtils::checkMultiplicationCompatible</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>7</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>133</index><block>25</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealMatrix::multiply</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>76</index><block>13</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>91</index><block>16</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>12</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>12</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>15</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>8</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>13</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>2</block><killingTest /><description>removed call to org/apache/commons/math/linear/MatrixUtils::checkMultiplicationCompatible</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>9</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>88</index><block>15</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>removed call to org/apache/commons/math/linear/BlockRealMatrix::addToEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealMatrix::multiply</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>99</index><block>18</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealMatrix::multiply</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>4</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/MatrixUtils::checkRowIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/MatrixUtils::checkColumnIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnVector(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="30"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/MatrixUtils::checkRowIndex</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="30"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/MatrixUtils::checkColumnIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>8</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>9</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>9</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>11</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>5</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testPlusMinus(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>removed call to org/apache/commons/math/linear/MatrixUtils::checkAdditionCompatible</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>6</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><block>11</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealMatrix::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>64</index><block>13</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealMatrix::subtract</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(org.apache.commons.math.linear.SparseRealMatrixTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealMatrix::subtract</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/OpenMapRealMatrix;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>18</index><block>3</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealMatrix::subtract</description></mutation>
</mutations>