<mutations>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>105</index><block>16</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>178</index><block>29</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>212</index><block>37</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>222</index><block>39</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>246</index><block>46</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>284</index><block>58</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>296</index><block>62</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>13</block><killingTest>org.apache.commons.math.analysis.solvers.SecantSolverTest.testSolutionBelowSide(org.apache.commons.math.analysis.solvers.SecantSolverTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>75</index><block>13</block><killingTest>org.apache.commons.math.analysis.solvers.SecantSolverTest.testSolutionBelowSide(org.apache.commons.math.analysis.solvers.SecantSolverTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>13</block><killingTest>org.apache.commons.math.analysis.solvers.SecantSolverTest.testSolutionBelowSide(org.apache.commons.math.analysis.solvers.SecantSolverTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>13</block><killingTest>org.apache.commons.math.analysis.solvers.SecantSolverTest.testSolutionBelowSide(org.apache.commons.math.analysis.solvers.SecantSolverTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>13</block><killingTest>org.apache.commons.math.analysis.solvers.SecantSolverTest.testSolutionBelowSide(org.apache.commons.math.analysis.solvers.SecantSolverTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><block>16</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><block>23</block><killingTest>org.apache.commons.math.analysis.solvers.IllinoisSolverTest.testSolutionRightSide(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>148</index><block>24</block><killingTest>org.apache.commons.math.analysis.solvers.PegasusSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.PegasusSolverTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>149</index><block>24</block><killingTest>org.apache.commons.math.analysis.solvers.PegasusSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.PegasusSolverTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>150</index><block>24</block><killingTest>org.apache.commons.math.analysis.solvers.PegasusSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.PegasusSolverTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>237</index><block>43</block><killingTest>org.apache.commons.math.analysis.solvers.PegasusSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.PegasusSolverTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="19"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>242</index><block>45</block><killingTest>org.apache.commons.math.ode.events.OverlappingEventsTest.testOverlappingEvents1(org.apache.commons.math.ode.events.OverlappingEventsTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>4</block><killingTest>org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>6</block><killingTest>org.apache.commons.math.analysis.solvers.SecantSolverTest.testSolutionBelowSide(org.apache.commons.math.analysis.solvers.SecantSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>14</block><killingTest>org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>16</block><killingTest>org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>117</index><block>17</block><killingTest>org.apache.commons.math.analysis.solvers.IllinoisSolverTest.testSolutionRightSide(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>178</index><block>29</block><killingTest>org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>194</index><block>33</block><killingTest>org.apache.commons.math.analysis.solvers.PegasusSolverTest.testSolutionLeftSide(org.apache.commons.math.analysis.solvers.PegasusSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>202</index><block>35</block><killingTest>org.apache.commons.math.analysis.solvers.IllinoisSolverTest.testSolutionRightSide(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>212</index><block>37</block><killingTest>org.apache.commons.math.analysis.solvers.PegasusSolverTest.testSolutionBelowSide(org.apache.commons.math.analysis.solvers.PegasusSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>222</index><block>39</block><killingTest>org.apache.commons.math.analysis.solvers.PegasusSolverTest.testSolutionAboveSide(org.apache.commons.math.analysis.solvers.PegasusSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>246</index><block>46</block><killingTest>org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>262</index><block>50</block><killingTest>org.apache.commons.math.analysis.solvers.PegasusSolverTest.testSolutionLeftSide(org.apache.commons.math.analysis.solvers.PegasusSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>272</index><block>54</block><killingTest>org.apache.commons.math.analysis.solvers.IllinoisSolverTest.testSolutionRightSide(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>284</index><block>58</block><killingTest>org.apache.commons.math.analysis.solvers.PegasusSolverTest.testSolutionBelowSide(org.apache.commons.math.analysis.solvers.PegasusSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>296</index><block>62</block><killingTest>org.apache.commons.math.analysis.solvers.PegasusSolverTest.testSolutionAboveSide(org.apache.commons.math.analysis.solvers.PegasusSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>48</index><block>8</block><killingTest>org.apache.commons.math.analysis.solvers.PegasusSolverTest.testBadEndpoints(org.apache.commons.math.analysis.solvers.PegasusSolverTest)</killingTest><description>removed call to org/apache/commons/math/analysis/solvers/BaseSecantSolver::verifyBracketing</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>32</index><block>5</block><killingTest>org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BaseSecantSolver::doSolve</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>42</index><block>7</block><killingTest>org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BaseSecantSolver::doSolve</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>97</index><block>15</block><killingTest>org.apache.commons.math.analysis.solvers.PegasusSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.PegasusSolverTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BaseSecantSolver::doSolve</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>190</index><block>32</block><killingTest>org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BaseSecantSolver::doSolve</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>198</index><block>34</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BaseSecantSolver::doSolve</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>206</index><block>36</block><killingTest>org.apache.commons.math.ode.events.OverlappingEventsTest.testOverlappingEvents1(org.apache.commons.math.ode.events.OverlappingEventsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BaseSecantSolver::doSolve</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>216</index><block>38</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BaseSecantSolver::doSolve</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>226</index><block>40</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BaseSecantSolver::doSolve</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>258</index><block>49</block><killingTest>org.apache.commons.math.analysis.solvers.PegasusSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.PegasusSolverTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BaseSecantSolver::doSolve</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>268</index><block>53</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BaseSecantSolver::doSolve</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>278</index><block>57</block><killingTest>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BaseSecantSolver::doSolve</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>290</index><block>61</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BaseSecantSolver::doSolve</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>doSolve</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>302</index><block>65</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BaseSecantSolver::doSolve</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BaseSecantSolver::solve</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDDLorg/apache/commons/math/analysis/solvers/AllowedSolution;)D</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BaseSecantSolver::solve</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDLorg/apache/commons/math/analysis/solvers/AllowedSolution;)D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>0</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDLorg/apache/commons/math/analysis/solvers/AllowedSolution;)D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>0</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDLorg/apache/commons/math/analysis/solvers/AllowedSolution;)D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>0</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="12"><sourceFile>BaseSecantSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BaseSecantSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDLorg/apache/commons/math/analysis/solvers/AllowedSolution;)D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>17</index><block>1</block><killingTest>org.apache.commons.math.ode.events.OverlappingEventsTest.testOverlappingEvents1(org.apache.commons.math.ode.events.OverlappingEventsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BaseSecantSolver::solve</description></mutation>
</mutations>