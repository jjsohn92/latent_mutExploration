<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZDI)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>8</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZDI)V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>10</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZDI)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>12</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath290LEQ(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZDI)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>5</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZDI)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>12</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZDI)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>93</index><block>16</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::initializeColumnLabels</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>152</index><block>35</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>219</index><block>52</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>237</index><block>57</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath293(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>268</index><block>65</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>286</index><block>70</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>0</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>23</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="10"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><block>27</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><block>31</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>166</index><block>38</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>191</index><block>44</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>202</index><block>47</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>220</index><block>52</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>238</index><block>57</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>258</index><block>63</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath434UnfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>269</index><block>65</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>5</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>8</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>11</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><block>15</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="27"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><block>23</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>123</index><block>29</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>152</index><block>35</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>183</index><block>42</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>211</index><block>50</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>229</index><block>55</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>246</index><block>59</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>250</index><block>61</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>46</index><block>6</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>71</index><block>14</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>97</index><block>22</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::copyArray</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="27"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>118</index><block>28</block><killingTest /><description>removed call to org/apache/commons/math/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>134</index><block>32</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>178</index><block>41</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::copyArray</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>195</index><block>46</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>205</index><block>48</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>222</index><block>52</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>240</index><block>57</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>removed call to org/apache/commons/math/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>260</index><block>63</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>271</index><block>65</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>283</index><block>69</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/linear/Array2DRowRealMatrix::setRowVector</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>291</index><block>71</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced return value with null for org/apache/commons/math/optimization/linear/SimplexTableau::createTableau</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath434UnfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>4</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath434UnfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath434UnfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>4</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath434UnfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>removed call to org/apache/commons/math/linear/RealMatrix::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>9</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testUnboundedSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>48</index><block>12</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>68</index><block>19</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>114</index><block>32</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>127</index><block>35</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>167</index><block>45</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>91</index><block>26</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>143</index><block>39</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>156</index><block>42</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>181</index><block>49</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>21</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>28</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>103</index><block>30</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>140</index><block>39</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>163</index><block>44</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>9</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>12</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>19</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>22</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>114</index><block>32</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><block>35</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><block>38</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>167</index><block>45</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>4</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>5</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>6</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>7</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>8</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>10</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>12</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>14</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>9</index><block>1</block><killingTest /><description>replaced boolean return with false for org/apache/commons/math/optimization/linear/SimplexTableau::equals</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>76</index><block>17</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/optimization/linear/SimplexTableau::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>80</index><block>18</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/optimization/linear/SimplexTableau::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getArtificialVariableOffset</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>5</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>6</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>10</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>48</index><block>11</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>replaced Integer return value with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getBasicRow</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>56</index><block>13</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath288(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>replaced Integer return value with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getBasicRow</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>27</index><block>7</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>6</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>34</index><block>9</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getConstraintTypeCounts</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced return value with null for org/apache/commons/math/optimization/linear/SimplexTableau::getData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getHeight</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoefficientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoefficientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>33</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoefficientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoefficientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoefficientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>38</index><block>4</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/optimization/linear/SimplexTableau::getInvertedCoefficientSum</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumArtificialVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath434UnfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getNumArtificialVariables</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getNumDecisionVariables</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>11</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumSlackVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getNumSlackVariables</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath290GEQ(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getOriginalNumDecisionVariables</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath434UnfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath288(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getRhsOffset</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getSlackVariableOffset</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="19"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>13</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath290GEQ(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="19"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>73</index><block>19</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>159</index><block>42</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath290GEQ(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>31</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath434NegativeVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="12"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>155</index><block>41</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath290GEQ(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>5</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath290GEQ(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>13</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath288(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>19</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath288(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><block>22</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath290GEQ(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>24</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath288(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>27</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath288(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>28</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath434NegativeVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>33</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath290GEQ(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="12"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>38</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>171</index><block>45</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath290GEQ(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>replaced return value with null for org/apache/commons/math/optimization/linear/SimplexTableau::getSolution</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getWidth</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>2</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>2</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>2</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>4</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>4</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>5</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>6</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>7</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>36</index><block>7</block><killingTest /><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::hashCode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="16"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>7</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="27"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>68</index><block>19</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="27"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>95</index><block>28</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath290GEQ(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>7</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath288(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="20"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>14</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>19</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>28</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath434UnfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>6</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath434UnfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>35</index><block>8</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath434UnfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath434UnfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath288(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>6</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath434UnfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>40</index><block>9</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath434UnfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math/optimization/linear/SimplexTableau::isOptimal</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>32</index><block>7</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath288(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/optimization/linear/SimplexTableau::isOptimal</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="27"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>7</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath434PivotRowSelection2(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>24</index><block>8</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath290LEQ(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>replaced return value with null for org/apache/commons/math/optimization/linear/SimplexTableau::normalize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>36</index><block>13</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced return value with null for org/apache/commons/math/optimization/linear/SimplexTableau::normalize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalizeConstraints</mutatedMethod><methodDescription>(Ljava/util/Collection;)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>34</index><block>9</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced return value with Collections.emptyList for org/apache/commons/math/optimization/linear/SimplexTableau::normalizeConstraints</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>readObject</mutatedMethod><methodDescription>(Ljava/io/ObjectInputStream;)V</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to java/io/ObjectInputStream::defaultReadObject</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>readObject</mutatedMethod><methodDescription>(Ljava/io/ObjectInputStream;)V</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/linear/MatrixUtils::deserializeRealMatrix</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/RealMatrix::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>4</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath434UnfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>removed call to org/apache/commons/math/linear/RealMatrix::setRowVector</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>writeObject</mutatedMethod><methodDescription>(Ljava/io/ObjectOutputStream;)V</methodDescription><lineNumber>609</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to java/io/ObjectOutputStream::defaultWriteObject</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>writeObject</mutatedMethod><methodDescription>(Ljava/io/ObjectOutputStream;)V</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/linear/MatrixUtils::serializeRealMatrix</description></mutation>
</mutations>