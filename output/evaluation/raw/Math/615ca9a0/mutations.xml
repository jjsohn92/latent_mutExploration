<mutations>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="43"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer::setMaxIterations</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="15"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>removed call to org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer::setConvergenceChecker</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>removed call to org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer::setInitialStepBoundFactor</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="16"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>4</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>removed call to org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer::setCostRelativeTolerance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>5</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>removed call to org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer::setParRelativeTolerance</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="43"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>6</block><killingTest /><description>removed call to org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer::setOrthoTolerance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>652</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>3</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>79</index><block>7</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>127</index><block>11</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>161</index><block>15</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>273</index><block>21</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>373</index><block>26</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>395</index><block>30</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>409</index><block>33</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>418</index><block>35</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>439</index><block>37</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>486</index><block>41</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>47</index><block>4</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>652</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>69</index><block>5</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>321</index><block>22</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>325</index><block>23</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>358</index><block>24</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>404</index><block>32</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>457</index><block>38</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>475</index><block>39</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>247</index><block>20</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>300</index><block>22</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>2</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>9</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>688</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>168</index><block>16</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>176</index><block>16</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackLinearRank1(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><block>16</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>179</index><block>17</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>185</index><block>17</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>196</index><block>18</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>204</index><block>18</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>205</index><block>18</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>207</index><block>19</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>213</index><block>19</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>224</index><block>20</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>229</index><block>20</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>230</index><block>20</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>238</index><block>20</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>241</index><block>20</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>242</index><block>20</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>251</index><block>20</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>254</index><block>20</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="12"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>255</index><block>20</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackOsborne2(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>267</index><block>20</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>287</index><block>22</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>292</index><block>22</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="14"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>293</index><block>22</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackKowalikOsborne(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>302</index><block>22</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>307</index><block>22</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>308</index><block>22</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackOsborne1(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>414</index><block>34</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>434</index><block>36</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>452</index><block>38</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>453</index><block>38</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>467</index><block>39</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>471</index><block>39</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>652</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>3</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>7</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><block>8</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><block>11</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>142</index><block>12</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>161</index><block>15</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackLinearRank1(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>273</index><block>21</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>373</index><block>26</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>726</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>381</index><block>27</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>726</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>385</index><block>28</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>395</index><block>30</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>409</index><block>33</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>418</index><block>35</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>439</index><block>37</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>486</index><block>41</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMDirection</mutatedMethod><methodDescription>([D[D[D[D)V</methodDescription><lineNumber>669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>108</index><block>9</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>removed call to java/util/Arrays::fill</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>4</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>59</index><block>7</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testTrivial(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>86</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>134</index><block>13</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>189</index><block>16</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>217</index><block>20</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>254</index><block>23</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>273</index><block>25</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>347</index><block>30</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="14"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>366</index><block>32</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackKowalikOsborne(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>461</index><block>44</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>492</index><block>50</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>534</index><block>54</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>594</index><block>58</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>602</index><block>60</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>606</index><block>61</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>618</index><block>64</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>652</index><block>67</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>687</index><block>69</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>727</index><block>73</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>762</index><block>75</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="16"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>776</index><block>78</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>24</index><block>2</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>48</index><block>5</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>109</index><block>10</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>120</index><block>11</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>169</index><block>14</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>240</index><block>21</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>294</index><block>26</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>325</index><block>27</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>384</index><block>33</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>404</index><block>34</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>512</index><block>51</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>569</index><block>55</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>642</index><block>65</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>709</index><block>70</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>713</index><block>71</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>747</index><block>74</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>796</index><block>82</block><killingTest /><description>Changed increment from -1 to 1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>6</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><block>8</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testOneSet(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>10</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>10</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testOneSet(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><block>14</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>164</index><block>14</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNoDependency(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><block>14</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>180</index><block>16</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testOneSet(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="29"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>187</index><block>16</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackOsborne1(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>235</index><block>21</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>236</index><block>21</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>289</index><block>26</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>290</index><block>26</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>302</index><block>27</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>307</index><block>27</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>320</index><block>27</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>321</index><block>27</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>332</index><block>28</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>333</index><block>28</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>379</index><block>33</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>380</index><block>33</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="14"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>392</index><block>34</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackKowalikOsborne(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>399</index><block>34</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackLinearRank1ZeroColsAndRows(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>400</index><block>34</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="14"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>415</index><block>36</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackKowalikOsborne(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>429</index><block>38</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>453</index><block>42</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>567</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>475</index><block>46</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackLinearRank1(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>508</index><block>51</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>579</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>551</index><block>55</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>564</index><block>55</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>565</index><block>55</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>584</index><block>57</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>592</index><block>58</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>636</index><block>65</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackHelicalValley(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>638</index><block>65</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>669</index><block>68</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>681</index><block>68</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>704</index><block>70</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>705</index><block>70</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackJennrichSampson(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>742</index><block>74</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackLinearRank1ZeroColsAndRows(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>743</index><block>74</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>754</index><block>75</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackLinearRank1(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>755</index><block>75</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackLinearRank1(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>791</index><block>81</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>4</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>7</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testTrivial(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>9</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><block>13</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>189</index><block>16</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>208</index><block>18</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackLinearRank1(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>217</index><block>20</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>254</index><block>23</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>273</index><block>25</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="11"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>347</index><block>30</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackBard(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="11"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>366</index><block>32</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackBard(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="11"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>422</index><block>36</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackBard(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>447</index><block>41</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>461</index><block>44</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>468</index><block>45</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>492</index><block>50</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>534</index><block>54</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>594</index><block>58</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="18"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>598</index><block>59</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>602</index><block>60</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>606</index><block>61</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>618</index><block>64</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackLinearRank1(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>652</index><block>67</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>687</index><block>69</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>727</index><block>73</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackLinearRank1(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>762</index><block>75</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="16"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>776</index><block>78</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>determineLMParameter</mutatedMethod><methodDescription>([DD[D[D[D[D)V</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>521</index><block>52</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>removed call to org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer::determineLMDirection</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>142</index><block>9</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>182</index><block>13</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>267</index><block>24</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>299</index><block>27</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>342</index><block>33</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>355</index><block>36</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>381</index><block>40</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>390</index><block>42</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>452</index><block>46</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>549</index><block>54</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>573</index><block>57</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>601</index><block>59</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>638</index><block>63</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>712</index><block>68</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>718</index><block>69</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>741</index><block>72</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="21"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>745</index><block>73</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="19"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>780</index><block>78</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>800</index><block>80</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>817</index><block>82</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>860</index><block>87</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testIllConditioned(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="41"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>921</index><block>96</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="19"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>926</index><block>97</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="19"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>930</index><block>98</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="41"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>938</index><block>99</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>949</index><block>102</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>953</index><block>103</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>957</index><block>104</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>980</index><block>108</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1001</index><block>112</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>164</index><block>10</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>225</index><block>16</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>318</index><block>28</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>334</index><block>32</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>371</index><block>38</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>409</index><block>43</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>506</index><block>47</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>620</index><block>60</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>624</index><block>61</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>653</index><block>64</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>839</index><block>83</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>879</index><block>88</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testIllConditioned(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>469</index><block>47</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>691</index><block>65</block><killingTest /><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="14"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>207</index><block>16</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>214</index><block>16</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>215</index><block>16</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentEquations(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>245</index><block>20</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="37"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>313</index><block>28</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackChebyquad(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>314</index><block>28</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="18"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>328</index><block>30</block><killingTest>org.apache.commons.math.optimization.fitting.HarmonicFitterTest.testNoError(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="18"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>329</index><block>30</block><killingTest>org.apache.commons.math.optimization.fitting.HarmonicFitterTest.testNoError(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>483</index><block>47</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>494</index><block>47</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNoDependency(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>501</index><block>47</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>502</index><block>47</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>546</index><block>54</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="12"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>555</index><block>55</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>562</index><block>55</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>563</index><block>55</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>615</index><block>60</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="42"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>616</index><block>60</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>648</index><block>64</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testOneSet(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>649</index><block>64</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="21"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>659</index><block>65</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackPowellSingular(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>665</index><block>65</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testIllConditioned(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="26"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>672</index><block>65</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="26"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>674</index><block>65</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>676</index><block>65</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>683</index><block>65</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>684</index><block>65</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>690</index><block>65</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>704</index><block>67</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>721</index><block>70</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>725</index><block>70</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>726</index><block>70</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>727</index><block>70</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="15"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>738</index><block>72</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackKowalikOsborne(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>756</index><block>75</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>758</index><block>76</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>766</index><block>76</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackJennrichSampson(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="21"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>785</index><block>79</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackPowellSingular(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="35"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>793</index><block>79</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackKowalikOsborne(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="14"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>827</index><block>83</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="14"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>834</index><block>83</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="14"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>835</index><block>83</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>936</index><block>99</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testIllConditioned(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="14"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>978</index><block>108</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>142</index><block>9</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>169</index><block>11</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="14"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>182</index><block>13</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>195</index><block>14</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>237</index><block>18</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>258</index><block>22</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>267</index><block>24</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>287</index><block>25</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>299</index><block>27</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>342</index><block>33</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>355</index><block>36</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>381</index><block>40</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>390</index><block>42</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testOneSet(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>452</index><block>46</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>516</index><block>49</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>549</index><block>54</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="21"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>573</index><block>57</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackPowellSingular(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>601</index><block>59</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>638</index><block>63</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>698</index><block>65</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>712</index><block>68</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>718</index><block>69</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>741</index><block>72</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>745</index><block>73</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="26"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>776</index><block>77</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>780</index><block>78</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>800</index><block>80</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="14"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>817</index><block>82</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>860</index><block>87</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>899</index><block>90</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>909</index><block>93</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>921</index><block>96</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>926</index><block>97</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>930</index><block>98</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="13"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>938</index><block>99</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="41"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>949</index><block>102</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackBrownAlmostLinear(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>953</index><block>103</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>957</index><block>104</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>980</index><block>108</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1001</index><block>112</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>92</index><block>1</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>removed call to org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer::updateResidualsAndCost</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="41"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>115</index><block>4</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackMeyer(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>removed call to org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer::incrementIterationsCounter</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>123</index><block>5</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>removed call to org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer::updateJacobian</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>127</index><block>6</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>removed call to org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer::qrDecomposition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>133</index><block>7</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>removed call to org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer::qTy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>439</index><block>44</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>removed call to org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer::determineLMParameter</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>526</index><block>52</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>removed call to org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer::updateResidualsAndCost</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>346</index><block>34</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>replaced return value with null for org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer::doOptimize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>913</index><block>94</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>replaced return value with null for org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer::doOptimize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/VectorialPointValuePair;</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>942</index><block>100</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testOneSet(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>replaced return value with null for org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer::doOptimize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qTy</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qTy</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>853</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>3</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qTy</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><block>6</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qTy</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>853</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>47</index><block>4</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qTy</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>85</index><block>7</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qTy</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>89</index><block>8</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qTy</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>4</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qTy</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>4</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qTy</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>5</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testOneSet(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qTy</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>7</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qTy</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>7</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qTy</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qTy</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>853</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>3</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qTy</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>6</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>776</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>779</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>3</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>72</index><block>8</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>792</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>89</index><block>10</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>103</index><block>12</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="42"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>162</index><block>22</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackBrownAlmostLinear(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="43"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>227</index><block>27</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="37"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>284</index><block>32</block><killingTest>org.apache.commons.math.optimization.general.MinpackTest.testMinpackBrownDennis(org.apache.commons.math.optimization.general.MinpackTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>298</index><block>34</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>341</index><block>37</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>776</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>62</index><block>6</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>792</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>173</index><block>24</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>372</index><block>39</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>376</index><block>40</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>230</index><block>29</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>4</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>4</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>796</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><block>13</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>796</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>13</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>243</index><block>31</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>244</index><block>31</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>245</index><block>31</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>271</index><block>31</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>278</index><block>31</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>280</index><block>31</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>316</index><block>35</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>319</index><block>35</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>320</index><block>35</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>832</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>330</index><block>36</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>834</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>352</index><block>38</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>834</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>363</index><block>38</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>834</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>364</index><block>38</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>776</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>779</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>3</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>8</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>792</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>10</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>103</index><block>12</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>132</index><block>15</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>135</index><block>17</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>162</index><block>22</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>180</index><block>25</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>227</index><block>27</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>284</index><block>32</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>298</index><block>34</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>qrDecomposition</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>341</index><block>37</block><killingTest>org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)</killingTest><description>negated conditional</description></mutation>
</mutations>