<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;I)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>55</index><block>10</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>7</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>3</block><killingTest>org.apache.commons.math.linear.ArrayRealVectorTest.testCombinePreconditionMixedType(org.apache.commons.math.linear.ArrayRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testOuterProduct(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>5</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testOuterProduct(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;D)V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;D)V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;D)V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>6</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>27</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>11</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>15</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>20</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>24</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>68</index><block>21</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>90</index><block>27</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>98</index><block>30</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>105</index><block>32</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::add</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>18</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::add</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>24</index><block>6</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::add</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::append</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>8</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>5</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>6</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>9</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>40</index><block>11</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::append</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>2</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::append</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>19</index><block>5</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::append</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>37</index><block>5</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::append</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::copy</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>21</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>21</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>7</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>11</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>16</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><block>17</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>77</index><block>22</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::dotProduct</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::dotProduct</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>18</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::dotProduct</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>12</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>6</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>7</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testConcurrentModification(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>12</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>46</index><block>14</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::ebeDivide</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>10</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>6</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testConcurrentModification(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>10</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>46</index><block>12</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::ebeDivide</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>12</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>6</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>7</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testConcurrentModification(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>12</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>46</index><block>14</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::ebeMultiply</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>10</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>6</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testConcurrentModification(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>10</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>46</index><block>12</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::ebeMultiply</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>806</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>809</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testSerial(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>813</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testSerial(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>8</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testSerial(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>20</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testSerial(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>27</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>832</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>117</index><block>34</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testSerial(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>822</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>63</index><block>14</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testSerial(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>101</index><block>28</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testSerial(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>807</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>9</index><block>1</block><killingTest /><description>replaced boolean return with false for org/apache/commons/math/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>128</index><block>37</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testSerial(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>810</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>18</index><block>3</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>814</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>34</index><block>5</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>48</index><block>9</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>83</index><block>21</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>121</index><block>35</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>34</index><block>8</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::getData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.linear.ArrayRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math.linear.ArrayRealVectorTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/linear/OpenMapRealVector::getDimension</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>8</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>8</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>8</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>19</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>19</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>17</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>14</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>92</index><block>22</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getDistance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>18</index><block>4</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getDistance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>25</index><block>7</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getDistance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>47</index><block>6</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getDistance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntries</mutatedMethod><methodDescription>()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::getEntries</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math.linear.ArrayRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math.linear.ArrayRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>8</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>9</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>22</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>14</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>18</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><block>15</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>86</index><block>24</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getL1Distance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>18</index><block>4</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getL1Distance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>25</index><block>7</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getL1Distance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>5</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>44</index><block>6</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getL1Distance</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>77</index><block>22</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>8</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>9</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>16</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>20</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>22</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>17</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)D</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>89</index><block>26</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getLInfDistance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>567</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>18</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getLInfDistance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>25</index><block>7</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getLInfDistance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>579</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>5</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>48</index><block>8</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getLInfDistance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSparsity</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>845</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>2</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSparsity</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>845</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>11</index><block>2</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/linear/OpenMapRealVector::getSparsity</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>10</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>1</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>11</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>6</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>9</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>10</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>1</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>7</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><block>12</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>71</index><block>14</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::getSubVector</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>1</block><killingTest /><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>1</block><killingTest /><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>1</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>1</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>788</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>1</block><killingTest /><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>788</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>1</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>8</block><killingTest /><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>8</block><killingTest /><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>8</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>8</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>790</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>791</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>5</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testMisc(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>75</index><block>9</block><killingTest /><description>replaced int return with 0 for org/apache/commons/math/linear/OpenMapRealVector::hashCode</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="13"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.math.linear.ArrayRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math.linear.ArrayRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>14</index><block>4</block><killingTest>org.apache.commons.math.linear.ArrayRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math.linear.ArrayRealVectorTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::isDefaultValue</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>7</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>10</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>49</index><block>13</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math/linear/OpenMapRealVector::isInfinite</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>33</index><block>8</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::isInfinite</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>49</index><block>13</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::isInfinite</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>609</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>7</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>25</index><block>8</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math/linear/OpenMapRealVector::isNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>29</index><block>9</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/linear/OpenMapRealVector::isNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAdd</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::mapAdd</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>22</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>27</index><block>5</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::mapAddToSelf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>61</index><block>11</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>10</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>5</block><killingTest /><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>10</block><killingTest /><description>removed call to org/apache/commons/math/linear/RealMatrix::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>outerProduct</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/RealMatrix;</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>69</index><block>13</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::outerProduct</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>651</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>650</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>651</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>18</index><block>5</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::projection</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>16</index><block>3</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::projection</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math.linear.ArrayRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math.linear.ArrayRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>666</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>6</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>663</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>2</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math/linear/RealVector;)V</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setSubVector</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>684</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>1</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>684</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(I[D)V</methodDescription><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>4</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>sparseIterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>851</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testOuterProduct(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::sparseIterator</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>58</index><block>17</block><killingTest /><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>14</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>7</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>11</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>8</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>14</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>17</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>66</index><block>19</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::subtract</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>726</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>18</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::subtract</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>25</index><block>7</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::subtract</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>51</index><block>9</block><killingTest /><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>7</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>3</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>5</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>7</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>9</block><killingTest /><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>([D)Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>60</index><block>11</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::subtract</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>772</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTest /><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::toArray</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitVector</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>751</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/linear/OpenMapRealVector::unitize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitVector</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/OpenMapRealVector;</methodDescription><lineNumber>752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>13</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math/linear/OpenMapRealVector::unitVector</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>12</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>759</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>8</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>9</block><killingTest>org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
</mutations>