<mutations>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="40"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testAddAndCheck(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testAddAndCheck(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testAddAndCheck(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testAddAndCheck(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>40</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testAddAndCheck(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::addAndCheck</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testAddAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::addAndCheck</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLorg/apache/commons/math/exception/util/Localizable;)J</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLorg/apache/commons/math/exception/util/Localizable;)J</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLorg/apache/commons/math/exception/util/Localizable;)J</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLorg/apache/commons/math/exception/util/Localizable;)J</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testAddAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLorg/apache/commons/math/exception/util/Localizable;)J</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>76</index><block>12</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLorg/apache/commons/math/exception/util/Localizable;)J</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testAddAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLorg/apache/commons/math/exception/util/Localizable;)J</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testAddAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLorg/apache/commons/math/exception/util/Localizable;)J</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>11</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLorg/apache/commons/math/exception/util/Localizable;)J</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>12</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLorg/apache/commons/math/exception/util/Localizable;)J</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>13</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLorg/apache/commons/math/exception/util/Localizable;)J</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLorg/apache/commons/math/exception/util/Localizable;)J</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLorg/apache/commons/math/exception/util/Localizable;)J</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLorg/apache/commons/math/exception/util/Localizable;)J</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLorg/apache/commons/math/exception/util/Localizable;)J</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>12</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLorg/apache/commons/math/exception/util/Localizable;)J</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>105</index><block>18</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::addAndCheck</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="11"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>10</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>71</index><block>12</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>95</index><block>15</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>111</index><block>17</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>158</index><block>22</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>84</index><block>13</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>87</index><block>13</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>135</index><block>19</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>138</index><block>19</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>182</index><block>25</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>185</index><block>25</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="11"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>5</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="11"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>7</block><killingTest /><description>Replaced integer division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>11</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>11</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><block>13</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>13</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><block>16</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><block>16</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>19</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><block>19</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><block>19</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><block>19</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>147</index><block>21</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>149</index><block>21</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>172</index><block>24</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>173</index><block>24</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><block>24</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>10</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>12</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>15</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>111</index><block>17</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>158</index><block>22</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::checkBinomial</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.test0Choose0(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::binomialCoefficient</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>31</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::binomialCoefficient</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>46</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::binomialCoefficient</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>190</index><block>26</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::binomialCoefficient</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="7"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>10</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>70</index><block>14</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>87</index><block>15</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="7"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>5</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="7"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>7</block><killingTest /><description>Replaced integer division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>15</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>15</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>15</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>15</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>16</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>10</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>14</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::checkBinomial</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.test0Choose0(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::binomialCoefficientDouble</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>31</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::binomialCoefficientDouble</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>46</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::binomialCoefficientDouble</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>58</index><block>12</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::binomialCoefficientDouble</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>95</index><block>17</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::binomialCoefficientDouble</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="8"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>8</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>12</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>64</index><block>16</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>88</index><block>20</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>108</index><block>24</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>99</index><block>22</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>119</index><block>26</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="8"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>5</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>16</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>17</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>19</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>19</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>22</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>115</index><block>26</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>8</block><killingTest>org.apache.commons.math.distribution.HypergeometricDistributionTest.testMoreLargeValues(org.apache.commons.math.distribution.HypergeometricDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>12</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>16</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>20</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>24</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::checkBinomial</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>32</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::binomialCoefficientLog</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>45</index><block>11</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::binomialCoefficientLog</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>57</index><block>15</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::binomialCoefficientLog</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>72</index><block>18</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::binomialCoefficientLog</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>124</index><block>27</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::binomialCoefficientLog</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkBinomial</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.test0Choose0(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkBinomial</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.test0Choose0(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkBinomial</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.test0Choose0(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkBinomial</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.test0Choose0(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="9"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>1869</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest.testIllegalArguments(org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::checkOrder</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V</methodDescription><lineNumber>1826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCheckOrder(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V</methodDescription><lineNumber>1830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCheckOrder(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V</methodDescription><lineNumber>1834</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCheckOrder(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V</methodDescription><lineNumber>1841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>72</index><block>10</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCheckOrder(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V</methodDescription><lineNumber>1845</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>85</index><block>12</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCheckOrder(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V</methodDescription><lineNumber>1826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>124</index><block>21</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCheckOrder(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V</methodDescription><lineNumber>1826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCheckOrder(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V</methodDescription><lineNumber>1829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCheckOrder(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V</methodDescription><lineNumber>1830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCheckOrder(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V</methodDescription><lineNumber>1834</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCheckOrder(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V</methodDescription><lineNumber>1840</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCheckOrder(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V</methodDescription><lineNumber>1841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>10</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCheckOrder(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V</methodDescription><lineNumber>1845</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>12</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCheckOrder(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V</methodDescription><lineNumber>1855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><block>16</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCheckOrder(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCompareTo(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCompareTo(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCompareTo(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::compareTo</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>25</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCompareTo(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::compareTo</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCosh(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCosh(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCosh(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCosh(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::cosh</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL2DistanceDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>1751</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL2DistanceDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL2DistanceDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL2DistanceDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL2DistanceDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>1754</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>40</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL2DistanceDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::distance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([I[I)D</methodDescription><lineNumber>1766</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL2DistanceInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([I[I)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>2</block><killingTest>org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest.testDistance(org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([I[I)D</methodDescription><lineNumber>1768</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL2DistanceInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([I[I)D</methodDescription><lineNumber>1768</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL2DistanceInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([I[I)D</methodDescription><lineNumber>1766</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL2DistanceInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([I[I)D</methodDescription><lineNumber>1770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>41</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL2DistanceInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::distance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>1720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL1DistanceDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>1721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL1DistanceDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>1721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL1DistanceDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>1720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL1DistanceDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>1723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>34</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL1DistanceDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::distance1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>1735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL1DistanceInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>1735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>29</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL1DistanceInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>1736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>2</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>1736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL1DistanceInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>1735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL1DistanceInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>1738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>34</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testL1DistanceInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::distance1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>1782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLInfDistanceDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>1783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>2</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>1782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLInfDistanceDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>1785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>34</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLInfDistanceDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::distanceInf</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>1797</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLInfDistanceInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>1797</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>29</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLInfDistanceInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>1798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>2</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>1797</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLInfDistanceInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>1800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>34</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLInfDistanceInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::distanceInf</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math/util/MathUtils::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/util/MathUtils::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsWithAllowedDelta(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCompareTo(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCompareTo(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCompareTo(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>21</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCompareTo(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/util/MathUtils::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="107"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>58</index><block>12</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>10</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>11</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>12</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCompareTo(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>15</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCompareTo(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>17</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>19</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>80</index><block>22</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testCompareTo(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/util/MathUtils::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>15</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>12</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>15</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>17</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>72</index><block>20</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math/util/MathUtils::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>30</index><block>11</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/util/MathUtils::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>41</index><block>13</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/util/MathUtils::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>64</index><block>18</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/util/MathUtils::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>21</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/util/MathUtils::equalsIncludingNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedDelta(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedDelta(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedDelta(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedDelta(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>20</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedDelta(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/util/MathUtils::equalsIncludingNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>21</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testEqualsIncludingNaNWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/util/MathUtils::equalsIncludingNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>15</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>12</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>15</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>17</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>72</index><block>20</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math/util/MathUtils::equalsIncludingNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>30</index><block>11</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/util/MathUtils::equalsIncludingNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>41</index><block>13</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/util/MathUtils::equalsIncludingNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>64</index><block>18</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math/util/MathUtils::equalsIncludingNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>34</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::factorial</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>9</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>27</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::factorialDouble</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>36</index><block>10</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorialFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::factorialDouble</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>652</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorialFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>652</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>51</index><block>11</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>11</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorialFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorialFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>652</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorialFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>649</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>28</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::factorialLog</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>655</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>56</index><block>12</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testFactorialFail(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::factorialLog</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="189"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>11</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="189"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><block>13</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="25"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>82</index><block>18</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="189"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>153</index><block>31</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>97</index><block>19</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>55</index><block>12</block><killingTest /><description>removed negation</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>64</index><block>14</block><killingTest /><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>134</index><block>27</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>157</index><block>32</block><killingTest /><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>179</index><block>35</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>10</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>16</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>17</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>19</block><killingTest /><description>Replaced integer division with multiplication</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>19</block><killingTest /><description>Replaced integer division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>25</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><block>27</block><killingTest /><description>Replaced integer division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>141</index><block>29</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>147</index><block>30</block><killingTest /><description>Replaced integer division with multiplication</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>168</index><block>34</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>170</index><block>34</block><killingTest /><description>Replaced integer division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>182</index><block>35</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>183</index><block>35</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>11</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><block>16</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>17</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>18</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>103</index><block>20</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><block>25</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>142</index><block>29</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>153</index><block>31</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>175</index><block>34</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>47</index><block>10</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::gcd</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>184</index><block>35</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcd(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::gcd</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>792</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>59</index><block>11</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>70</index><block>13</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>96</index><block>18</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>172</index><block>31</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>111</index><block>19</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>63</index><block>12</block><killingTest /><description>removed negation</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>796</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>74</index><block>14</block><killingTest /><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>813</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>149</index><block>27</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>176</index><block>32</block><killingTest /><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>200</index><block>35</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>10</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>16</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>17</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>802</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><block>19</block><killingTest /><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>107</index><block>19</block><killingTest /><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>813</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><block>25</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>813</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>148</index><block>27</block><killingTest /><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>156</index><block>29</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>164</index><block>30</block><killingTest /><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>187</index><block>34</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>189</index><block>34</block><killingTest /><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>203</index><block>35</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>204</index><block>35</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>779</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>779</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>792</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>11</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><block>16</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>17</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><block>18</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>806</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>117</index><block>20</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>813</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>142</index><block>25</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><block>29</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>172</index><block>31</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>832</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>196</index><block>34</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>53</index><block>10</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::gcd</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>205</index><block>35</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testGcdLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::gcd</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>hash</mutatedMethod><methodDescription>(D)I</methodDescription><lineNumber>843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testHash(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::hash</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>hash</mutatedMethod><methodDescription>([D)I</methodDescription><lineNumber>854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testArrayHash(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::hash</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(B)B</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorByte(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(B)B</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorByte(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(B)B</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>10</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorByte(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced byte return with 0 for org/apache/commons/math/util/MathUtils::indicator</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>880</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>880</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::indicator</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>880</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>21</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::indicator</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(F)F</methodDescription><lineNumber>894</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(F)F</methodDescription><lineNumber>891</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(F)F</methodDescription><lineNumber>894</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(F)F</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>9</index><block>2</block><killingTest /><description>replaced float return with 0.0f for org/apache/commons/math/util/MathUtils::indicator</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(F)F</methodDescription><lineNumber>894</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>21</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced float return with 0.0f for org/apache/commons/math/util/MathUtils::indicator</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>10</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::indicator</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>12</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::indicator</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorShort(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorShort(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>indicator</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>10</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testIndicatorShort(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced short return with 0 for org/apache/commons/math/util/MathUtils::indicator</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>lcm</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLcm(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>lcm</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>952</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLcm(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>lcm</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>952</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLcm(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>lcm</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>956</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLcm(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>lcm</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>961</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>47</index><block>11</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLcm(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::lcm</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>lcm</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>990</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLcmLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>lcm</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>987</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLcmLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>lcm</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>987</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLcmLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>lcm</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>991</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLcmLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>lcm</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>52</index><block>11</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLcmLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::lcm</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1016</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLog(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1016</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLog(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::log</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1031</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>0</block><killingTest>org.apache.commons.math.fraction.FractionTest.testMultiply(org.apache.commons.math.fraction.FractionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1031</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheck(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1030</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheck(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1031</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheck(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1031</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheck(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1034</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>30</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheck(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::mulAndCheck</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1050</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1055</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1062</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>59</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1064</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>67</index><block>10</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>94</index><block>15</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1079</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>102</index><block>16</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>5</block><killingTest /><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1058</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLcmLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1064</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>10</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1065</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>11</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1079</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><block>16</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testLcmLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1080</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>107</index><block>17</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1050</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1055</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1062</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1064</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>10</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><block>15</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1079</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>16</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>mulAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1089</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>125</index><block>21</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::mulAndCheck</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeAngle</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeAngle(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeAngle</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeAngle(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeAngle</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeAngle(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeAngle</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeAngle(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeAngle</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeAngle(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeAngle</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeAngle(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::normalizeAngle</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>112</index><block>24</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>90</index><block>19</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>141</index><block>29</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>18</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><block>28</block><killingTest>org.apache.commons.math.stat.descriptive.moment.VarianceTest.testWeightedVariance(org.apache.commons.math.stat.descriptive.moment.VarianceTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><block>28</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>11</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>17</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>20</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>24</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><block>26</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>146</index><block>30</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced return value with null for org/apache/commons/math/util/MathUtils::normalizeArray</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>7</block><killingTest /><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>62</index><block>10</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::pow</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(IJ)I</methodDescription><lineNumber>1551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(IJ)I</methodDescription><lineNumber>1560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>7</block><killingTest /><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(IJ)I</methodDescription><lineNumber>1561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(IJ)I</methodDescription><lineNumber>1563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(IJ)I</methodDescription><lineNumber>1564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(IJ)I</methodDescription><lineNumber>1551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(IJ)I</methodDescription><lineNumber>1559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(IJ)I</methodDescription><lineNumber>1560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(IJ)I</methodDescription><lineNumber>1567</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>68</index><block>10</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::pow</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>1581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>1590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>7</block><killingTest /><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>1591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>1593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>1594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>1581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>1589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>1590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>1597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>62</index><block>10</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::pow</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>7</block><killingTest /><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>9</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>68</index><block>10</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::pow</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Ljava/math/BigInteger;I)Ljava/math/BigInteger;</methodDescription><lineNumber>1641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Ljava/math/BigInteger;I)Ljava/math/BigInteger;</methodDescription><lineNumber>1641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Ljava/math/BigInteger;I)Ljava/math/BigInteger;</methodDescription><lineNumber>1647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>26</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced return value with null for org/apache/commons/math/util/MathUtils::pow</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Ljava/math/BigInteger;J)Ljava/math/BigInteger;</methodDescription><lineNumber>1661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Ljava/math/BigInteger;J)Ljava/math/BigInteger;</methodDescription><lineNumber>1670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Ljava/math/BigInteger;J)Ljava/math/BigInteger;</methodDescription><lineNumber>1674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>10</block><killingTest /><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Ljava/math/BigInteger;J)Ljava/math/BigInteger;</methodDescription><lineNumber>1661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Ljava/math/BigInteger;J)Ljava/math/BigInteger;</methodDescription><lineNumber>1669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Ljava/math/BigInteger;J)Ljava/math/BigInteger;</methodDescription><lineNumber>1670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Ljava/math/BigInteger;J)Ljava/math/BigInteger;</methodDescription><lineNumber>1677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>67</index><block>11</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced return value with null for org/apache/commons/math/util/MathUtils::pow</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>1691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>1691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>1699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>1700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>1707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>64</index><block>14</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testPow(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced return value with null for org/apache/commons/math/util/MathUtils::pow</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(DI)D</methodDescription><lineNumber>1208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::round</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(DII)D</methodDescription><lineNumber>1230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(DII)D</methodDescription><lineNumber>1225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>13</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::round</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(DII)D</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>25</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::round</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(DII)D</methodDescription><lineNumber>1233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>29</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::round</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(FI)F</methodDescription><lineNumber>1248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced float return with 0.0f for org/apache/commons/math/util/MathUtils::round</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(FII)F</methodDescription><lineNumber>1265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>2</block><killingTest /><description>Replaced float multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(FII)F</methodDescription><lineNumber>1266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced float multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(FII)F</methodDescription><lineNumber>1266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced float division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(FII)F</methodDescription><lineNumber>1266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>29</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced float return with 0.0f for org/apache/commons/math/util/MathUtils::round</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>81</index><block>20</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>108</index><block>26</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>120</index><block>29</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>172</index><block>42</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>20</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><block>26</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>132</index><block>33</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><block>34</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><block>42</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>11</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>20</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>26</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><block>29</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><block>35</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>172</index><block>42</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>193</index><block>48</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>roundUnscaled</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>1359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>298</index><block>65</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testRoundFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::roundUnscaled</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1941</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1944</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>72</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1945</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>78</index><block>6</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1954</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>124</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>224</index><block>21</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1940</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>0</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>7</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>7</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>7</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>7</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1950</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><block>8</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>113</index><block>8</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>114</index><block>8</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><block>10</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1956</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><block>10</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1956</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>138</index><block>10</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1956</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><block>10</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>158</index><block>12</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1961</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><block>12</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1961</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>166</index><block>12</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1966</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>176</index><block>13</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1966</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><block>13</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>195</index><block>16</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>197</index><block>16</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>198</index><block>16</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>200</index><block>17</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>215</index><block>20</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>231</index><block>22</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>234</index><block>22</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>235</index><block>22</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>236</index><block>22</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>237</index><block>22</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>247</index><block>24</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>250</index><block>24</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>251</index><block>24</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>252</index><block>24</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1941</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1944</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1945</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1954</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>153</index><block>11</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>188</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>209</index><block>18</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>224</index><block>21</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>1983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>258</index><block>26</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::safeNorm</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>scalb</mutatedMethod><methodDescription>(DI)D</methodDescription><lineNumber>1110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testScalb(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>scalb</mutatedMethod><methodDescription>(DI)D</methodDescription><lineNumber>1111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testScalb(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>scalb</mutatedMethod><methodDescription>(DI)D</methodDescription><lineNumber>1114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testScalb(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>scalb</mutatedMethod><methodDescription>(DI)D</methodDescription><lineNumber>1114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testScalb(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>scalb</mutatedMethod><methodDescription>(DI)D</methodDescription><lineNumber>1114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testScalb(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>scalb</mutatedMethod><methodDescription>(DI)D</methodDescription><lineNumber>1104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testScalb(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>scalb</mutatedMethod><methodDescription>(DI)D</methodDescription><lineNumber>1104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testScalb(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>scalb</mutatedMethod><methodDescription>(DI)D</methodDescription><lineNumber>1104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>4</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testScalb(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>scalb</mutatedMethod><methodDescription>(DI)D</methodDescription><lineNumber>1105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>16</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testScalb(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::scalb</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>scalb</mutatedMethod><methodDescription>(DI)D</methodDescription><lineNumber>1115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>49</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testScalb(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::scalb</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(B)B</methodDescription><lineNumber>1373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(B)B</methodDescription><lineNumber>1373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignByte(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(B)B</methodDescription><lineNumber>1373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignByte(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(B)B</methodDescription><lineNumber>1373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>15</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignByte(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced byte return with 0 for org/apache/commons/math/util/MathUtils::sign</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="7"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::sign</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>28</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignDouble(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::sign</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(F)F</methodDescription><lineNumber>1410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(F)F</methodDescription><lineNumber>1407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(F)F</methodDescription><lineNumber>1410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(F)F</methodDescription><lineNumber>1410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(F)F</methodDescription><lineNumber>1408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced float return with 0.0f for org/apache/commons/math/util/MathUtils::sign</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(F)F</methodDescription><lineNumber>1410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>28</index><block>8</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignFloat(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced float return with 0.0f for org/apache/commons/math/util/MathUtils::sign</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>15</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignInt(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::sign</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>1438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>1438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>1438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>1438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>19</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::sign</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>1453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>2</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>1453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignShort(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>1453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignShort(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sign</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>1453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>15</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSignShort(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced short return with 0 for org/apache/commons/math/util/MathUtils::sign</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSinh(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSinh(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSinh(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSinh(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::sinh</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>subAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>subAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheck(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>subAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheck(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>subAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheck(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>subAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheck(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>subAndCheck</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>1482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>40</index><block>6</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheck(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::subAndCheck</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>subAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>subAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>36</index><block>5</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>subAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>2</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>subAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>0</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>subAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>1</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>subAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>1508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>43</index><block>7</block><killingTest>org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)</killingTest><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::subAndCheck</description></mutation>
</mutations>