<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>removed call to org/apache/commons/math/distribution/FDistributionImpl::setNumeratorDegreesOfFreedom</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>removed call to org/apache/commons/math/distribution/FDistributionImpl::setDenominatorDegreesOfFreedom</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="6"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>4</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>4</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>4</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>4</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>4</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>4</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>47</index><block>6</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/distribution/FDistributionImpl::cumulativeProbability</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>getDenominatorDegreesOfFreedom</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/distribution/FDistributionImpl::getDenominatorDegreesOfFreedom</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>getDomainUpperBound</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/distribution/FDistributionImpl::getDomainUpperBound</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>getInitialDomain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>getInitialDomain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>2</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>getInitialDomain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>2</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>getInitialDomain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>getInitialDomain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>28</index><block>3</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math/distribution/FDistributionImpl::getInitialDomain</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>getNumeratorDegreesOfFreedom</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/distribution/FDistributionImpl::getNumeratorDegreesOfFreedom</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>inverseCumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>inverseCumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>inverseCumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>21</index><block>3</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/distribution/FDistributionImpl::inverseCumulativeProbability</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>inverseCumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>28</index><block>5</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/distribution/FDistributionImpl::inverseCumulativeProbability</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>setDenominatorDegreesOfFreedom</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>setDenominatorDegreesOfFreedom</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>setNumeratorDegreesOfFreedom</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>FDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.FDistributionImpl</mutatedClass><mutatedMethod>setNumeratorDegreesOfFreedom</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.FDistributionTest)</killingTest><description>negated conditional</description></mutation>
</mutations>