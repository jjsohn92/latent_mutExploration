<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>5</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>7</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>9</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>9</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>81</index><block>14</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::initialize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>158</index><block>33</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>227</index><block>48</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>246</index><block>52</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>279</index><block>59</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>285</index><block>60</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>4</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><block>22</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>26</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>138</index><block>29</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><block>36</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>197</index><block>41</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>209</index><block>44</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>228</index><block>48</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>247</index><block>52</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>268</index><block>58</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>280</index><block>59</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>5</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>8</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>11</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>14</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>22</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>129</index><block>27</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>158</index><block>33</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>188</index><block>39</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>218</index><block>46</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>237</index><block>50</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>255</index><block>54</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>259</index><block>56</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>102</index><block>21</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::copyArray</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>183</index><block>38</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::copyArray</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>290</index><block>61</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced return value with null for org/apache/commons/math/optimization/linear/SimplexTableau::createTableau</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>5</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="10"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>7</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>67</index><block>9</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>87</index><block>12</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>4</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>7</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>8</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>8</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>10</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>10</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>5</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>7</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>4</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>4</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>removed call to org/apache/commons/math/linear/RealMatrix::setEntry</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>4</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>5</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>6</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>7</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>8</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>10</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>12</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>14</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>9</index><block>1</block><killingTest /><description>replaced boolean return with false for org/apache/commons/math/optimization/linear/SimplexTableau::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>17</index><block>3</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/optimization/linear/SimplexTableau::equals</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>74</index><block>17</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/optimization/linear/SimplexTableau::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>81</index><block>18</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math/optimization/linear/SimplexTableau::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getArtificialVariableOffset</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>6</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>7</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>39</index><block>10</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>replaced Integer return value with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getBasicRow</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>47</index><block>12</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced Integer return value with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getBasicRow</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>27</index><block>7</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>6</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>34</index><block>9</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getConstraintTypeCounts</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced return value with null for org/apache/commons/math/optimization/linear/SimplexTableau::getData</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getHeight</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoeffiecientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoeffiecientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>33</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoeffiecientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoeffiecientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoeffiecientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;)D</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>38</index><block>4</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/optimization/linear/SimplexTableau::getInvertedCoeffiecientSum</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>35</index><block>9</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced return value with Collections.emptyList for org/apache/commons/math/optimization/linear/SimplexTableau::getNormalizedConstraints</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumArtificialVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getNumArtificialVariables</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getNumDecisionVariables</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>11</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumSlackVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest /><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getNumSlackVariables</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getNumVariables</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getOriginalNumDecisionVariables</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getRhsOffset</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getSlackVariableOffset</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>11</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>13</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>26</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>11</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>15</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>18</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>23</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>115</index><block>30</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>replaced return value with null for org/apache/commons/math/optimization/linear/SimplexTableau::getSolution</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getWidth</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>2</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>2</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>2</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>4</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>5</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>6</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>7</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>33</index><block>7</block><killingTest /><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::hashCode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>29</index><block>6</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="12"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>5</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::subtractRow</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>7</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>24</index><block>8</block><killingTest /><description>replaced return value with null for org/apache/commons/math/optimization/linear/SimplexTableau::normalize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>36</index><block>13</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>replaced return value with null for org/apache/commons/math/optimization/linear/SimplexTableau::normalize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>readObject</mutatedMethod><methodDescription>(Ljava/io/ObjectInputStream;)V</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to java/io/ObjectInputStream::defaultReadObject</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>readObject</mutatedMethod><methodDescription>(Ljava/io/ObjectInputStream;)V</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/linear/MatrixUtils::deserializeRealMatrix</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math/linear/RealMatrix::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testdiscardArtificialVariables(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>5</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>5</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>5</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/linear/RealMatrix::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>writeObject</mutatedMethod><methodDescription>(Ljava/io/ObjectOutputStream;)V</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to java/io/ObjectOutputStream::defaultWriteObject</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>writeObject</mutatedMethod><methodDescription>(Ljava/io/ObjectOutputStream;)V</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.math.optimization.linear.SimplexTableauTest.testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)</killingTest><description>removed call to org/apache/commons/math/linear/MatrixUtils::serializeRealMatrix</description></mutation>
</mutations>