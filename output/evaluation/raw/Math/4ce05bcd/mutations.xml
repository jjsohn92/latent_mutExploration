<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>1</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testGetMean(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>removed call to org/apache/commons/math/distribution/NormalDistributionImpl::setMean</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>2</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testGetStandardDeviation(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>removed call to org/apache/commons/math/distribution/NormalDistributionImpl::setStandardDeviation</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>1</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>2</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>3</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>3</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>5</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>5</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>3</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>5</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/distribution/NormalDistributionImpl::cumulativeProbability</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>56</index><block>6</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/distribution/NormalDistributionImpl::cumulativeProbability</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>getDomainLowerBound</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>getDomainLowerBound</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>getDomainLowerBound</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>23</index><block>4</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/distribution/NormalDistributionImpl::getDomainLowerBound</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>getDomainUpperBound</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>getDomainUpperBound</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>getDomainUpperBound</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>23</index><block>4</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/distribution/NormalDistributionImpl::getDomainUpperBound</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>getInitialDomain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>getInitialDomain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>getInitialDomain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>3</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>getInitialDomain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>7</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>getInitialDomain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>getInitialDomain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>getInitialDomain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>44</index><block>10</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/distribution/NormalDistributionImpl::getInitialDomain</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>getMean</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testGetMean(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/distribution/NormalDistributionImpl::getMean</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>getStandardDeviation</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testGetStandardDeviation(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/distribution/NormalDistributionImpl::getStandardDeviation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>inverseCumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testIllegalArguments(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>inverseCumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testIllegalArguments(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>inverseCumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/distribution/NormalDistributionImpl::inverseCumulativeProbability</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>inverseCumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>21</index><block>3</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/distribution/NormalDistributionImpl::inverseCumulativeProbability</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>inverseCumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>28</index><block>5</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/distribution/NormalDistributionImpl::inverseCumulativeProbability</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="9"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviation</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviation</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math.distribution.NormalDistributionTest.testGetStandardDeviation(org.apache.commons.math.distribution.NormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
</mutations>