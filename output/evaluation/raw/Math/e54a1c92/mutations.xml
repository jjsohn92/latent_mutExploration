<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="8"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testConstructorNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAbsNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="27"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>7</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAbsInfinite(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="18"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>9</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="18"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>11</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="29"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>7</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>11</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAbs(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>12</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAbs(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>12</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAbs(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>13</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAbs(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>17</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_normal_thirdRoot(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>18</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>18</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_normal_thirdRoot(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>19</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_normal_thirdRoot(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAbs(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAbs(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="29"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>7</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>8</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAbs(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>14</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testLogZero(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAbsNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/complex/Complex::abs</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>18</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAbsInfinite(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/complex/Complex::abs</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>41</index><block>10</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math3/complex/Complex::abs</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>62</index><block>13</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAbs(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/complex/Complex::abs</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="7"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>75</index><block>16</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math3/complex/Complex::abs</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>96</index><block>19</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/complex/Complex::abs</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAcos(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAcosNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::acos</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>22</index><block>8</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAcosInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::acos</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarAdd(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarAdd(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarAdd(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarAddNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::add</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>23</index><block>5</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarAdd(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::add</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>5</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAdd(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>6</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAdd(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAdd(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAddNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="17"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math3/util/MathUtils::checkNotNull</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAddNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::add</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>31</index><block>7</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAdd(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::add</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAsin(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAsinNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::asin</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>22</index><block>8</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAsin(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::asin</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAtan(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAtanNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::atan</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>27</index><block>9</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAtanInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::atan</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testConjugate(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testConjugate(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testConjugateNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::conjugate</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testConjugate(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::conjugate</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>23</index><block>5</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testCosInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testCosInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>6</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testCosInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testCosInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testCosNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::cos</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>7</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testCosInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::cos</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testCosh(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>6</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testCosh(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>698</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testCoshInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testCoshNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::cosh</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>28</index><block>7</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testCoshInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::cosh</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::createComplex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>13</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>13</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarDivideZero(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>7</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>9</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarDivideInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarDivideNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::divide</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>22</index><block>5</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarDivideZero(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::divide</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>38</index><block>12</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarDivideInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::divide</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>51</index><block>14</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::divide</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="15"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><block>16</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>17</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>17</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>17</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>17</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>17</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>17</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>17</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>17</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>17</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><block>19</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAtan(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>19</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivideNaNInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><block>19</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivideNaNInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>118</index><block>19</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivideNaNInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><block>19</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><block>19</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><block>19</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivideNaNInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><block>19</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAtan(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>132</index><block>19</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>6</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivideNaNInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>7</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivideImaginary(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>10</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>12</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarDivideInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>16</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivideImaginary(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="20"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math3/util/MathUtils::checkNotNull</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivideNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::divide</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>40</index><block>8</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivideZero(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::divide</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>52</index><block>13</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarDivideInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::divide</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>97</index><block>18</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivide(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::divide</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>134</index><block>20</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testDivideNaNInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::divide</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testEqualsClass(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testEqualsClass(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testEqualsNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>5</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>6</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testEqualsImaginaryDifference(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testEqualsSame(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math3/complex/Complex::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>29</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testEqualsNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math3/complex/Complex::equals</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>29</index><block>4</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math3/complex/Complex::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>49</index><block>9</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testEqualsImaginaryDifference(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/complex/Complex::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>53</index><block>10</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testEqualsClass(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/complex/Complex::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testExp(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>5</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testExp(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testExpInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testPowNaNBase(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::exp</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>30</index><block>6</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testExpInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::exp</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>getArgument</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>1104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>8</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testGetArgument(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/complex/Complex::getArgument</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/ComplexField;</methodDescription><lineNumber>1222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>4</index><block>1</block><killingTest /><description>replaced return value with null for org/apache/commons/math3/complex/Complex::getField</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testConstructor(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/complex/Complex::getImaginary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testConstructor(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/complex/Complex::getReal</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testHashCode(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>4</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testHashCode(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testHashCode(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>9</index><block>1</block><killingTest /><description>replaced int return with 0 for org/apache/commons/math3/complex/Complex::hashCode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>23</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testHashCode(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math3/complex/Complex::hashCode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAbsInfinite(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math3/complex/Complex::isInfinite</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAbs(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/complex/Complex::isInfinite</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testAsinNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math3/complex/Complex::isNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testConstructorNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/complex/Complex::isNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>784</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testLogInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testLogNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::log</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>788</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>22</index><block>6</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testLogInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::log</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>11</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarMultiply(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>11</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarMultiply(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarMultiplyInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarMultiplyInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>5</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarMultiply(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>7</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarMultiply(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>9</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarMultiplyInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarPowNaNExponent(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::multiply</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>10</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarMultiplyInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::multiply</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>42</index><block>12</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarMultiply(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::multiply</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>7</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarMultiply(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>7</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarMultiply(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testMultiplyNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarMultiply(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>5</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarMultiply(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testMultiplyNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::multiply</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>23</index><block>6</block><killingTest /><description>replaced return value with null for org/apache/commons/math3/complex/Complex::multiply</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>38</index><block>8</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarMultiply(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::multiply</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>13</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testMultiply(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>13</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testMath221(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>13</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testMultiply(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>13</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testMath221(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>13</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testMultiply(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>13</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testMath221(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testMath221(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testMultiplyNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>5</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testMath221(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>7</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testMath221(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>9</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testMath221(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>11</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testMath221(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="31"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math3/util/MathUtils::checkNotNull</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testMultiplyNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::multiply</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>38</index><block>12</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testMultiplyInfInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::multiply</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>65</index><block>14</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testMath221(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::multiply</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>15</index><block>2</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNegate(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNegate(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNegate(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNegateNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::negate</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>20</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNegate(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::negate</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>nthRoot</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>1131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>nthRoot</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>86</index><block>16</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>nthRoot</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>118</index><block>21</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>nthRoot</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>1148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>13</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>nthRoot</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>1151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>15</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_realPartZero(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>nthRoot</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>1152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>15</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>nthRoot</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>1156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>18</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>nthRoot</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>19</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>nthRoot</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>1159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>114</index><block>21</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>nthRoot</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>1131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_NAN_Inf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>nthRoot</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>5</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_NAN_Inf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>nthRoot</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>1142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>9</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_NAN_Inf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>nthRoot</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>16</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>nthRoot</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>34</index><block>7</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_NAN_Inf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with Collections.emptyList for org/apache/commons/math3/complex/Complex::nthRoot</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>nthRoot</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>49</index><block>11</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_NAN_Inf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with Collections.emptyList for org/apache/commons/math3/complex/Complex::nthRoot</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>nthRoot</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>1162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>123</index><block>22</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with Collections.emptyList for org/apache/commons/math3/complex/Complex::nthRoot</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarPowNaNExponent(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::pow</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="9"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>814</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math3/util/MathUtils::checkNotNull</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>815</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testPowNaNBase(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::pow</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>readResolve</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>1217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSerial(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::readResolve</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>72</index><block>10</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>100</index><block>12</block><killingTest /><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>10</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>10</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>10</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>10</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>10</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>12</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>12</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocalReal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>12</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocalReal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>12</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocalReal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><block>12</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocalReal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>2</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>5</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>9</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocalReal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocalNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::reciprocal</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>25</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::reciprocal</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>34</index><block>6</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocalInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::reciprocal</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>74</index><block>11</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::reciprocal</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>104</index><block>13</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testReciprocalReal(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::reciprocal</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSin(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>6</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSin(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>862</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSin(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSinNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::sin</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>28</index><block>7</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSin(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::sin</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSinh(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>6</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSinh(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>902</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSinhInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>903</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSinhNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::sinh</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>28</index><block>7</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSinhInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::sinh</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="15"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>954</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>953</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>8</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSqrtRealZero(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>953</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>8</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSqrtRealZero(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>10</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSqrtRealZero(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>10</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSqrtRealZero(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><block>13</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSqrtInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>13</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSqrtInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>75</index><block>14</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSqrtInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>945</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSqrtRealZero(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>2</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSqrtImaginaryZero(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSqrtRealZero(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>954</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>9</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSqrtInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSqrtNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::sqrt</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>950</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>28</index><block>5</block><killingTest>org.apache.commons.math3.analysis.solvers.LaguerreSolverTest.testQuinticFunction2(org.apache.commons.math3.analysis.solvers.LaguerreSolverTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::sqrt</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>59</index><block>11</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSqrtRealZero(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::sqrt</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>77</index><block>15</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSqrtInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::sqrt</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>980</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSqrt1zNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::sqrt1z</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarSubtractInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarSubtractInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarSubtractInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarSubtractNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::subtract</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>23</index><block>5</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testScalarSubtractInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::subtract</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>5</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSubtractInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>6</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSubtract(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSubtractInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSubtractInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="19"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math3/util/MathUtils::checkNotNull</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSubtractNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::subtract</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>31</index><block>7</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testSubtractInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::subtract</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1019</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1022</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>7</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>10</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTan(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1027</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>10</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTan(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>12</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTan(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1030</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>13</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTan(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1030</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>14</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTan(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1016</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTan(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1016</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTan(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1019</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTan(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1022</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>7</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTan(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>13</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTanNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::tan</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>27</index><block>6</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTan(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::tan</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1023</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>41</index><block>9</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTan(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::tan</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1030</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>76</index><block>15</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTan(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::tan</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1070</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1073</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>7</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1076</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>10</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTanhCritical(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1077</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>10</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTanhCritical(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1078</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>12</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTanhCritical(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1080</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>13</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTanhCritical(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1080</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>14</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTanhCritical(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1067</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTanhCritical(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1067</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTanhCritical(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1070</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTanhCritical(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1073</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>7</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTanhCritical(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1068</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>13</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTanhNaN(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::tanh</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1071</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>27</index><block>6</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTanh(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::tanh</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>41</index><block>9</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTanh(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::tanh</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1080</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>76</index><block>15</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTanhCritical(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::tanh</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>19</index><block>7</block><killingTest /><description>replaced return value with "" for org/apache/commons/math3/complex/Complex::toString</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>valueOf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>valueOf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>9</index><block>2</block><killingTest /><description>replaced return value with null for org/apache/commons/math3/complex/Complex::valueOf</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>valueOf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>16</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math3/complex/Complex::valueOf</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>valueOf</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTanInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>valueOf</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTanInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>valueOf</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>4</block><killingTest /><description>replaced return value with null for org/apache/commons/math3/complex/Complex::valueOf</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math3.complex.Complex</mutatedClass><mutatedMethod>valueOf</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math3/complex/Complex;</methodDescription><lineNumber>1192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>20</index><block>6</block><killingTest>org.apache.commons.math3.complex.ComplexTest.testTanInf(org.apache.commons.math3.complex.ComplexTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/complex/Complex::valueOf</description></mutation>
</mutations>