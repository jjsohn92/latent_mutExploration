<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="14"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>buildArray</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;</methodDescription><lineNumber>1339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest.testOnePointParabola(org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest)</killingTest><description>removed call to java/util/Arrays::fill</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>buildArray</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;</methodDescription><lineNumber>1340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLinearCombinationDF3(org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/util/MathArrays::buildArray</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="120"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>buildArray</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;</methodDescription><lineNumber>1358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>buildArray</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;</methodDescription><lineNumber>1366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>48</index><block>8</block><killingTest>org.apache.commons.math3.linear.ArrayFieldVectorTest.testOuterProduct(org.apache.commons.math3.linear.ArrayFieldVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>buildArray</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;</methodDescription><lineNumber>1366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>59</index><block>11</block><killingTest>org.apache.commons.math3.linear.ArrayFieldVectorTest.testOuterProduct(org.apache.commons.math3.linear.ArrayFieldVectorTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>buildArray</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;</methodDescription><lineNumber>1358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math3.linear.ArrayFieldVectorTest.testOuterProduct(org.apache.commons.math3.linear.ArrayFieldVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>buildArray</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;</methodDescription><lineNumber>1366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>8</block><killingTest>org.apache.commons.math3.linear.FieldLUDecompositionTest.testLLowerTriangular(org.apache.commons.math3.linear.FieldLUDecompositionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>buildArray</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><block>10</block><killingTest>org.apache.commons.math3.linear.FieldLUDecompositionTest.testLLowerTriangular(org.apache.commons.math3.linear.FieldLUDecompositionTest)</killingTest><description>removed call to java/util/Arrays::fill</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>buildArray</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;</methodDescription><lineNumber>1370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>64</index><block>12</block><killingTest>org.apache.commons.math3.linear.ArrayFieldVectorTest.testOuterProduct(org.apache.commons.math3.linear.ArrayFieldVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/util/MathArrays::buildArray</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkNonNegative</mutatedMethod><methodDescription>([J)V</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckNonNegative(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkNonNegative</mutatedMethod><methodDescription>([J)V</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckNonNegative(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkNonNegative</mutatedMethod><methodDescription>([J)V</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckNonNegative(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkNonNegative</mutatedMethod><methodDescription>([J)V</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckNonNegative(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkNonNegative</mutatedMethod><methodDescription>([[J)V</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckNonNegative2D(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkNonNegative</mutatedMethod><methodDescription>([[J)V</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>3</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckNonNegative2D(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkNonNegative</mutatedMethod><methodDescription>([[J)V</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>4</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckNonNegative2D(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkNonNegative</mutatedMethod><methodDescription>([[J)V</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>45</index><block>8</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckNonNegative2D(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkNonNegative</mutatedMethod><methodDescription>([[J)V</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>49</index><block>9</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckNonNegative2D(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkNonNegative</mutatedMethod><methodDescription>([[J)V</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckNonNegative2D(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkNonNegative</mutatedMethod><methodDescription>([[J)V</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>3</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckNonNegative2D(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkNonNegative</mutatedMethod><methodDescription>([[J)V</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>4</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckNonNegative2D(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math3.analysis.function.StepFunctionTest.testPreconditions6(org.apache.commons.math3.analysis.function.StepFunctionTest)</killingTest><description>removed call to org/apache/commons/math3/util/MathArrays::checkOrder</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckOrder(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>5</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckOrder(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckOrder(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>64</index><block>10</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckOrder(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>75</index><block>12</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckOrder(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>93</index><block>16</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckOrder(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckOrder(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>4</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckOrder(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>5</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckOrder(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckOrder(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>9</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckOrder(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>10</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckOrder(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><block>12</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckOrder(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>17</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckOrder(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><block>19</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckOrder(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>103</index><block>18</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonic(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math3/util/MathArrays::checkOrder</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>126</index><block>24</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonic(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::checkOrder</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkPositive</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckPositive(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkPositive</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckPositive(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkPositive</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckPositive(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkPositive</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckPositive(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkRectangular</mutatedMethod><methodDescription>([[J)V</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckRectangular(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkRectangular</mutatedMethod><methodDescription>([[J)V</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckRectangular(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkRectangular</mutatedMethod><methodDescription>([[J)V</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>3</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckRectangular(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkRectangular</mutatedMethod><methodDescription>([[J)V</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCheckRectangular(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>removed call to org/apache/commons/math3/util/MathUtils::checkNotNull</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>76</index><block>10</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>78</index><block>11</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>84</index><block>12</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>88</index><block>12</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>102</index><block>13</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>6</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>6</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>8</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>8</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>9</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>12</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>12</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>3</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>10</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>11</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>removed call to org/apache/commons/math3/util/MathUtils::checkNotNull</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>removed call to org/apache/commons/math3/util/MathUtils::checkNotNull</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>convolve</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>1423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>107</index><block>14</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testConvolve(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/util/MathArrays::convolve</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCopyOfDouble(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/util/MathArrays::copyOf</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([DI)[D</methodDescription><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCopyOfDouble(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([DI)[D</methodDescription><lineNumber>794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCopyOfDouble(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/util/MathArrays::copyOf</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([I)[I</methodDescription><lineNumber>754</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCopyOfInt(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/util/MathArrays::copyOf</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([II)[I</methodDescription><lineNumber>778</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCopyOfInt(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([II)[I</methodDescription><lineNumber>779</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testCopyOfInt(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/util/MathArrays::copyOf</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL2DistanceDouble(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL2DistanceDouble(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL2DistanceDouble(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL2DistanceDouble(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL2DistanceDouble(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>40</index><block>4</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL2DistanceDouble(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/util/MathArrays::distance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([I[I)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL2DistanceInt(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([I[I)D</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>2</block><killingTest>org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest.testDistance(org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([I[I)D</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL2DistanceInt(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([I[I)D</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL2DistanceInt(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([I[I)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL2DistanceInt(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>([I[I)D</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>41</index><block>4</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL2DistanceInt(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/util/MathArrays::distance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL1DistanceDouble(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL1DistanceDouble(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL1DistanceDouble(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL1DistanceDouble(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>34</index><block>4</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL1DistanceDouble(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/util/MathArrays::distance1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL1DistanceInt(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>29</index><block>3</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL1DistanceInt(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>2</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL1DistanceInt(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL1DistanceInt(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distance1</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>34</index><block>4</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testL1DistanceInt(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math3/util/MathArrays::distance1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLInfDistanceDouble(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>2</block><killingTest>org.apache.commons.math3.ml.distance.ChebyshevDistanceTest.testZero(org.apache.commons.math3.ml.distance.ChebyshevDistanceTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLInfDistanceDouble(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>34</index><block>5</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLInfDistanceDouble(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/util/MathArrays::distanceInf</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLInfDistanceInt(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>29</index><block>4</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLInfDistanceInt(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>2</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLInfDistanceInt(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>distanceInf</mutatedMethod><methodDescription>([I[I)I</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>34</index><block>5</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLInfDistanceInt(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math3/util/MathArrays::distanceInf</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeAdd</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>5</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeAdd(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeAdd</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>6</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeAdd(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeAdd</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeAdd(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeAdd</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>5</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeAdd(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeAdd</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>51</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeAdd(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/util/MathArrays::ebeAdd</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>5</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeDivide(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>6</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeDivide(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeDivide(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>5</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeDivide(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>51</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeDivide(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/util/MathArrays::ebeDivide</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>5</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeMultiply(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>6</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeMultiply(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeMultiply(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>5</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeMultiply(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>51</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeMultiply(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/util/MathArrays::ebeMultiply</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeSubtract</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>5</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeSubtract(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeSubtract</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>6</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeSubtract(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeSubtract</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeSubtractPrecondition(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeSubtract</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>5</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeSubtract(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>ebeSubtract</mutatedMethod><methodDescription>([D[D)[D</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>51</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testEbeSubtract(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/util/MathArrays::ebeSubtract</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>15</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEquals(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>8</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEquals(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEquals(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEquals(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEquals(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>5</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEquals(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>8</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEquals(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>12</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEquals(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>15</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEquals(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>17</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEquals(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>72</index><block>20</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEquals(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math3/util/MathArrays::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>30</index><block>11</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEquals(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>41</index><block>13</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEquals(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>64</index><block>18</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEquals(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>15</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>8</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>17</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>72</index><block>20</block><killingTest /><description>replaced boolean return with false for org/apache/commons/math3/util/MathArrays::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>30</index><block>11</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>41</index><block>13</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>64</index><block>18</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>15</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEqualsIncludingNaN(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>8</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEqualsIncludingNaN(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEqualsIncludingNaN(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEqualsIncludingNaN(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEqualsIncludingNaN(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>5</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEqualsIncludingNaN(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>8</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEqualsIncludingNaN(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>12</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEqualsIncludingNaN(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>15</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEqualsIncludingNaN(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>17</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEqualsIncludingNaN(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>72</index><block>20</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEqualsIncludingNaN(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math3/util/MathArrays::equalsIncludingNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>30</index><block>11</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEqualsIncludingNaN(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::equalsIncludingNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>41</index><block>13</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEqualsIncludingNaN(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::equalsIncludingNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>1266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>64</index><block>18</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testArrayEqualsIncludingNaN(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::equalsIncludingNaN</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>15</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>8</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>12</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>17</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>72</index><block>20</block><killingTest /><description>replaced boolean return with false for org/apache/commons/math3/util/MathArrays::equalsIncludingNaN</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>30</index><block>11</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::equalsIncludingNaN</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>41</index><block>13</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::equalsIncludingNaN</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>equalsIncludingNaN</mutatedMethod><methodDescription>([F[F)Z</methodDescription><lineNumber>1215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>64</index><block>18</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::equalsIncludingNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonic(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math3/util/MathArrays::isMonotonic</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonic(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::isMonotonic</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>6</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>8</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>70</index><block>12</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>78</index><block>14</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>97</index><block>18</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>5</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>6</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>8</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>11</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>12</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>14</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>102</index><block>19</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math3/util/MathArrays::isMonotonic</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>46</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::isMonotonic</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>54</index><block>9</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::isMonotonic</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>74</index><block>13</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::isMonotonic</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>isMonotonic</mutatedMethod><methodDescription>([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>82</index><block>15</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/util/MathArrays::isMonotonic</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>915</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>916</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>917</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>917</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>918</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>921</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testVectorOnePair(org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>929</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>929</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>930</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>933</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>937</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="67"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>938</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testDerivatives(org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>939</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>150</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>939</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>939</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>154</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="74"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>939</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>155</index><block>0</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>162</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="74"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>164</index><block>0</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>176</index><block>2</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testHalfInfinitePos(org.apache.commons.math3.geometry.euclidean.threed.SubLineTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>179</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>180</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>945</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>171</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>185</index><block>3</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/util/MathArrays::linearCombination</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1005</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1006</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1006</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1008</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1009</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1009</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1010</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1013</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>144</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>145</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1019</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>157</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>164</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1022</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1025</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>183</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>187</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>188</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>191</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>192</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>195</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>196</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>197</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1029</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>203</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1030</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>209</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination2(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1031</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>216</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1031</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>217</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1031</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>220</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1031</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>221</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination2(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1034</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>227</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1035</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>233</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination2(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>240</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>241</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>244</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>245</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination2(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1040</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>252</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1040</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>254</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1040</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>256</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination2(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1040</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>258</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination2(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1040</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>259</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1045</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>270</index><block>2</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1045</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>273</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1045</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>274</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1045</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>277</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1045</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>278</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1042</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>265</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1048</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>283</index><block>3</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/util/MathArrays::linearCombination</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1095</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>0</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1097</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>0</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>0</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>0</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>0</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testConstructors(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>0</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>0</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>0</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>0</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>0</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><block>0</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><block>0</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>144</index><block>0</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>145</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>157</index><block>0</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>164</index><block>0</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><block>0</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><block>0</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>183</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>187</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>188</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>191</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>192</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>195</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>196</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>197</index><block>0</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>203</index><block>0</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>210</index><block>0</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>211</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>217</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>223</index><block>0</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>230</index><block>0</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>231</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>237</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>243</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>249</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>253</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>254</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>257</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>258</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>261</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>262</index><block>0</block><killingTest>org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4(org.apache.commons.math3.dfp.DfpTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>263</index><block>0</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>269</index><block>0</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>275</index><block>0</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>282</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>283</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>286</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>287</index><block>0</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>293</index><block>0</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>299</index><block>0</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>306</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>307</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>310</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>311</index><block>0</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>317</index><block>0</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>323</index><block>0</block><killingTest /><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>330</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>331</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>334</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>335</index><block>0</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>342</index><block>0</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>344</index><block>0</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>346</index><block>0</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>348</index><block>0</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>350</index><block>0</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>352</index><block>0</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>353</index><block>0</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>364</index><block>2</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>367</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>368</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>371</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>372</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>375</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>376</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>359</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>1167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>381</index><block>3</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/util/MathArrays::linearCombination</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><block>6</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>194</index><block>9</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>869</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>261</index><block>14</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>143</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>235</index><block>10</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>869</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>276</index><block>15</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>4</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationWithSingleElementArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>832</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>832</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>837</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>837</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>838</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>103</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>840</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>840</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>840</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>124</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>840</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>127</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>840</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>840</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>840</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>132</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>840</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><block>7</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>161</index><block>8</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>851</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>167</index><block>8</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination2(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>174</index><block>8</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>175</index><block>8</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>178</index><block>8</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>179</index><block>8</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination2(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>185</index><block>8</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>200</index><block>10</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>207</index><block>10</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>213</index><block>10</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination2(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>221</index><block>10</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>222</index><block>10</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>225</index><block>10</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>226</index><block>10</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination2(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>227</index><block>10</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination2(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>242</index><block>11</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination2(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>243</index><block>11</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>870</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>271</index><block>15</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>870</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>272</index><block>15</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationWithSingleElementArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationWithSingleElementArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>6</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>194</index><block>9</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>249</index><block>12</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>869</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>261</index><block>14</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationInfinite(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>35</index><block>4</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombinationWithSingleElementArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/util/MathArrays::linearCombination</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>281</index><block>16</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testLinearCombination1(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/util/MathArrays::linearCombination</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>9</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testNormalizeArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>120</index><block>24</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testNormalizeArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>96</index><block>19</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testNormalizeArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>149</index><block>29</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testNormalizeArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>18</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testNormalizeArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="15"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><block>28</block><killingTest>org.apache.commons.math3.stat.descriptive.moment.VarianceTest.testWeightedVariance(org.apache.commons.math3.stat.descriptive.moment.VarianceTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>145</index><block>28</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testNormalizeArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testNormalizeArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>5</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testNormalizeArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>9</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testNormalizeArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>11</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testNormalizeArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>17</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testNormalizeArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>103</index><block>20</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testNormalizeArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><block>24</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testNormalizeArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><block>26</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testNormalizeArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>normalizeArray</mutatedMethod><methodDescription>([DD)[D</methodDescription><lineNumber>1323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>154</index><block>30</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testNormalizeArray(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/util/MathArrays::normalizeArray</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>72</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>78</index><block>6</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>605</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>124</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>224</index><block>21</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>0</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>7</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>7</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>7</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>7</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><block>8</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>113</index><block>8</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>114</index><block>8</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><block>10</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><block>10</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>138</index><block>10</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><block>10</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>158</index><block>12</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><block>12</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>166</index><block>12</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>176</index><block>13</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><block>13</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>195</index><block>16</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>197</index><block>16</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>198</index><block>16</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>200</index><block>17</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>215</index><block>20</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>231</index><block>22</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>234</index><block>22</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>235</index><block>22</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>236</index><block>22</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>237</index><block>22</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>247</index><block>24</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>250</index><block>24</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>251</index><block>24</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>252</index><block>24</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>6</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>605</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><block>9</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>153</index><block>11</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>188</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>209</index><block>18</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>224</index><block>21</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>safeNorm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>258</index><block>26</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math3/util/MathArrays::safeNorm</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>scale</mutatedMethod><methodDescription>(D[D)[D</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testScale(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>scale</mutatedMethod><methodDescription>(D[D)[D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testScale(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>scale</mutatedMethod><methodDescription>(D[D)[D</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testScale(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>scale</mutatedMethod><methodDescription>(D[D)[D</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>33</index><block>3</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testScale(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/util/MathArrays::scale</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>scaleInPlace</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testScaleInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>scaleInPlace</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testScaleInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>scaleInPlace</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testScaleInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>4</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>78</index><block>14</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>129</index><block>26</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>166</index><block>34</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>186</index><block>37</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>62</index><block>11</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlaceFailures(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>95</index><block>19</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>157</index><block>32</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>199</index><block>38</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>203</index><block>39</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlaceFailures(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>4</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlaceFailures(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>5</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlaceFailures(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>8</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlaceFailures(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>14</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><block>20</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>129</index><block>26</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>166</index><block>34</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>186</index><block>37</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V</methodDescription><lineNumber>722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>116</index><block>24</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlace(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>removed call to java/util/Collections::sort</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>sortInPlace</mutatedMethod><methodDescription>([D[[D)V</methodDescription><lineNumber>655</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math3.util.MathArraysTest.testSortInPlaceFailures(org.apache.commons.math3.util.MathArraysTest)</killingTest><description>removed call to org/apache/commons/math3/util/MathArrays::sortInPlace</description></mutation>
</mutations>