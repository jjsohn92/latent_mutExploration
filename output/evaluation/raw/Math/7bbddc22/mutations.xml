<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;I)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendScalar(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>55</index><block>10</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>7</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>3</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="22"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>3</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="22"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>5</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;D)V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>3</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;D)V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>3</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>([Ljava/lang/Double;D)V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>6</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>27</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>7</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>11</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>15</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>20</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>24</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>68</index><block>21</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>90</index><block>27</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>98</index><block>30</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>105</index><block>32</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::add</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAddMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>18</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::add</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>24</index><block>6</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAddMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::add</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendScalar(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendScalar(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::append</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>8</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>5</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>6</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>9</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>40</index><block>11</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::append</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>7</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>8</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>7</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>9</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::append</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>49</index><block>11</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::append</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSparseIterator(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::copy</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>4</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>21</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>21</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>7</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>11</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>16</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition3(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><block>17</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>77</index><block>22</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/linear/OpenMapRealVector::dotProduct</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/linear/OpenMapRealVector::dotProduct</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>18</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/linear/OpenMapRealVector::dotProduct</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>5</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testConcurrentModification(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>41</index><block>9</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testConcurrentModification(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>8</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>5</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>8</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeDivide</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>46</index><block>10</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::ebeDivide</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>63</index><block>20</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>103</index><block>30</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>12</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>29</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>6</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>15</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>17</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>20</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>23</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>27</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>7</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testConcurrentModification(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>12</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>80</index><block>24</block><killingTest /><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>100</index><block>29</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>ebeMultiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>108</index><block>31</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::ebeMultiply</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>8</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>20</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>27</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>751</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>117</index><block>34</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>63</index><block>14</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>101</index><block>28</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>726</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math3/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>128</index><block>37</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math3/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>34</index><block>5</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>48</index><block>9</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math3/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>83</index><block>21</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math3/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>121</index><block>35</block><killingTest /><description>replaced boolean return with true for org/apache/commons/math3/linear/OpenMapRealVector::equals</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testGetDimension(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced int return with 0 for org/apache/commons/math3/linear/OpenMapRealVector::getDimension</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>8</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>8</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>8</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>19</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>19</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>17</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>14</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>92</index><block>22</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/linear/OpenMapRealVector::getDistance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>18</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/linear/OpenMapRealVector::getDistance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>24</index><block>6</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/linear/OpenMapRealVector::getDistance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntries</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSparseIterator(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::getEntries</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/linear/OpenMapRealVector::getEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>8</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>9</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>22</block><killingTest /><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>14</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>18</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><block>15</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>86</index><block>24</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/linear/OpenMapRealVector::getL1Distance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>18</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/linear/OpenMapRealVector::getL1Distance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getL1Distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>24</index><block>6</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/linear/OpenMapRealVector::getL1Distance</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>9</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>77</index><block>22</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>8</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>9</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>16</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>20</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>22</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>17</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>89</index><block>26</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/linear/OpenMapRealVector::getLInfDistance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>18</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/linear/OpenMapRealVector::getLInfDistance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getLInfDistance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>24</index><block>6</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/linear/OpenMapRealVector::getLInfDistance</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSparsity</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>2</block><killingTest /><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSparsity</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>11</index><block>2</block><killingTest /><description>replaced double return with 0.0d for org/apache/commons/math3/linear/OpenMapRealVector::getSparsity</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="5"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>65</index><block>13</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>68</index><block>14</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>5</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>5</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>7</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>15</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>10</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>13</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>14</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>5</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><block>11</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>77</index><block>16</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getSubVector</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>84</index><block>18</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::getSubVector</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>1</block><killingTest /><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>1</block><killingTest /><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>1</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>1</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>1</block><killingTest /><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>1</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>8</block><killingTest /><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>8</block><killingTest /><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>8</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>8</block><killingTest /><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>4</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>5</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testMisc(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>75</index><block>9</block><killingTest /><description>replaced int return with 0 for org/apache/commons/math3/linear/OpenMapRealVector::hashCode</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="76"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>1</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="23"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="23"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>14</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/linear/OpenMapRealVector::isDefaultValue</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>7</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>10</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>49</index><block>13</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math3/linear/OpenMapRealVector::isInfinite</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>33</index><block>8</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/linear/OpenMapRealVector::isInfinite</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>49</index><block>13</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/linear/OpenMapRealVector::isInfinite</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>3</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>567</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>7</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>25</index><block>8</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced boolean return with false for org/apache/commons/math3/linear/OpenMapRealVector::isNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>29</index><block>9</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced boolean return with true for org/apache/commons/math3/linear/OpenMapRealVector::isNaN</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAdd</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>2</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::mapAdd</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>22</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>mapAddToSelf</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>27</index><block>5</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::mapAddToSelf</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;</methodDescription><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>projection</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;</methodDescription><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>18</index><block>5</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::projection</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>18</index><block>3</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>6</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/linear/RealVector;)V</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>5</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/linear/RealVector;)V</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/linear/RealVector;)V</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>2</block><killingTest /><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/linear/RealVector;)V</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>6</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/linear/RealVector;)V</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>5</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="6"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/linear/RealVector;)V</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/linear/RealVector;)V</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTest /><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setSubVector</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/linear/RealVector;)V</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>7</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>sparseIterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition1(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::sparseIterator</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>58</index><block>17</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>14</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>7</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>11</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>8</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>14</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>17</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::setEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>66</index><block>19</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::subtract</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;</methodDescription><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;</methodDescription><lineNumber>652</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkVectorDimensions</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;</methodDescription><lineNumber>654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>18</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::subtract</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>24</index><block>6</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::subtract</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>688</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>4</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>34</index><block>8</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::toArray</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitVector</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::unitize</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitVector</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/OpenMapRealVector;</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>13</index><block>2</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::unitVector</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>12</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>8</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>unitize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>9</block><killingTest>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTest><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description></mutation>
</mutations>