<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>2</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><block>5</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>78</index><block>6</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>94</index><block>8</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>1</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>6</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>6</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>6</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>2</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>5</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>100</index><block>9</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>removed call to org/apache/commons/math/optimization/direct/MultiDirectional::evaluateSimplex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>107</index><block>10</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>replaced return value with null for org/apache/commons/math/optimization/direct/MultiDirectional::evaluateNewSimplex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>5</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="3"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><block>8</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><block>13</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>102</index><block>17</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>120</index><block>19</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><block>19</block><killingTest /><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>5</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>8</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>13</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="4"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>17</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><block>20</block><killingTest>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMath283(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="TIMED_OUT" numberOfTestsRun="0"><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>2</block><killingTest /><description>removed call to org/apache/commons/math/optimization/direct/MultiDirectional::incrementIterationsCounter</description></mutation>
</mutations>