<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>5</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testGetCovarianceMatrix(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>107</index><block>18</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testGetCovarianceMatrix(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="10"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>115</index><block>19</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>146</index><block>25</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testGetCovarianceMatrix(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>176</index><block>32</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testGetCovarianceMatrix(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>191</index><block>35</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testGetCovarianceMatrix(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>57</index><block>9</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testGetCovarianceMatrix(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>162</index><block>29</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testGetCovarianceMatrix(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>201</index><block>37</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testGetCovarianceMatrix(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>205</index><block>38</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testGetCovarianceMatrix(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>1</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testGetCovarianceMatrix(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="10"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>5</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>6</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testGetCovarianceMatrix(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="10"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><block>18</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><block>19</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testGetCovarianceMatrix(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>146</index><block>25</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testSampling(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>176</index><block>32</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testSampling(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>191</index><block>35</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testSampling(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>159</index><block>28</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testSampling(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::setColumn</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="5"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>198</index><block>36</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testSampling(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>removed call to org/apache/commons/math3/linear/RealMatrix::multiplyEntry</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>4</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testDensities(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>6</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testDensities(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>7</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testUnivariateDistribution(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testUnivariateDistribution(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>density</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>38</index><block>7</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testUnivariateDistribution(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/MultivariateNormalDistribution::density</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>getCovariances</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testGetCovarianceMatrix(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/distribution/MultivariateNormalDistribution::getCovariances</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>getExponentTerm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testUnivariateDistribution(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>getExponentTerm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><block>6</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testUnivariateDistribution(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>getExponentTerm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>3</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testUnivariateDistribution(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>getExponentTerm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>7</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testUnivariateDistribution(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>getExponentTerm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>7</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testUnivariateDistribution(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>getExponentTerm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>8</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testUnivariateDistribution(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>getExponentTerm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testUnivariateDistribution(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>getExponentTerm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>6</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testUnivariateDistribution(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>getExponentTerm</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>75</index><block>9</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testUnivariateDistribution(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/MultivariateNormalDistribution::getExponentTerm</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>getMeans</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testUnivariateDistribution(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/distribution/MultivariateNormalDistribution::getMeans</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>getStandardDeviations</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>getStandardDeviations</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>38</index><block>5</block><killingTest /><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>getStandardDeviations</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>getStandardDeviations</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>43</index><block>6</block><killingTest /><description>replaced return value with null for org/apache/commons/math3/distribution/MultivariateNormalDistribution::getStandardDeviations</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>sample</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testSampling(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>sample</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>45</index><block>7</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testSampling(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>sample</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>29</index><block>4</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testSampling(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>sample</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>60</index><block>8</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testSampling(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>sample</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>8</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testSampling(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>sample</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testSampling(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>sample</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>7</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testSampling(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>MultivariateNormalDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.MultivariateNormalDistribution</mutatedClass><mutatedMethod>sample</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>65</index><block>9</block><killingTest>org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testSampling(org.apache.commons.math3.distribution.MultivariateNormalDistributionTest)</killingTest><description>replaced return value with null for org/apache/commons/math3/distribution/MultivariateNormalDistribution::sample</description></mutation>
</mutations>