<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>removed call to org/apache/commons/math/complex/ComplexFormat::setImaginaryCharacter</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>removed call to org/apache/commons/math/complex/ComplexFormat::setImaginaryFormat</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>3</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>removed call to org/apache/commons/math/complex/ComplexFormat::setRealFormat</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>format</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testFormatObject(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>format</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testFormatObject(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>format</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>53</index><block>10</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/ComplexFormat::format</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>format</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>6</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testFormatNumber(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>format</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>68</index><block>13</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testFormatNumber(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>format</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>47</index><block>8</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>format</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>6</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>format</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>13</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testFormatNumber(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>format</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>15</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testFormatNumber(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>format</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest /><description>removed call to java/text/FieldPosition::setBeginIndex</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>format</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest /><description>removed call to java/text/FieldPosition::setEndIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>format</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>100</index><block>22</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/ComplexFormat::format</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>formatComplex</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Ljava/lang/String;</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>6</index><block>2</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testStaticFormatComplex(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>replaced return value with "" for org/apache/commons/math/complex/ComplexFormat::formatComplex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>formatDouble</mutatedMethod><methodDescription>(DLjava/text/NumberFormat;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>formatDouble</mutatedMethod><methodDescription>(DLjava/text/NumberFormat;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="28"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>formatDouble</mutatedMethod><methodDescription>(DLjava/text/NumberFormat;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>42</index><block>10</block><killingTest /><description>replaced return value with null for org/apache/commons/math/complex/ComplexFormat::formatDouble</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>getAvailableLocales</mutatedMethod><methodDescription>()[Ljava/util/Locale;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>4</index><block>1</block><killingTest /><description>replaced return value with null for org/apache/commons/math/complex/ComplexFormat::getAvailableLocales</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>getDefaultNumberFormat</mutatedMethod><methodDescription>()Ljava/text/NumberFormat;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testSetImaginaryFormatNull(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/ComplexFormat::getDefaultNumberFormat</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="6"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>getDefaultNumberFormat</mutatedMethod><methodDescription>(Ljava/util/Locale;)Ljava/text/NumberFormat;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>removed call to java/text/NumberFormat::setMaximumFractionDigits</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>getDefaultNumberFormat</mutatedMethod><methodDescription>(Ljava/util/Locale;)Ljava/text/NumberFormat;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testSetImaginaryFormatNull(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/ComplexFormat::getDefaultNumberFormat</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>getImaginaryCharacter</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>replaced return value with "" for org/apache/commons/math/complex/ComplexFormat::getImaginaryCharacter</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>getImaginaryFormat</mutatedMethod><methodDescription>()Ljava/text/NumberFormat;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testGetImaginaryFormat(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/ComplexFormat::getImaginaryFormat</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>getInstance</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/ComplexFormat;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testStaticFormatComplex(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/ComplexFormat::getInstance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>getInstance</mutatedMethod><methodDescription>(Ljava/util/Locale;)Lorg/apache/commons/math/complex/ComplexFormat;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testSetImaginaryFormatNull(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/ComplexFormat::getInstance</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>getRealFormat</mutatedMethod><methodDescription>()Ljava/text/NumberFormat;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testGetRealFormat(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/ComplexFormat::getRealFormat</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>42</index><block>12</block><killingTest /><description>replaced return value with null for org/apache/commons/math/complex/ComplexFormat::parse</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>148</index><block>28</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>152</index><block>30</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>141</index><block>27</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>192</index><block>41</block><killingTest /><description>Replaced double multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>4</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><block>21</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>148</index><block>28</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>152</index><block>30</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>160</index><block>34</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTest /><description>removed call to org/apache/commons/math/complex/ComplexFormat::parseAndIgnoreWhitespace</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>5</block><killingTest /><description>removed call to java/text/ParsePosition::setIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>86</index><block>15</block><killingTest /><description>removed call to java/text/ParsePosition::setIndex</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>91</index><block>16</block><killingTest /><description>removed call to java/text/ParsePosition::setErrorIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>102</index><block>18</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>removed call to org/apache/commons/math/complex/ComplexFormat::parseAndIgnoreWhitespace</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>120</index><block>22</block><killingTest /><description>removed call to java/text/ParsePosition::setIndex</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>166</index><block>35</block><killingTest /><description>removed call to java/text/ParsePosition::setIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>171</index><block>36</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testForgottenImaginaryCharacter(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>removed call to java/text/ParsePosition::setErrorIndex</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="22"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>181</index><block>38</block><killingTest /><description>removed call to java/text/ParsePosition::setIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>64</index><block>12</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/ComplexFormat::parse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>194</index><block>42</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/ComplexFormat::parse</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseAndIgnoreWhitespace</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseAndIgnoreWhitespace</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>removed call to java/text/ParsePosition::setIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNextCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)C</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="24"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNextCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)C</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>6</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="26"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNextCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)C</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>8</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNextCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)C</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNextCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)C</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNextCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)C</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>5</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNextCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)C</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>6</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNextCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)C</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>8</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNextCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)C</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>7</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>removed call to java/text/ParsePosition::setIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNextCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)C</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>55</index><block>10</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>replaced char return with 0 for org/apache/commons/math/complex/ComplexFormat::parseNextCharacter</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="6"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNumber</mutatedMethod><methodDescription>(Ljava/lang/String;DLjava/text/ParsePosition;)Ljava/lang/Number;</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>7</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNumber</mutatedMethod><methodDescription>(Ljava/lang/String;DLjava/text/ParsePosition;)Ljava/lang/Number;</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>6</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParsePositiveInfinity(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNumber</mutatedMethod><methodDescription>(Ljava/lang/String;DLjava/text/ParsePosition;)Ljava/lang/Number;</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>7</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParsePositiveInfinity(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNumber</mutatedMethod><methodDescription>(Ljava/lang/String;DLjava/text/ParsePosition;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>11</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParsePositiveInfinity(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNumber</mutatedMethod><methodDescription>(Ljava/lang/String;DLjava/text/ParsePosition;)Ljava/lang/Number;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>72</index><block>13</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParsePositiveInfinity(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>removed call to java/text/ParsePosition::setIndex</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNumber</mutatedMethod><methodDescription>(Ljava/lang/String;DLjava/text/ParsePosition;)Ljava/lang/Number;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>77</index><block>14</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParsePositiveInfinity(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/ComplexFormat::parseNumber</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="6"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNumber</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/ParsePosition;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNumber</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/ParsePosition;)Ljava/lang/Number;</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>3</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNumber</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/ParsePosition;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>5</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParsePositiveInfinity(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNumber</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/ParsePosition;)Ljava/lang/Number;</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>7</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParsePositiveInfinity(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseNumber</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/ParsePosition;)Ljava/lang/Number;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>76</index><block>10</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/ComplexFormat::parseNumber</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>parseObject</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testParseZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/ComplexFormat::parseObject</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>setImaginaryCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testSetImaginaryFormatNull(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>setImaginaryCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>2</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testSetImaginaryFormatNull(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>setImaginaryFormat</mutatedMethod><methodDescription>(Ljava/text/NumberFormat;)V</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testSetImaginaryFormatNull(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>ComplexFormat.java</sourceFile><mutatedClass>org.apache.commons.math.complex.ComplexFormat</mutatedClass><mutatedMethod>setRealFormat</mutatedMethod><methodDescription>(Ljava/text/NumberFormat;)V</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.apache.commons.math.complex.ComplexFormatTest.testSetImaginaryFormatNull(org.apache.commons.math.complex.ComplexFormatTest)</killingTest><description>negated conditional</description></mutation>
</mutations>