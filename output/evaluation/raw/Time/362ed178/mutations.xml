<mutations>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testGetNameNullKey(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>2</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3476684_adjustOffset_springGap(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><block>5</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>70</index><block>6</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>86</index><block>8</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3192457_adjustOffset(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3476684_adjustOffset_springGap(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>0</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3476684_adjustOffset_springGap(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>4</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3192457_adjustOffset(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>5</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3192457_adjustOffset(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>5</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3192457_adjustOffset(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>8</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3192457_adjustOffset(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>11</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3192457_adjustOffset(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>14</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3192457_adjustOffset(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>2</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3476684_adjustOffset_springGap(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>5</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3192457_adjustOffset(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>6</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3192457_adjustOffset(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>8</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3192457_adjustOffset(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>9</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3192457_adjustOffset(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>13</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3192457_adjustOffset(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>36</index><block>3</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3476684_adjustOffset_springGap(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>replaced long return with 0 for org/joda/time/DateTimeZone::adjustOffset</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>74</index><block>7</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3192457_adjustOffset(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>replaced long return with 0 for org/joda/time/DateTimeZone::adjustOffset</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>98</index><block>12</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3192457_adjustOffset(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>replaced long return with 0 for org/joda/time/DateTimeZone::adjustOffset</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>110</index><block>16</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testBug3192457_adjustOffset(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>replaced long return with 0 for org/joda/time/DateTimeZone::adjustOffset</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="18"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1010</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>4</block><killingTest>org.joda.time.TestIllegalFieldValueException.testZoneTransition(org.joda.time.TestIllegalFieldValueException)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="81"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1037</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>108</index><block>17</block><killingTest>org.joda.time.TestIllegalFieldValueException.testZoneTransition(org.joda.time.TestIllegalFieldValueException)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1037</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>115</index><block>18</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="11"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1004</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>1</block><killingTest>org.joda.time.TestDateTimeZoneCutover.test_DateTime_withZoneRetainFields_Gaza(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1012</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>5</block><killingTest>org.joda.time.TestDateTimeZoneCutover.test_DateTime_setHourAcross_NewYork_Spring(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1013</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>6</block><killingTest>org.joda.time.TestIllegalFieldValueException.testZoneTransition(org.joda.time.TestIllegalFieldValueException)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1016</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>8</block><killingTest>org.joda.time.TestDateTimeZoneCutover.test_DateTime_setHourAcross_NewYork_Spring(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="14"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>9</block><killingTest /><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1035</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>17</block><killingTest>org.joda.time.TestDateTimeZoneCutover.test_DateTime_roundCeiling_day_NewYork_Spring_preCutover(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="26"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1037</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>17</block><killingTest>org.joda.time.TestLocalDateTime_Basics.testToDateTime_RI(org.joda.time.TestLocalDateTime_Basics)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1037</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><block>18</block><killingTest /><description>Replaced XOR with AND</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="39"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1006</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTest>org.joda.time.chrono.TestLenientChronology.test_lenientChrononolgy_Turk(org.joda.time.chrono.TestLenientChronology)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1010</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>3</block><killingTest>org.joda.time.TestDateTimeZoneCutover.test_DateTime_withZoneRetainFields_Gaza(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1010</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>4</block><killingTest>org.joda.time.TestDateTimeZoneCutover.test_DateTime_withZoneRetainFields_Gaza(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1013</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>6</block><killingTest>org.joda.time.TestDateTimeZoneCutover.test_DateTime_setHourAcross_NewYork_Spring(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="4"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>9</block><killingTest>org.joda.time.TestDateTimeZoneCutover.test_DateTime_setHourAcross_NewYork_Spring(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>11</block><killingTest>org.joda.time.chrono.TestLenientChronology.test_lenientChrononolgy_Turk(org.joda.time.chrono.TestLenientChronology)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1022</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>12</block><killingTest>org.joda.time.chrono.TestLenientChronology.test_lenientChrononolgy_Turk(org.joda.time.chrono.TestLenientChronology)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1037</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>17</block><killingTest>org.joda.time.TestDateTimeZoneCutover.test_DateTime_roundCeiling_day_NewYork_Spring_preCutover(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1037</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><block>18</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1040</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>126</index><block>21</block><killingTest>org.joda.time.TestDateTimeComparator.testNullDT(org.joda.time.TestDateTimeComparator)</killingTest><description>replaced long return with 0 for org/joda/time/DateTimeZone::convertLocalToUTC</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZJ)J</methodDescription><lineNumber>980</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testGetMillisKeepLocal(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZJ)J</methodDescription><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>2</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZJ)J</methodDescription><lineNumber>983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>28</index><block>3</block><killingTest>org.joda.time.TestDateTimeZone.testGetMillisKeepLocal(org.joda.time.TestDateTimeZone)</killingTest><description>replaced long return with 0 for org/joda/time/DateTimeZone::convertLocalToUTC</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZJ)J</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>35</index><block>5</block><killingTest>org.joda.time.TestDateTimeComparator.testNullDT(org.joda.time.TestDateTimeComparator)</killingTest><description>replaced long return with 0 for org/joda/time/DateTimeZone::convertLocalToUTC</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="3"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>1</block><killingTest>org.joda.time.chrono.TestLenientChronology.test_setDayOfMonth(org.joda.time.chrono.TestLenientChronology)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>2</block><killingTest>org.joda.time.chrono.TestLenientChronology.test_lenientChrononolgy_Chicago(org.joda.time.chrono.TestLenientChronology)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>953</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testGetMillisKeepLocal(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="93"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>1</block><killingTest>org.joda.time.TestDateTime_Constructors.testConstructor_ObjectString7(org.joda.time.TestDateTime_Constructors)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>2</block><killingTest>org.joda.time.chrono.TestLenientChronology.test_lenientChrononolgy_Turk(org.joda.time.chrono.TestLenientChronology)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testGetMillisKeepLocal(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>2</block><killingTest>org.joda.time.chrono.TestLenientChronology.test_lenientChrononolgy_Turk(org.joda.time.chrono.TestLenientChronology)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>958</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>39</index><block>5</block><killingTest>org.joda.time.TestDateTimeZone.testGetMillisKeepLocal(org.joda.time.TestDateTimeZone)</killingTest><description>replaced long return with 0 for org/joda/time/DateTimeZone::convertUTCToLocal</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.joda.time.TestDateTimeZone.testEqualsHashCode(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="9"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest>org.joda.time.TestDateTimeZone.testSerialization2(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="9"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>6</block><killingTest>org.joda.time.TestDateTimeZone.testSerialization2(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>8</block><killingTest>org.joda.time.TestDateTimeZone.testEqualsHashCode(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetMillis_int(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::fixedOffsetZone</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>43</index><block>9</block><killingTest>org.joda.time.TestDateTimeZone.testTransitionFixed(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::fixedOffsetZone</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="11"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>67</index><block>13</block><killingTest /><description>replaced return value with null for org/joda/time/DateTimeZone::fixedOffsetZone</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.joda.time.TestDateTimeZone.testGetID(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>4</block><killingTest>org.joda.time.TestDateTimeZone.testGetID(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>7</block><killingTest>org.joda.time.TestDateTimeZone.testGetID(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>10</block><killingTest>org.joda.time.TestDateTimeZone.testTransitionFixed(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>12</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetMillis_int(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>14</block><killingTest>org.joda.time.TestDateTimeZone.testEqualsHashCode(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>org.joda.time.TestDateTimeZone.testForID_String(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forID</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>18</index><block>5</block><killingTest>org.joda.time.TestDateTimeZone.testForID_String(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forID</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>32</index><block>8</block><killingTest>org.joda.time.TestDateTimeZone.testGetID(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forID</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>58</index><block>15</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forID</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>69</index><block>18</block><killingTest>org.joda.time.TestDateTimeZone.testTransitionFixed(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forID</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHours</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHours_int(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forOffsetHours</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>3</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>4</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>11</block><killingTest>org.joda.time.chrono.TestISOChronology.testDurationFields(org.joda.time.chrono.TestISOChronology)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>12</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>58</index><block>19</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><block>20</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHours_int(org.joda.time.TestDateTimeZone)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>88</index><block>27</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>27</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHours_int(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><block>29</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><block>30</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHours_int(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHours_int(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>4</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHours_int(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>11</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHours_int(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>12</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHours_int(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>19</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>20</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHours_int(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>27</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHours_int(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forOffsetHoursMinutes</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>126</index><block>36</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetHours_int(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forOffsetHoursMinutes</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetMillis_int(org.joda.time.TestDateTimeZone)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetMillis_int(org.joda.time.TestDateTimeZone)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetMillis_int(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetMillis_int(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>33</index><block>10</block><killingTest>org.joda.time.TestDateTimeZone.testForOffsetMillis_int(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forOffsetMillis</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.joda.time.TestDateTimeZone.testTimeZoneConversion(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>5</block><killingTest>org.joda.time.TestDateTimeZone.testTimeZoneConversion(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>8</block><killingTest>org.joda.time.TestDateTimeZone.testForTimeZone_TimeZone(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>11</block><killingTest>org.joda.time.TestDateTimeZone.testForTimeZone_TimeZone(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>14</block><killingTest>org.joda.time.TestDateTimeZone.testTimeZoneConversion(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>16</block><killingTest>org.joda.time.TestDateTimeZone.testTimeZoneConversion(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><block>19</block><killingTest>org.joda.time.TestDateTimeZone.testForTimeZone_TimeZone(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>21</block><killingTest>org.joda.time.TestDateTimeZone.testTimeZoneConversion(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>24</block><killingTest>org.joda.time.TestDateTimeZone.testTimeZoneConversion(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>org.joda.time.TestDateTimeZone.testForTimeZone_TimeZone(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forTimeZone</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>23</index><block>6</block><killingTest>org.joda.time.TestDateTimeZone.testForTimeZone_TimeZone(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forTimeZone</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>60</index><block>15</block><killingTest>org.joda.time.TestDateTimeZone.testForTimeZone_TimeZone(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forTimeZone</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>101</index><block>25</block><killingTest>org.joda.time.TestDateTimeZone.testForTimeZone_TimeZone(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forTimeZone</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>112</index><block>28</block><killingTest>org.joda.time.TestDateTimeZone.testTimeZoneConversion(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forTimeZone</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getAvailableIDs</mutatedMethod><methodDescription>()Ljava/util/Set;</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>org.joda.time.TestDateTimeZone.testGetAvailableIDs(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with Collections.emptySet for org/joda/time/DateTimeZone::getAvailableIDs</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTest>org.joda.time.TestDateTimeZone.testForTimeZone_TimeZone(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>256</index><block>37</block><killingTest>org.joda.time.TestDateTimeZone.testTimeZoneConversion(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with "" for org/joda/time/DateTimeZone::getConvertedId</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTest>org.joda.time.TestDateTimeZone.testGetID(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>1</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>3</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>8</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>14</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>92</index><block>19</block><killingTest>org.joda.time.TestDateTimeZone.testDefault(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::getDefault</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testNameProvider(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>10</block><killingTest>org.joda.time.TestDateTimeZone.testNameProvider(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>7</block><killingTest>org.joda.time.TestDateTimeZone.testNameProvider(org.joda.time.TestDateTimeZone)</killingTest><description>removed call to java/lang/ThreadGroup::uncaughtException</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>57</index><block>13</block><killingTest>org.joda.time.TestDateTimeZone.testNameProvider(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::getDefaultNameProvider</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testProvider(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>10</block><killingTest>org.joda.time.TestDateTimeZone.testProvider(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>16</block><killingTest>org.joda.time.TestDateTimeZone.testProvider(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>7</block><killingTest>org.joda.time.TestDateTimeZone.testProvider(org.joda.time.TestDateTimeZone)</killingTest><description>removed call to java/lang/ThreadGroup::uncaughtException</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>73</index><block>15</block><killingTest /><description>removed call to java/lang/ThreadGroup::uncaughtException</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>87</index><block>19</block><killingTest>org.joda.time.TestDateTimeZone.testProvider(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::getDefaultProvider</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>org.joda.time.TestDateTimeZone.testGetID(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with "" for org/joda/time/DateTimeZone::getID</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.joda.time.TestDateTimeZone.testGetMillisKeepLocal(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>3</block><killingTest>org.joda.time.TestDateTimeZone.testGetMillisKeepLocal(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1058</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>17</index><block>4</block><killingTest>org.joda.time.TestDateTimeZone.testGetMillisKeepLocal(org.joda.time.TestDateTimeZone)</killingTest><description>replaced long return with 0 for org/joda/time/DateTimeZone::getMillisKeepLocal</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1061</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>31</index><block>7</block><killingTest>org.joda.time.TestDateTimeZone.testGetMillisKeepLocal(org.joda.time.TestDateTimeZone)</killingTest><description>replaced long return with 0 for org/joda/time/DateTimeZone::getMillisKeepLocal</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>797</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testPatchedNameKeysSydney(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with "" for org/joda/time/DateTimeZone::getName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>812</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.joda.time.TestDateTimeZone.testPatchedNameKeysSydney(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>4</block><killingTest>org.joda.time.TestDateTimeZone.testGetNameNullKey(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>7</block><killingTest>org.joda.time.TestDateTimeZone.testPatchedNameKeysSydney(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>23</index><block>5</block><killingTest>org.joda.time.TestDateTimeZone.testGetNameNullKey(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with "" for org/joda/time/DateTimeZone::getName</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>40</index><block>8</block><killingTest /><description>replaced return value with "" for org/joda/time/DateTimeZone::getName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>47</index><block>11</block><killingTest>org.joda.time.TestDateTimeZone.testPatchedNameKeysSydney(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with "" for org/joda/time/DateTimeZone::getName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>org.joda.time.TestDateTimeZone.testGetShortNameProviderName(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::getNameProvider</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)I</methodDescription><lineNumber>841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>org.joda.time.TestDateTimeZone.testGetOffset_RI(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)I</methodDescription><lineNumber>842</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>10</index><block>3</block><killingTest>org.joda.time.TestDateTimeZone.testGetOffset_RI(org.joda.time.TestDateTimeZone)</killingTest><description>replaced int return with 0 for org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)I</methodDescription><lineNumber>844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>17</index><block>6</block><killingTest>org.joda.time.TestDateTimeZone.testGetOffset_RI(org.joda.time.TestDateTimeZone)</killingTest><description>replaced int return with 0 for org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="35"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>918</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>3</block><killingTest /><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><block>9</block><killingTest>org.joda.time.TestDateTimeZone.testGetOffset_long(org.joda.time.TestDateTimeZone)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>930</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>74</index><block>11</block><killingTest>org.joda.time.TestDateTimeZone.testGetOffset_long(org.joda.time.TestDateTimeZone)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="239"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>933</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>95</index><block>13</block><killingTest>org.joda.time.TestDateTimeZoneCutover.test_getOffsetFromLocal_Moscow_Autumn(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>912</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testPatchedNameKeysSydney(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="12"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>918</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>3</block><killingTest>org.joda.time.TestDateTimeZoneCutover.test_getOffsetFromLocal_Guatemata_Autumn(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>923</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>5</block><killingTest>org.joda.time.TestDateTimeZone.testIsLocalDateTimeGap_NewYork(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="7"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>13</block><killingTest>org.joda.time.TestDateTimeZone.testIsLocalDateTimeGap_Berlin(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>933</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>13</block><killingTest>org.joda.time.TestDateTimeZone.testPatchedNameKeysSydney(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="17"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>915</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>2</block><killingTest>org.joda.time.TestDateTimeZoneCutover.testDateTimeCreation_paris(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="12"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>918</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>3</block><killingTest>org.joda.time.TestDateTimeZoneCutover.test_getOffsetFromLocal_Guatemata_Autumn(org.joda.time.TestDateTimeZoneCutover)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>924</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>6</block><killingTest>org.joda.time.TestDateTimeZone.testIsLocalDateTimeGap_NewYork(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>9</block><killingTest>org.joda.time.TestDateTimeZone.testGetOffset_long(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>930</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>11</block><killingTest>org.joda.time.TestDateTimeZone.testPatchedNameKeysSydney(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>933</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>13</block><killingTest>org.joda.time.TestDateTimeZone.testGetOffset_long(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>55</index><block>7</block><killingTest>org.joda.time.TestDateTimeZone.testIsLocalDateTimeGap_NewYork(org.joda.time.TestDateTimeZone)</killingTest><description>replaced int return with 0 for org/joda/time/DateTimeZone::getOffsetFromLocal</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>99</index><block>14</block><killingTest>org.joda.time.TestDateTimeZone.testIsLocalDateTimeGap_Berlin(org.joda.time.TestDateTimeZone)</killingTest><description>replaced int return with 0 for org/joda/time/DateTimeZone::getOffsetFromLocal</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>938</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>103</index><block>15</block><killingTest>org.joda.time.TestDateTimeZone.testGetOffset_long(org.joda.time.TestDateTimeZone)</killingTest><description>replaced int return with 0 for org/joda/time/DateTimeZone::getOffsetFromLocal</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>4</index><block>0</block><killingTest>org.joda.time.TestDateTimeZone.testProvider(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::getProvider</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testNameProvider(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with "" for org/joda/time/DateTimeZone::getShortName</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>772</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>776</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>4</block><killingTest>org.joda.time.TestDateTimeZone.testGetShortNameNullKey(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>7</block><killingTest>org.joda.time.TestDateTimeZone.testNameProvider(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>777</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>23</index><block>5</block><killingTest>org.joda.time.TestDateTimeZone.testGetShortNameNullKey(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with "" for org/joda/time/DateTimeZone::getShortName</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>40</index><block>8</block><killingTest /><description>replaced return value with "" for org/joda/time/DateTimeZone::getShortName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>47</index><block>11</block><killingTest>org.joda.time.TestDateTimeZone.testNameProvider(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with "" for org/joda/time/DateTimeZone::getShortName</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>2</block><killingTest>org.joda.time.TestDateTimeZone.testEqualsHashCode(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>8</index><block>2</block><killingTest>org.joda.time.TestDateTimeZone.testEqualsHashCode(org.joda.time.TestDateTimeZone)</killingTest><description>replaced int return with 0 for org/joda/time/DateTimeZone::hashCode</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testIsLocalDateTimeGap_NewYork(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>27</index><block>5</block><killingTest>org.joda.time.TestDateTimeZone.testIsLocalDateTimeGap_NewYork(org.joda.time.TestDateTimeZone)</killingTest><description>replaced boolean return with false for org/joda/time/DateTimeZone::isLocalDateTimeGap</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>9</index><block>2</block><killingTest /><description>replaced boolean return with true for org/joda/time/DateTimeZone::isLocalDateTimeGap</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>20</index><block>4</block><killingTest>org.joda.time.TestDateTimeZone.testIsLocalDateTimeGap_NewYork(org.joda.time.TestDateTimeZone)</killingTest><description>replaced boolean return with true for org/joda/time/DateTimeZone::isLocalDateTimeGap</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isStandardOffset</mutatedMethod><methodDescription>(J)Z</methodDescription><lineNumber>872</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.joda.time.TestDateTimeZone.testGetOffset_long(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isStandardOffset</mutatedMethod><methodDescription>(J)Z</methodDescription><lineNumber>872</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>15</index><block>5</block><killingTest>org.joda.time.TestDateTimeZone.testGetOffset_long(org.joda.time.TestDateTimeZone)</killingTest><description>replaced boolean return with true for org/joda/time/DateTimeZone::isStandardOffset</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="12"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>offsetFormatter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>698</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest /><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>offsetFormatter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>24</index><block>5</block><killingTest>org.joda.time.TestDateTimeZone.testTransitionFixed(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::offsetFormatter</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>15</index><block>4</block><killingTest>org.joda.time.TestDateTimeZone.testEqualsHashCode(org.joda.time.TestDateTimeZone)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>16</index><block>4</block><killingTest>org.joda.time.TestDateTimeZone.testEqualsHashCode(org.joda.time.TestDateTimeZone)</killingTest><description>replaced int return with 0 for org/joda/time/DateTimeZone::parseOffset</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>660</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testPatchedNameKeysSydney(org.joda.time.TestDateTimeZone)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>27</index><block>5</block><killingTest>org.joda.time.TestDateTimeZone.testTimeZoneConversion(org.joda.time.TestDateTimeZone)</killingTest><description>removed negation</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>667</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>6</block><killingTest>org.joda.time.TestDateTimeZone.testPatchedNameKeysSydney(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>7</block><killingTest>org.joda.time.TestDateTimeZone.testTimeZoneConversion(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>7</block><killingTest>org.joda.time.TestDateTimeZone.testTimeZoneConversion(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>7</block><killingTest>org.joda.time.TestDateTimeZone.testPatchedNameKeysSydney(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>9</block><killingTest>org.joda.time.TestDateTimeZone.testPatchedNameKeysSydney(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>9</block><killingTest>org.joda.time.TestDateTimeZone.testPatchedNameKeysSydney(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><block>12</block><killingTest>org.joda.time.TestDateTimeZone.testForID_String(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>107</index><block>14</block><killingTest>org.joda.time.TestDateTimeZone.testForID_String(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>14</block><killingTest>org.joda.time.TestDateTimeZone.testForID_String(org.joda.time.TestDateTimeZone)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>660</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testPatchedNameKeysSydney(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>9</block><killingTest>org.joda.time.TestDateTimeZone.testPatchedNameKeysSydney(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>14</block><killingTest>org.joda.time.TestDateTimeZone.testForID_String(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>6</block><killingTest>org.joda.time.TestDateTimeZone.testPatchedNameKeysSydney(org.joda.time.TestDateTimeZone)</killingTest><description>removed call to org/joda/time/format/FormatUtils::appendPaddedInteger</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="10"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>66</index><block>8</block><killingTest>org.joda.time.TestDateTimeZone.testTimeZoneConversion(org.joda.time.TestDateTimeZone)</killingTest><description>removed call to org/joda/time/format/FormatUtils::appendPaddedInteger</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="2"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>101</index><block>13</block><killingTest>org.joda.time.TestDateTimeZone.testForID_String(org.joda.time.TestDateTimeZone)</killingTest><description>removed call to org/joda/time/format/FormatUtils::appendPaddedInteger</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>688</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>130</index><block>18</block><killingTest /><description>removed call to org/joda/time/format/FormatUtils::appendPaddedInteger</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>83</index><block>11</block><killingTest>org.joda.time.TestDateTimeZone.testPatchedNameKeysSydney(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with "" for org/joda/time/DateTimeZone::printOffset</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>684</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>118</index><block>16</block><killingTest>org.joda.time.TestDateTimeZone.testForID_String(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with "" for org/joda/time/DateTimeZone::printOffset</description></mutation>
<mutation detected="false" status="SURVIVED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>135</index><block>20</block><killingTest /><description>replaced return value with "" for org/joda/time/DateTimeZone::printOffset</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testDefault(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>4</block><killingTest>org.joda.time.TestDateTimeZone.testDefault(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>3</block><killingTest /><description>removed call to java/lang/SecurityManager::checkPermission</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setNameProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/NameProvider;)V</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testNameProvider(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setNameProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/NameProvider;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>3</block><killingTest /><description>removed call to java/lang/SecurityManager::checkPermission</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setNameProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/NameProvider;)V</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>4</block><killingTest>org.joda.time.TestDateTimeZone.testNameProvider(org.joda.time.TestDateTimeZone)</killingTest><description>removed call to org/joda/time/DateTimeZone::setNameProvider0</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)V</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testProvider(org.joda.time.TestDateTimeZone)</killingTest><description>negated conditional</description></mutation>
<mutation detected="false" status="NO_COVERAGE" numberOfTestsRun="0"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)V</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>3</block><killingTest /><description>removed call to java/lang/SecurityManager::checkPermission</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)V</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>4</block><killingTest>org.joda.time.TestDateTimeZone.testProvider(org.joda.time.TestDateTimeZone)</killingTest><description>removed call to org/joda/time/DateTimeZone::setProvider0</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testToString(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with "" for org/joda/time/DateTimeZone::toString</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>toTimeZone</mutatedMethod><methodDescription>()Ljava/util/TimeZone;</methodDescription><lineNumber>1259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testToTimeZone(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::toTimeZone</description></mutation>
<mutation detected="true" status="KILLED" numberOfTestsRun="1"><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>writeReplace</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>1294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>org.joda.time.TestDateTimeZone.testSerialization1(org.joda.time.TestDateTimeZone)</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::writeReplace</description></mutation>
</mutations>